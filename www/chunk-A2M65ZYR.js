import{a as $}from"./chunk-N4FKO75N.js";import{a as p,b as x}from"./chunk-ZFUZ5UD4.js";import{E as j,H as E,d as y,f as u,j as h,r as C}from"./chunk-QQQKELKR.js";import{a as m,b as g,k as v}from"./chunk-CRC5ZNR6.js";var F=(()=>{let d=class d{constructor(n,t){this.supabaseClientService=n,this.dataUpdateService=t,this.clientesSubject=new y([]),this.clientes$=this.clientesSubject.asObservable()}getSupabaseClient(){return console.log("\u{1F465} ClientesService: Obteniendo cliente Supabase actualizado..."),this.supabaseClientService.getClient()}getClientes(n=1,t=10,e,o,c,s=!1){let i=this.getSupabaseClient().from("clientes").select("*",{count:"exact"});e&&(i=i.or(`nombre_completo.ilike.%${e}%,email.ilike.%${e}%`)),s&&(i=i.eq("es_activo",!0));let a=(n-1)*t;return i=i.range(a,a+t-1).order(o||"fecha_creacion",{ascending:c==="asc"}),u(i).pipe(h(({data:r,error:f,count:w})=>{if(f)throw f;let l=r;return this.clientesSubject.next(l),{clientes:l,total:w||0,pagina:n,por_pagina:t}}),C(r=>{throw console.error("Error al obtener clientes:",r),r}))}getClientesDirect(n=1,t=10,e,o,c,s=!1){return console.log("\u{1F680} ClientesService: Usando FETCH DIRECTO para clientes..."),u(this.fetchClientesDirect(n,t,e,o,c,s)).pipe(h(i=>(console.log("\u2705 ClientesService: FETCH DIRECTO completado, clientes:",i.clientes.length),this.clientesSubject.next(i.clientes),i)),C(i=>{throw console.error("\u274C ClientesService: Error en FETCH DIRECTO:",i),i}))}fetchClientesDirect(n=1,t=10,e,o,c,s=!1){return v(this,null,function*(){console.log("\u{1F680} ClientesService: Ejecutando fetch directo para clientes...");try{let i=`${p.supabaseUrl}/rest/v1/clientes?select=*`,a=[];e&&a.push(`or=(nombre_completo.ilike.*${e}*,email.ilike.*${e}*)`),s&&a.push("es_activo=eq.true"),a.length>0&&(i+="&"+a.join("&"));let r=(n-1)*t;i+=`&limit=${t}&offset=${r}`,i+=`&order=${o||"fecha_creacion"}.${c==="asc"?"asc":"desc"}`;let f={apikey:p.supabaseServiceKey,Authorization:`Bearer ${p.supabaseServiceKey}`,"Content-Type":"application/json",Prefer:"count=exact"};console.log("\u{1F680} URL construida:",i);let w=Date.now(),l=yield fetch(i,{method:"GET",headers:f}),z=Date.now()-w;if(console.log("\u{1F680} Fetch completado en",z,"ms"),console.log("\u{1F680} Status:",l.status),!l.ok){let I=yield l.text();throw console.error("\u{1F680} Error response body:",I),new Error(`HTTP ${l.status}: ${l.statusText}`)}let S=yield l.json(),T=l.headers.get("content-range"),D=T?parseInt(T.split("/")[1]):S.length;return console.log("\u{1F680} Datos recibidos:",(S==null?void 0:S.length)||0,"clientes, total:",D),{clientes:S,total:D,pagina:n,por_pagina:t}}catch(i){throw console.error("\u{1F680} Error en fetch directo:",i),i}})}getCliente(n){return u(this.getSupabaseClient().from("clientes").select("*").eq("id",n).single()).pipe(h(({data:t,error:e})=>{if(e)throw e;return t}))}crearCliente(n){var e;let t=g(m({},n),{fecha_creacion:new Date().toISOString(),es_activo:(e=n.es_activo)!=null?e:!0});return u(this.getSupabaseClient().from("clientes").insert([t]).select().single()).pipe(h(({data:o,error:c})=>{if(c)throw c;let s=o,i=this.clientesSubject.value;return this.clientesSubject.next([s,...i]),this.dataUpdateService.notifyCreated("clientes"),s}))}actualizarCliente(n,t){let e=g(m({},t),{fecha_actualizacion:new Date().toISOString()});return u(this.getSupabaseClient().from("clientes").update(e).eq("id",n).select().single()).pipe(h(({data:o,error:c})=>{if(c)throw c;let s=o,i=this.clientesSubject.value,a=i.findIndex(r=>r.id===n);return a!==-1&&(i[a]=s,this.clientesSubject.next([...i])),this.dataUpdateService.notifyUpdated("clientes"),s}))}actualizarClienteDirect(n,t){return console.log("\u{1F680} ClientesService: Usando FETCH DIRECTO para actualizar cliente..."),u(this.fetchActualizarClienteDirect(n,t)).pipe(h(e=>{console.log("\u2705 ClientesService: FETCH DIRECTO completado, cliente actualizado:",e.id);let o=this.clientesSubject.value,c=o.findIndex(s=>s.id===n);return c!==-1&&(o[c]=e,this.clientesSubject.next([...o])),this.dataUpdateService.notifyUpdated("clientes"),e}),C(e=>{throw console.error("\u274C ClientesService: Error en FETCH DIRECTO:",e),e}))}fetchActualizarClienteDirect(n,t){return v(this,null,function*(){console.log("\u{1F680} ClientesService: Ejecutando fetch directo para actualizar cliente:",n);try{let e=g(m({},t),{fecha_actualizacion:new Date().toISOString()}),o=`${p.supabaseUrl}/rest/v1/clientes?id=eq.${n}`,c={apikey:p.supabaseServiceKey,Authorization:`Bearer ${p.supabaseServiceKey}`,"Content-Type":"application/json",Prefer:"return=representation"};console.log("\u{1F680} URL construida:",o),console.log("\u{1F680} Datos a actualizar:",e);let s=Date.now(),i=yield fetch(o,{method:"PATCH",headers:c,body:JSON.stringify(e)}),a=Date.now()-s;if(console.log("\u{1F680} Fetch completado en",a,"ms"),console.log("\u{1F680} Status:",i.status),!i.ok){let f=yield i.text();throw console.error("\u{1F680} Error response body:",f),new Error(`HTTP ${i.status}: ${i.statusText}`)}let r=yield i.json();if(console.log("\u{1F680} Datos recibidos:",(r==null?void 0:r.length)||0,"clientes actualizados"),!r||r.length===0)throw new Error("Cliente no encontrado");return r[0]}catch(e){throw console.error("\u{1F680} Error en fetch directo:",e),e}})}eliminarCliente(n){return u(this.getSupabaseClient().from("clientes").update({es_activo:!1,fecha_actualizacion:new Date().toISOString()}).eq("id",n)).pipe(h(({error:t})=>{if(t)throw t;let e=this.clientesSubject.value,o=e.findIndex(c=>c.id===n);o!==-1&&(e[o].es_activo=!1,this.clientesSubject.next([...e])),this.dataUpdateService.notifyDeleted("clientes")}))}eliminarClienteDirect(n){return console.log("\u{1F680} ClientesService: Usando FETCH DIRECTO para eliminar cliente..."),u(this.fetchEliminarClienteDirect(n)).pipe(h(()=>{console.log("\u2705 ClientesService: FETCH DIRECTO completado, cliente eliminado:",n);let t=this.clientesSubject.value,e=t.findIndex(o=>o.id===n);e!==-1&&(t[e].es_activo=!1,this.clientesSubject.next([...t])),this.dataUpdateService.notifyDeleted("clientes")}),C(t=>{throw console.error("\u274C ClientesService: Error en FETCH DIRECTO:",t),t}))}fetchEliminarClienteDirect(n){return v(this,null,function*(){console.log("\u{1F680} ClientesService: Ejecutando fetch directo para eliminar cliente:",n);try{let t={es_activo:!1,fecha_actualizacion:new Date().toISOString()},e=`${p.supabaseUrl}/rest/v1/clientes?id=eq.${n}`,o={apikey:p.supabaseServiceKey,Authorization:`Bearer ${p.supabaseServiceKey}`,"Content-Type":"application/json"};console.log("\u{1F680} URL construida:",e),console.log("\u{1F680} Datos a actualizar:",t);let c=Date.now(),s=yield fetch(e,{method:"PATCH",headers:o,body:JSON.stringify(t)}),i=Date.now()-c;if(console.log("\u{1F680} Fetch completado en",i,"ms"),console.log("\u{1F680} Status:",s.status),!s.ok){let a=yield s.text();throw console.error("\u{1F680} Error response body:",a),new Error(`HTTP ${s.status}: ${s.statusText}`)}console.log("\u{1F680} Cliente eliminado exitosamente")}catch(t){throw console.error("\u{1F680} Error en fetch directo:",t),t}})}buscarClientes(n){return u(this.getSupabaseClient().from("clientes").select("*").or(`nombre_completo.ilike.%${n}%,email.ilike.%${n}%`).eq("es_activo",!0).limit(10)).pipe(h(({data:t,error:e})=>{if(e)throw e;return t}))}getClientesActuales(){return this.clientesSubject.value}limpiarClientes(){this.clientesSubject.next([])}};d.\u0275fac=function(t){return new(t||d)(E(x),E($))},d.\u0275prov=j({token:d,factory:d.\u0275fac,providedIn:"root"});let b=d;return b})();export{F as a};
