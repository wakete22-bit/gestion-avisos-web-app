import{a as E}from"./chunk-IBLFXVNU.js";import{a as A}from"./chunk-QTJDJKS7.js";import{a as P}from"./chunk-TI3GP5EW.js";import{B as m,F as S,I as g,f as _,k as p,n as C,z as u}from"./chunk-GZDKEEK6.js";var R=(()=>{let h=class h{constructor(e,a,t){this.avisosService=e,this.facturasService=a,this.presupuestosService=t}obtenerEstadoFlujo(e){return this.avisosService.getResumenCompletoAviso(e).pipe(p(a=>({avisoId:e,estadoActual:a.estado,puedeCrearPresupuesto:this.puedeCrearPresupuesto(a),puedeAprobarPresupuesto:this.puedeAprobarPresupuesto(a),puedeFacturarPresupuesto:this.puedeFacturarPresupuesto(a),puedeFacturarTrabajos:this.puedeFacturarTrabajos(a),puedeCompletarAviso:this.puedeCompletarAviso(a),resumen:a})))}ejecutarFlujoCompleto(e,a=!0){return a?this.flujoConPresupuesto(e):this.flujoDirectoSinPresupuesto(e)}flujoDirectoSinPresupuesto(e){return this.avisosService.actualizarAviso(e,{estado:"En curso",requiere_presupuesto:!1}).pipe(m(()=>console.log("\u2705 Aviso actualizado para trabajo directo")),u(()=>this.avisosService.getResumenCompletoAviso(e)),p(a=>({paso:"flujo_directo_iniciado",avisoId:e,mensaje:"Flujo directo iniciado. El t\xE9cnico puede comenzar a trabajar.",resumen:a})))}flujoConPresupuesto(e){return this.avisosService.actualizarAviso(e,{estado:"Pendiente de presupuesto",requiere_presupuesto:!0}).pipe(m(()=>console.log("\u2705 Aviso marcado como requiere presupuesto")),u(()=>this.presupuestosService.crearPresupuesto({aviso_id:e,horas_estimadas:2,total_estimado:0})),m(()=>console.log("\u2705 Presupuesto creado")),p(a=>({paso:"presupuesto_creado",avisoId:e,presupuestoId:a.id,mensaje:"Presupuesto creado. Pendiente de evaluaci\xF3n y aprobaci\xF3n.",presupuesto:a})))}aprobarPresupuesto(e){return this.presupuestosService.cambiarEstado(e,"Completado").pipe(u(a=>this.avisosService.actualizarAviso(a.aviso_id,{estado:"En curso"})),m(()=>console.log("\u2705 Presupuesto aprobado y aviso en curso")),p(a=>({paso:"presupuesto_aprobado",avisoId:a.id,mensaje:"Presupuesto aprobado. El t\xE9cnico puede comenzar a trabajar.",aviso:a})))}facturarPresupuesto(e){return this.facturasService.crearFacturaDesdePresupuesto(e).pipe(m(()=>console.log("\u2705 Factura creada desde presupuesto")),u(a=>this.avisosService.actualizarEstadoAutomatico(a.factura.aviso_id).pipe(p(()=>a))),p(a=>({paso:"factura_desde_presupuesto",avisoId:a.factura.aviso_id,facturaId:a.factura.id,mensaje:"Factura generada autom\xE1ticamente desde presupuesto aprobado.",factura:a})))}facturarTrabajos(e){return console.log("\u{1F527} Iniciando facturaci\xF3n de trabajos para aviso:",e),this.avisosService.getResumenCompletoAviso(e).pipe(u(a=>{var i;if(console.log("\u{1F527} Resumen completo obtenido:",a),!a.estadisticas.trabajosFinalizados)throw new Error("No hay trabajos finalizados para facturar. Debes crear un albar\xE1n primero.");let t=((i=a.trabajos)==null?void 0:i.filter(r=>{var c;return!r.albaran_id||!((c=r.albaran)!=null&&c.estado_cierre)||r.albaran.estado_cierre==="Otra visita"}))||[];if(t.length>0){let r=t.map(c=>{var v;return`Trabajo #${(v=c.id)==null?void 0:v.substring(0,8)} (${c.descripcion})`}).join(", ");throw new Error(`No se puede facturar. Los siguientes trabajos no tienen albaranes cerrados: ${r}. Debes cerrar todos los albaranes antes de facturar.`)}console.log("\u{1F527} Cliente del resumen:",a.cliente);let n=this.convertirDatosAFactura({avisoId:e,cliente:a.cliente,resumen:a});return this.facturasService.getSiguienteNumero().pipe(u(r=>(n.numero_factura=r,console.log("\u{1F527} N\xFAmero de factura generado:",r),this.facturasService.crearFactura(n))))}),m(()=>console.log("\u2705 Factura creada desde trabajos realizados")),u(()=>this.avisosService.getResumenCompletoAviso(e)),p(a=>({paso:"factura_creada_desde_trabajos",avisoId:e,mensaje:"Factura creada exitosamente desde trabajos realizados",resumen:a})))}verificarEstadoFactura(e,a){return this.avisosService.getResumenCompletoAviso(a).pipe(u(t=>t.estado==="Completado"?this.facturasService.cambiarEstado(e,"Completado"):t.estado==="Listo para facturar"?this.facturasService.cambiarEstado(e,"En curso"):_([{id:e,estado:"Pendiente"}])))}sincronizarEstadosFacturas(e){return this.avisosService.getResumenCompletoAviso(e).pipe(u(a=>{if(!a.facturas||a.facturas.length===0)return _([{mensaje:"No hay facturas para sincronizar"}]);let t;a.estado==="Completado"?t="Completado":a.estado==="Listo para facturar"?t="En curso":t="Pendiente";let n=a.facturas.map(i=>this.facturasService.cambiarEstado(i.id,t));return C(n).pipe(p(()=>({mensaje:`Estados de ${a.facturas.length} factura(s) sincronizados a "${t}"`,avisoId:e,nuevoEstado:t})))}))}completarAviso(e){return this.avisosService.getResumenCompletoAviso(e).pipe(u(a=>{var n;if(!this.puedeCompletarAviso(a))throw new Error("No se puede completar el aviso. Verifica que haya trabajos finalizados y facturas generadas.");let t=((n=a.trabajos)==null?void 0:n.filter(i=>{var r;return!i.albaran_id||!((r=i.albaran)!=null&&r.estado_cierre)}))||[];if(t.length>0){let i=t.map(r=>{var c;return`Trabajo #${(c=r.id)==null?void 0:c.substring(0,8)} (${r.descripcion})`}).join(", ");throw new Error(`No se puede completar el aviso. Los siguientes trabajos no tienen albaranes cerrados: ${i}. Debes cerrar todos los albaranes antes de completar el aviso.`)}return this.avisosService.actualizarAviso(e,{estado:"Completado",fecha_finalizacion:new Date}).pipe(u(i=>{if(a.facturas&&a.facturas.length>0){let r=a.facturas.map(c=>this.facturasService.cambiarEstado(c.id,"Completado"));return C(r).pipe(p(()=>i))}return _([i])}))}),m(()=>console.log("\u2705 Aviso completado exitosamente")),u(()=>this.avisosService.getResumenCompletoAviso(e)),p(a=>({paso:"aviso_completado",avisoId:e,mensaje:"Aviso marcado como completado",resumen:a})))}obtenerAccionesDisponibles(e){return this.obtenerEstadoFlujo(e).pipe(p(a=>{let t=[];return a.puedeFacturarTrabajos&&t.push("facturar_trabajos"),a.puedeCompletarAviso&&t.push("completar_aviso"),t}))}puedeCrearPresupuesto(e){return!1}puedeAprobarPresupuesto(e){return!1}puedeFacturarPresupuesto(e){return!1}puedeFacturarTrabajos(e){return e.estadisticas.albaranesCerrados>0&&e.estadisticas.facturasPendientes===0}puedeCompletarAviso(e){return e.estadisticas.albaranesCerrados>0&&e.estadisticas.totalFacturas>0}convertirDatosAFactura(e){var v;if(console.log("\u{1F527} Datos de factura recibidos:",e),!e.cliente||!e.cliente.id)throw new Error("Datos de cliente incompletos para crear factura");let a=[],t=0;e.resumen.albaranes&&e.resumen.albaranes.length>0&&(console.log("\u{1F527} Calculando horas totales de todos los albaranes:",e.resumen.albaranes.length,"albaranes"),e.resumen.albaranes.forEach((o,d)=>{if(o.hora_entrada&&o.hora_salida){let s=new Date(`2000-01-01T${o.hora_entrada}`),b=(new Date(`2000-01-01T${o.hora_salida}`).getTime()-s.getTime())/(1e3*60*60),l=Math.max(0,b);console.log(`\u{1F527} Albar\xE1n #${d+1}: ${o.hora_entrada} - ${o.hora_salida} = ${l.toFixed(2)} horas`),t+=l}}),console.log("\u{1F527} Horas totales acumuladas:",t.toFixed(2),"horas")),t>0&&a.push({tipo:"mano_obra",nombre:"Mano de obra",cantidad:t,precio_neto:50,precio_pvp:50,descripcion:`Trabajo realizado: ${t.toFixed(2)} horas (${((v=e.resumen.albaranes)==null?void 0:v.length)||0} albaranes)`});let n=new Map;e.resumen.albaranes&&e.resumen.albaranes.length>0&&(console.log("\u{1F527} Consolidando repuestos de todos los albaranes..."),e.resumen.albaranes.forEach((o,d)=>{console.log(`\u{1F527} Procesando albar\xE1n #${d+1}:`,o.id),o.repuestos&&o.repuestos.length>0&&o.repuestos.forEach(s=>{if(s&&s.cantidad&&s.cantidad>0){let f=s.nombre||"Repuesto sin nombre",b=f.toLowerCase();if(n.has(b)){let l=n.get(b);l.cantidad_total+=parseFloat(s.cantidad),l.precio_total+=parseFloat(s.precio_pvp||0)*parseFloat(s.cantidad),l.albaranes.push(d+1),console.log(`\u{1F527} Repuesto consolidado: ${f} - Cantidad total: ${l.cantidad_total}`)}else n.set(b,{nombre:f,cantidad_total:parseFloat(s.cantidad),precio_unitario:parseFloat(s.precio_neto||0),precio_total:parseFloat(s.precio_pvp||0)*parseFloat(s.cantidad),unidad:s.unidad||"unidad",albaranes:[d+1]}),console.log(`\u{1F527} Nuevo repuesto: ${f} - Cantidad: ${s.cantidad}`)}}),o.repuestos_utilizados&&Array.isArray(o.repuestos_utilizados)&&o.repuestos_utilizados.forEach(s=>{if(s){let f=typeof s=="string"?s:s.nombre||"Repuesto sin nombre",b=f.toLowerCase();if(n.has(b)){let l=n.get(b);l.cantidad_total+=1,l.albaranes.push(d+1),console.log(`\u{1F527} Repuesto consolidado: ${f} - Cantidad total: ${l.cantidad_total}`)}else n.set(b,{nombre:f,cantidad_total:1,precio_unitario:0,precio_total:0,unidad:"unidad",albaranes:[d+1]}),console.log(`\u{1F527} Nuevo repuesto: ${f}`)}})})),n.forEach((o,d)=>{a.push({tipo:"repuesto",nombre:o.nombre,cantidad:o.cantidad_total,precio_neto:o.precio_unitario,precio_pvp:o.precio_unitario>0?o.precio_unitario:0,descripcion:`${o.nombre} - ${o.cantidad_total} ${o.unidad} (usado en albaranes: ${o.albaranes.join(", ")})`})});let i=a.reduce((o,d)=>{let s=(d.precio_pvp||0)*(d.cantidad||0);return o+s},0),r=+(i*.21).toFixed(2),c=+(i+r).toFixed(2);return console.log("\u{1F527} L\xEDneas de factura consolidadas:",a.length,"l\xEDneas"),console.log("\u{1F527} Subtotal consolidado:",i.toFixed(2),"\u20AC"),console.log("\u{1F527} IVA:",r.toFixed(2),"\u20AC"),console.log("\u{1F527} Total consolidado:",c.toFixed(2),"\u20AC"),a.forEach((o,d)=>{console.log(`\u{1F527} L\xEDnea ${d+1}:`,{tipo:o.tipo,nombre:o.nombre,cantidad:o.cantidad,precio_neto:o.precio_neto,precio_pvp:o.precio_pvp,descripcion:o.descripcion})}),{cliente_id:e.cliente.id,nombre_cliente:e.cliente.nombre_completo,direccion_cliente:e.cliente.direccion||"",cif_cliente:e.cliente.cif||"",email_cliente:e.cliente.email||"",aviso_id:e.avisoId,fecha_emision:new Date().toISOString().split("T")[0],estado:"Pendiente",subtotal:i,iva:r,total:c,lineas:a}}};h.\u0275fac=function(a){return new(a||h)(g(A),g(P),g(E))},h.\u0275prov=S({token:h,factory:h.\u0275fac,providedIn:"root"});let j=h;return j})();export{R as a};
