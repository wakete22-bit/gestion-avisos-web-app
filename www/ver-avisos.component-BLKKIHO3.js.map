{
  "version": 3,
  "sources": ["src/app/modules/avisos/components/crear-trabajos-realizados/crear-trabajos-realizados.component.ts", "src/app/modules/avisos/components/crear-trabajos-realizados/crear-trabajos-realizados.component.html", "src/app/core/services/albaranes.service.ts", "src/app/modules/avisos/components/hacer-albaran/hacer-albaran.component.ts", "src/app/modules/avisos/components/hacer-albaran/hacer-albaran.component.html", "src/app/shared/components/flujo-estado/flujo-estado.component.ts", "src/app/shared/components/flujo-estado/flujo-estado.component.html", "src/app/modules/avisos/components/ver-avisos/ver-avisos.component.ts", "src/app/modules/avisos/components/ver-avisos/ver-avisos.component.html"],
  "sourcesContent": ["import { Component, Input, OnInit, AfterViewInit, ElementRef, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { IonicModule, ModalController } from '@ionic/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { addIcons } from 'ionicons';\r\nimport { arrowForward, personOutline, mailOutline, chevronDownOutline, copyOutline, shieldOutline, informationCircleOutline, cloudUploadOutline, closeOutline, save, saveOutline, trashOutline, timeOutline, calendarOutline, documentTextOutline, addOutline, searchOutline } from 'ionicons/icons';\r\nimport { ViewportService } from 'src/app/core/services/viewport.service';\r\nimport { InventarioService } from '../../../inventario/services/inventario.service';\r\nimport { Inventario } from '../../../inventario/models/inventario.model';\r\nimport { MaterialTrabajo, TrabajoRealizado } from '../../models/trabajo-realizado.model';\r\nimport { Subject, takeUntil, firstValueFrom } from 'rxjs';\r\nimport { TrabajosService } from '../../../../core/services/trabajos.service';\r\n\r\n@Component({\r\n  selector: 'app-crear-trabajos-realizados',\r\n  templateUrl: './crear-trabajos-realizados.component.html',\r\n  styleUrls: ['./crear-trabajos-realizados.component.scss'],\r\n  standalone: true,\r\n  imports: [IonicModule, CommonModule, ReactiveFormsModule, FormsModule]\r\n})\r\nexport class CrearTrabajosRealizadosComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @Input() avisoId: string = '';\r\n  @Input() trabajoExistente?: TrabajoRealizado;\r\n  \r\n  trabajoForm: FormGroup;\r\n  materiales: { producto: Inventario, cantidad: number }[] = [];\r\n  productosInventario: Inventario[] = [];\r\n  productosFiltrados: Inventario[] = [];\r\n  loadingProductos = false;\r\n  errorProductos: string | null = null;\r\n  busquedaProducto = '';\r\n  modoEdicion = false;\r\n  \r\n  private destroy$ = new Subject<void>();\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private modalController: ModalController,\r\n    private viewportService: ViewportService,\r\n    private elementRef: ElementRef,\r\n    private inventarioService: InventarioService,\r\n    private trabajosService: TrabajosService\r\n  ) {\r\n    this.trabajoForm = this.fb.group({\r\n      fecha_trabajo: [new Date().toISOString().split('T')[0], Validators.required],\r\n      hora_inicio: ['', Validators.required],\r\n      hora_fin: ['', Validators.required],\r\n      descripcion: ['', [Validators.required, Validators.maxLength(500)]],\r\n      estado: ['Pendiente', Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    addIcons({\r\n      arrowForward,\r\n      personOutline,\r\n      mailOutline,\r\n      chevronDownOutline,\r\n      copyOutline,\r\n      shieldOutline,\r\n      informationCircleOutline,\r\n      cloudUploadOutline,\r\n      closeOutline,\r\n      save,\r\n      saveOutline,\r\n      trashOutline,\r\n      timeOutline,\r\n      calendarOutline,\r\n      documentTextOutline,\r\n      addOutline,\r\n      searchOutline\r\n    });\r\n    \r\n    this.modoEdicion = !!this.trabajoExistente;\r\n    \r\n    if (this.modoEdicion && this.trabajoExistente) {\r\n      this.cargarDatosTrabajoExistente();\r\n    }\r\n    \r\n    this.cargarProductosInventario();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // Aplicar safe areas al modal después de que se renderice\r\n    setTimeout(() => {\r\n      const modalContainer = this.elementRef.nativeElement.querySelector('.modal-container');\r\n      if (modalContainer) {\r\n        this.viewportService.applySafeAreaToModal(modalContainer);\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  /**\r\n   * Carga los datos de un trabajo existente para editar\r\n   */\r\n  async cargarDatosTrabajoExistente() {\r\n    if (!this.trabajoExistente?.id) return;\r\n\r\n    try {\r\n      const trabajoCompleto = await firstValueFrom(this.trabajosService.getTrabajo(this.trabajoExistente.id));\r\n      \r\n      // Cargar datos del formulario\r\n      this.trabajoForm.patchValue({\r\n        fecha_trabajo: this.trabajoExistente.fecha_trabajo,\r\n        hora_inicio: this.trabajoExistente.hora_inicio,\r\n        hora_fin: this.trabajoExistente.hora_fin,\r\n        descripcion: this.trabajoExistente.descripcion,\r\n        estado: this.trabajoExistente.estado\r\n      });\r\n\r\n      // Cargar materiales del trabajo\r\n      if (trabajoCompleto.materiales && trabajoCompleto.materiales.length > 0) {\r\n        // Necesitamos obtener los datos completos de los productos del inventario\r\n        const materialesConProductos = await Promise.all(\r\n          trabajoCompleto.materiales.map(async (material) => {\r\n            const producto = await firstValueFrom(this.inventarioService.getProducto(material.material_id));\r\n            return {\r\n              producto,\r\n              cantidad: material.cantidad_utilizada\r\n            };\r\n          })\r\n        );\r\n        \r\n        this.materiales = materialesConProductos;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al cargar datos del trabajo existente:', error);\r\n      alert('Error al cargar los datos del trabajo para editar.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Carga los productos del inventario\r\n   */\r\n  cargarProductosInventario() {\r\n    this.loadingProductos = true;\r\n    this.errorProductos = null;\r\n\r\n    this.inventarioService.getProductosConStock(1, 100, '', 'nombre', 'asc')\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: (response) => {\r\n          this.productosInventario = response.inventario;\r\n          this.productosFiltrados = response.inventario;\r\n          this.loadingProductos = false;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error al cargar productos:', error);\r\n          this.errorProductos = 'Error al cargar los productos del inventario';\r\n          this.loadingProductos = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Filtra productos por búsqueda\r\n   */\r\n  filtrarProductos(event: any) {\r\n    const busqueda = event.target.value.toLowerCase();\r\n    this.busquedaProducto = busqueda;\r\n    \r\n    if (!busqueda) {\r\n      this.productosFiltrados = this.productosInventario;\r\n    } else {\r\n      this.productosFiltrados = this.productosInventario.filter(producto =>\r\n        producto.nombre.toLowerCase().includes(busqueda) ||\r\n        producto.codigo.toLowerCase().includes(busqueda) ||\r\n        (producto.descripcion && producto.descripcion.toLowerCase().includes(busqueda))\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Añade un producto del inventario como material\r\n   */\r\n  agregarMaterial(producto: Inventario) {\r\n    // Verificar si el producto ya está en la lista\r\n    const yaExiste = this.materiales.find(m => m.producto.id === producto.id);\r\n    \r\n    if (yaExiste) {\r\n      // Si ya existe, verificar si se puede incrementar la cantidad\r\n      const nuevaCantidad = yaExiste.cantidad + 1;\r\n      if (nuevaCantidad > producto.cantidad_disponible) {\r\n        alert(`No hay suficiente stock. Solo quedan ${producto.cantidad_disponible} ${producto.unidad} de ${producto.nombre}`);\r\n        return;\r\n      }\r\n      yaExiste.cantidad = nuevaCantidad;\r\n    } else {\r\n      // Si no existe, verificar que haya stock disponible\r\n      if (producto.cantidad_disponible <= 0) {\r\n        alert(`No hay stock disponible para ${producto.nombre}`);\r\n        return;\r\n      }\r\n      // Si no existe, añadirlo con cantidad 1\r\n      this.materiales.push({ producto, cantidad: 1 });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Elimina un material de la lista\r\n   */\r\n  eliminarMaterial(index: number) {\r\n    this.materiales.splice(index, 1);\r\n  }\r\n\r\n  /**\r\n   * Actualiza la cantidad de un material\r\n   */\r\n  actualizarCantidadMaterial(index: number, nuevaCantidad: number) {\r\n    const material = this.materiales[index];\r\n    const cantidadNueva = parseInt(nuevaCantidad.toString());\r\n    \r\n    if (isNaN(cantidadNueva) || cantidadNueva <= 0) {\r\n      // Restaurar el valor anterior\r\n      return;\r\n    }\r\n    \r\n    if (cantidadNueva > material.producto.cantidad_disponible) {\r\n      alert(`No hay suficiente stock. Solo quedan ${material.producto.cantidad_disponible} ${material.producto.unidad} de ${material.producto.nombre}`);\r\n      // Restaurar el valor anterior\r\n      return;\r\n    }\r\n    \r\n    material.cantidad = cantidadNueva;\r\n  }\r\n\r\n  /**\r\n   * Calcula el costo total de los materiales\r\n   */\r\n  calcularCostoTotal(): number {\r\n    return this.materiales.reduce((total, material) => {\r\n      return total + (material.cantidad * material.producto.precio_neto);\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * Crea o actualiza el trabajo realizado\r\n   */\r\n  async crearTrabajo() {\r\n    if (this.trabajoForm.valid) {\r\n      // Validar que todos los materiales tengan suficiente stock\r\n      const materialesSinStock = this.materiales.filter(material => \r\n        material.cantidad > material.producto.cantidad_disponible\r\n      );\r\n      \r\n      if (materialesSinStock.length > 0) {\r\n        const mensaje = materialesSinStock.map(m => \r\n          `${m.producto.nombre}: solicitado ${m.cantidad} ${m.producto.unidad}, disponible ${m.producto.cantidad_disponible} ${m.producto.unidad}`\r\n        ).join('\\n');\r\n        \r\n        alert(`No hay suficiente stock para los siguientes materiales:\\n\\n${mensaje}`);\r\n        return;\r\n      }\r\n      \r\n      const trabajoData = {\r\n        ...this.trabajoForm.value,\r\n        aviso_id: this.avisoId,\r\n        repuestos: this.materiales.map(m => m.producto.nombre),\r\n        materiales: this.materiales.map(m => ({\r\n          material_id: m.producto.id,\r\n          cantidad_utilizada: m.cantidad,\r\n          precio_neto_al_momento: m.producto.precio_neto\r\n        }))\r\n      };\r\n      await this.modalController.dismiss(trabajoData, 'confirm');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cierra el modal\r\n   */\r\n  async cerrarModal() {\r\n    await this.modalController.dismiss(null, 'cancel');\r\n  }\r\n} ", "<div class=\"modal-container\">\r\n  <header class=\"modal-header\">\r\n    <div class=\"header-content\">\r\n      <h2>{{ modoEdicion ? 'Editar parte de trabajo' : 'Crear parte de trabajo' }}</h2>\r\n      <button class=\"close-button\" (click)=\"cerrarModal()\">\r\n        <ion-icon name=\"close-outline\"></ion-icon>\r\n      </button>\r\n    </div>\r\n    <p class=\"subtitle\">{{ modoEdicion ? 'Modifica el trabajo realizado' : 'Registra el trabajo realizado en este aviso' }}</p>\r\n  </header>\r\n\r\n  <form [formGroup]=\"trabajoForm\" (ngSubmit)=\"crearTrabajo()\" class=\"modal-body\">\r\n    <div class=\"modal-content\">\r\n      <!-- Indicador de carga para modo edición -->\r\n      <div *ngIf=\"modoEdicion && !trabajoExistente\" class=\"loading-state\">\r\n        <div class=\"loading-spinner\">\r\n          <ion-icon name=\"refresh-outline\" class=\"spinning\"></ion-icon>\r\n          <p>Cargando datos del trabajo...</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"modal-grid\" *ngIf=\"!modoEdicion || trabajoExistente\">\r\n        <!-- Sección Izquierda - Formulario -->\r\n        <div class=\"form-section\">\r\n          <div class=\"form-group\">\r\n            <label>Fecha del trabajo <span class=\"required\">*</span></label>\r\n            <input \r\n              type=\"date\" \r\n              formControlName=\"fecha_trabajo\" \r\n              class=\"form-control\">\r\n          </div>\r\n\r\n          <div class=\"form-row\">\r\n            <div class=\"form-group half\">\r\n              <label>Hora de inicio <span class=\"required\">*</span></label>\r\n              <input \r\n                type=\"time\" \r\n                formControlName=\"hora_inicio\" \r\n                class=\"form-control\">\r\n            </div>\r\n            <div class=\"form-group half\">\r\n              <label>Hora de fin <span class=\"required\">*</span></label>\r\n              <input \r\n                type=\"time\" \r\n                formControlName=\"hora_fin\" \r\n                class=\"form-control\">\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label>Descripción del trabajo <span class=\"required\">*</span></label>\r\n            <textarea \r\n              formControlName=\"descripcion\" \r\n              class=\"form-control\"\r\n              placeholder=\"Describe detalladamente el trabajo realizado...\"\r\n              rows=\"4\"\r\n              maxlength=\"500\">\r\n            </textarea>\r\n            <div class=\"character-count\">{{trabajoForm.get('descripcion')?.value?.length || 0}}/500</div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label>Estado del trabajo</label>\r\n            <select formControlName=\"estado\" class=\"form-control\">\r\n              <option value=\"Pendiente\">Pendiente</option>\r\n              <option value=\"En curso\">En curso</option>\r\n              <option value=\"Completado\">Completado</option>\r\n              <option value=\"Cancelado\">Cancelado</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Sección Derecha - Materiales -->\r\n        <div class=\"images-section\">\r\n          <div class=\"repuestos-container\">\r\n            <h3>Materiales utilizados</h3>\r\n            \r\n            <!-- Mensaje informativo para modo edición -->\r\n            <div *ngIf=\"modoEdicion\" class=\"info-message\">\r\n              <ion-icon name=\"information-circle-outline\"></ion-icon>\r\n              <p>Al editar el trabajo, los materiales se ajustarán automáticamente en el inventario.</p>\r\n            </div>\r\n\r\n            <!-- Búsqueda de productos -->\r\n            <div class=\"search-container\">\r\n              <div class=\"search-input\">\r\n                <ion-icon name=\"search-outline\"></ion-icon>\r\n                <input\r\n                  type=\"text\"\r\n                  [(ngModel)]=\"busquedaProducto\"\r\n                  [ngModelOptions]=\"{standalone: true}\"\r\n                  placeholder=\"Buscar productos del inventario...\"\r\n                  class=\"form-control\"\r\n                  (input)=\"filtrarProductos($event)\">\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Loading state -->\r\n            <div *ngIf=\"loadingProductos\" class=\"loading-indicator\">\r\n              <ion-icon name=\"refresh-outline\" class=\"spinning\"></ion-icon>\r\n              <span>Cargando productos...</span>\r\n            </div>\r\n\r\n            <!-- Error state -->\r\n            <div *ngIf=\"errorProductos\" class=\"error-message\">\r\n              {{ errorProductos }}\r\n            </div>\r\n\r\n            <!-- Lista de productos disponibles -->\r\n            <div class=\"productos-disponibles\" *ngIf=\"!loadingProductos && !errorProductos\">\r\n              <h4>Productos disponibles</h4>\r\n              <div class=\"productos-list\">\r\n                <div \r\n                  class=\"producto-item\" \r\n                  *ngFor=\"let producto of productosFiltrados\"\r\n                  [class.sin-stock]=\"producto.cantidad_disponible <= 0\"\r\n                  [class.stock-bajo]=\"producto.cantidad_disponible > 0 && producto.cantidad_disponible <= 5\"\r\n                  (click)=\"agregarMaterial(producto)\">\r\n                  <div class=\"producto-info\">\r\n                    <div class=\"producto-header\">\r\n                      <span class=\"producto-codigo\">{{producto.codigo}}</span>\r\n                      <span class=\"producto-stock\" \r\n                            [class.stock-bajo]=\"producto.cantidad_disponible > 0 && producto.cantidad_disponible <= 5\"\r\n                            [class.sin-stock]=\"producto.cantidad_disponible <= 0\">\r\n                        Stock: {{producto.cantidad_disponible}} {{producto.unidad}}\r\n                      </span>\r\n                    </div>\r\n                    <span class=\"producto-nombre\">{{producto.nombre}}</span>\r\n                    <span class=\"producto-descripcion\" *ngIf=\"producto.descripcion\">{{producto.descripcion}}</span>\r\n                    <span class=\"producto-precio\">{{producto.precio_neto | currency:'EUR':'symbol':'1.2-2'}}</span>\r\n                  </div>\r\n                  <button type=\"button\" class=\"add-producto-btn\" [disabled]=\"producto.cantidad_disponible <= 0\">\r\n                    <ion-icon name=\"add-outline\"></ion-icon>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Lista de materiales añadidos -->\r\n            <div class=\"repuestos-list\" *ngIf=\"materiales.length > 0\">\r\n              <h4>Materiales añadidos</h4>\r\n              <div class=\"repuesto-item\" *ngFor=\"let material of materiales; let i = index\">\r\n                <div class=\"repuesto-info\">\r\n                  <div class=\"repuesto-header\">\r\n                    <span class=\"repuesto-codigo\">{{material.producto.codigo}}</span>\r\n                    <span class=\"repuesto-precio\">{{material.producto.precio_neto | currency:'EUR':'symbol':'1.2-2'}}</span>\r\n                  </div>\r\n                  <span class=\"repuesto-nombre\">{{material.producto.nombre}}</span>\r\n                  <div class=\"repuesto-cantidad\">\r\n                    <label>Cantidad:</label>\r\n                    <input \r\n                      type=\"number\" \r\n                      [value]=\"material.cantidad\"\r\n                      [min]=\"1\"\r\n                      [max]=\"material.producto.cantidad_disponible\"\r\n                      (change)=\"actualizarCantidadMaterial(i, $any($event.target).value)\"\r\n                      class=\"cantidad-input\">\r\n                    <span class=\"unidad\">{{material.producto.unidad}}</span>\r\n                  </div>\r\n                </div>\r\n                <button type=\"button\" class=\"remove-repuesto\" (click)=\"eliminarMaterial(i)\">\r\n                  <ion-icon name=\"trash-outline\"></ion-icon>\r\n                </button>\r\n              </div>\r\n\r\n              <!-- Resumen de costos -->\r\n              <div class=\"costo-total\">\r\n                <strong>Costo total de materiales: {{calcularCostoTotal() | currency:'EUR':'symbol':'1.2-2'}}</strong>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"no-repuestos\" *ngIf=\"materiales.length === 0 && !loadingProductos && !errorProductos\">\r\n              <ion-icon name=\"information-circle-outline\"></ion-icon>\r\n              <p>No se han añadido materiales</p>\r\n              <span>Selecciona productos del inventario para añadirlos como materiales</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <footer class=\"modal-footer\">\r\n    <div class=\"button-group\">\r\n      <button type=\"button\" class=\"btn btn-outline\" (click)=\"cerrarModal()\">\r\n        Cancelar\r\n      </button>\r\n      <button \r\n        type=\"button\" \r\n        class=\"btn btn-primary\" \r\n        (click)=\"crearTrabajo()\"\r\n        [disabled]=\"!trabajoForm.valid\">\r\n        {{ modoEdicion ? 'Actualizar trabajo' : 'Crear trabajo' }}\r\n        <ion-icon name=\"save-outline\"></ion-icon>\r\n      </button>\r\n    </div>\r\n  </footer>\r\n</div> ", "import { Injectable } from '@angular/core';\r\nimport { Observable, from } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { SupabaseClient } from '@supabase/supabase-js';\r\nimport { SupabaseClientService } from './supabase-client.service';\r\n\r\n// Nueva interfaz para repuestos con cantidades reales\r\nexport interface RepuestoAlbaran {\r\n  nombre: string;\r\n  cantidad: number;\r\n  precio_neto: number;\r\n  precio_pvp: number;\r\n  unidad: string;\r\n  codigo: string;\r\n}\r\n\r\nexport interface Albaran {\r\n  id?: string;\r\n  trabajo_id: string;\r\n  aviso_id: string;\r\n  fecha_cierre: Date;\r\n  hora_entrada: string;\r\n  hora_salida: string;\r\n  descripcion_trabajo_realizado: string;\r\n  repuestos_utilizados: RepuestoAlbaran[]; // ← CAMBIADO: Ahora incluye cantidades\r\n  estado_cierre: 'Finalizado' | 'Presupuesto pendiente' | 'Otra visita';\r\n  presupuesto_necesario: number;\r\n  dni_cliente?: string;\r\n  nombre_firma?: string;\r\n  firma_url?: string;\r\n  observaciones?: string;\r\n  fecha_creacion?: Date;\r\n  fecha_actualizacion?: Date;\r\n}\r\n\r\nexport interface CrearAlbaranRequest {\r\n  trabajo_id: string;\r\n  aviso_id: string;\r\n  fecha_cierre: Date;\r\n  hora_entrada: string;\r\n  hora_salida: string;\r\n  descripcion_trabajo_realizado: string;\r\n  repuestos_utilizados: RepuestoAlbaran[]; // ← CAMBIADO: Ahora incluye cantidades\r\n  estado_cierre: 'Finalizado' | 'Presupuesto pendiente' | 'Otra visita';\r\n  presupuesto_necesario: number;\r\n  dni_cliente?: string;\r\n  nombre_firma?: string;\r\n  firma_cliente?: string;\r\n  firma_url?: string;\r\n  observaciones?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlbaranesService {\r\n  private supabase: SupabaseClient;\r\n\r\n  constructor(private supabaseClientService: SupabaseClientService) {\r\n    this.supabase = this.supabaseClientService.getClient();\r\n  }\r\n\r\n  /**\r\n   * Crea un nuevo albarán\r\n   */\r\n  crearAlbaran(albaranData: CrearAlbaranRequest): Observable<Albaran> {\r\n    return from(\r\n      this.supabase\r\n        .from('albaranes')\r\n        .insert([albaranData])\r\n        .select()\r\n        .single()\r\n    ).pipe(\r\n      map(({ data, error }) => {\r\n        if (error) throw error;\r\n        return data as Albaran;\r\n      }),\r\n      catchError(error => {\r\n        console.error('Error al crear albarán:', error);\r\n        throw error;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Obtiene un albarán por su ID\r\n   */\r\n  getAlbaran(id: string): Observable<Albaran> {\r\n    return from(\r\n      this.supabase\r\n        .from('albaranes')\r\n        .select(`\r\n          *,\r\n          trabajo:trabajos_realizados(*),\r\n          aviso:avisos(*)\r\n        `)\r\n        .eq('id', id)\r\n        .single()\r\n    ).pipe(\r\n      map(({ data, error }) => {\r\n        if (error) throw error;\r\n        return data as Albaran;\r\n      }),\r\n      catchError(error => {\r\n        console.error('Error al obtener albarán:', error);\r\n        throw error;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Obtiene todos los albaranes de un aviso\r\n   */\r\n  getAlbaranesAviso(avisoId: string): Observable<Albaran[]> {\r\n    return from(\r\n      this.supabase\r\n        .from('albaranes')\r\n        .select(`\r\n          *,\r\n          trabajo:trabajos_realizados(*)\r\n        `)\r\n        .eq('aviso_id', avisoId)\r\n        .order('fecha_cierre', { ascending: false })\r\n    ).pipe(\r\n      map(({ data, error }) => {\r\n        if (error) throw error;\r\n        return data as Albaran[];\r\n      }),\r\n      catchError(error => {\r\n        console.error('Error al obtener albaranes del aviso:', error);\r\n        throw error;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Obtiene todos los albaranes de un trabajo\r\n   */\r\n  getAlbaranesTrabajo(trabajoId: string): Observable<Albaran[]> {\r\n    return from(\r\n      this.supabase\r\n        .from('albaranes')\r\n        .select('*')\r\n        .eq('trabajo_id', trabajoId)\r\n        .order('fecha_cierre', { ascending: false })\r\n    ).pipe(\r\n      map(({ data, error }) => {\r\n        if (error) throw error;\r\n        return data as Albaran[];\r\n      }),\r\n      catchError(error => {\r\n        console.error('Error al obtener albaranes del trabajo:', error);\r\n        throw error;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Actualiza un albarán existente\r\n   */\r\n  actualizarAlbaran(id: string, datos: Partial<Albaran>): Observable<Albaran> {\r\n    return from(\r\n      this.supabase\r\n        .from('albaranes')\r\n        .update({\r\n          ...datos,\r\n          fecha_actualizacion: new Date()\r\n        })\r\n        .eq('id', id)\r\n        .select()\r\n        .single()\r\n    ).pipe(\r\n      map(({ data, error }) => {\r\n        if (error) throw error;\r\n        return data as Albaran;\r\n      }),\r\n      catchError(error => {\r\n        console.error('Error al actualizar albarán:', error);\r\n        throw error;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Elimina un albarán\r\n   */\r\n  eliminarAlbaran(id: string): Observable<void> {\r\n    return from(\r\n      this.supabase\r\n        .from('albaranes')\r\n        .delete()\r\n        .eq('id', id)\r\n    ).pipe(\r\n      map(({ error }) => {\r\n        if (error) throw error;\r\n      }),\r\n      catchError(error => {\r\n        console.error('Error al eliminar albarán:', error);\r\n        throw error;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Obtiene estadísticas de albaranes para un aviso\r\n   */\r\n  getEstadisticasAlbaranes(avisoId: string): Observable<any> {\r\n    return from(\r\n      this.supabase\r\n        .from('albaranes')\r\n        .select('estado_cierre')\r\n        .eq('aviso_id', avisoId)\r\n    ).pipe(\r\n      map(({ data, error }) => {\r\n        if (error) throw error;\r\n        \r\n        const albaranes = data as any[];\r\n        const estadisticas = {\r\n          total: albaranes.length,\r\n          finalizados: albaranes.filter(a => a.estado_cierre === 'Finalizado').length,\r\n          presupuestoPendiente: albaranes.filter(a => a.estado_cierre === 'Presupuesto pendiente').length,\r\n          otraVisita: albaranes.filter(a => a.estado_cierre === 'Otra visita').length\r\n        };\r\n        \r\n        return estadisticas;\r\n      }),\r\n      catchError(error => {\r\n        console.error('Error al obtener estadísticas de albaranes:', error);\r\n        throw error;\r\n      })\r\n    );\r\n  }\r\n}\r\n", "import { Component, Input, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IonIcon, IonButton, IonInput, IonTextarea, IonSelect, IonSelectOption, IonDatetime, IonLabel, IonItem, IonContent, IonHeader, IonToolbar, IonTitle, IonButtons, IonModal, ModalController } from '@ionic/angular/standalone';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { addIcons } from 'ionicons';\r\nimport { \r\n  close, \r\n  saveOutline, \r\n  timeOutline, \r\n  calendarOutline,\r\n  personOutline,\r\n  pencilOutline,\r\n  documentTextOutline,\r\n  cubeOutline,\r\n  addCircleOutline,\r\n  trashOutline, searchOutline, checkmarkCircleOutline, warningOutline, refreshOutline, checkmarkOutline, createOutline } from 'ionicons/icons';\r\nimport { TrabajoRealizado } from '../../models/trabajo-realizado.model';\r\nimport { Aviso } from '../../models/aviso.model';\r\nimport { InventarioService } from '../../../inventario/services/inventario.service';\r\nimport { Inventario } from '../../../inventario/models/inventario.model';\r\nimport { AlbaranesService, CrearAlbaranRequest } from '../../../../core/services/albaranes.service';\r\nimport { TrabajosService } from '../../../../core/services/trabajos.service';\r\nimport { AvisosService } from '../../../../core/services/avisos.service';\r\n\r\n// Nueva interfaz para repuestos con cantidades reales\r\nexport interface RepuestoAlbaran {\r\n  nombre: string;\r\n  cantidad: number;\r\n  precio_neto: number;\r\n  precio_pvp: number;\r\n  unidad: string;\r\n  codigo: string;\r\n}\r\n\r\nexport interface AlbaranData {\r\n  trabajo_id: string;\r\n  aviso_id: string;\r\n  fecha_cierre: Date;\r\n  hora_entrada: string;\r\n  hora_salida: string;\r\n  descripcion_trabajo_realizado: string;\r\n  repuestos_utilizados: RepuestoAlbaran[]; // ← CAMBIADO: Ahora incluye cantidades\r\n  estado_cierre: 'Finalizado' | 'Presupuesto pendiente' | 'Otra visita';\r\n  presupuesto_necesario: number;\r\n  dni_cliente: string;\r\n  nombre_firma: string;\r\n  firma_url?: string;\r\n  observaciones?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-hacer-albaran',\r\n  templateUrl: './hacer-albaran.component.html',\r\n  styleUrls: ['./hacer-albaran.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule, \r\n    ReactiveFormsModule, \r\n    FormsModule, \r\n    IonIcon, \r\n    IonButton, \r\n    IonInput, \r\n    IonTextarea, \r\n    IonLabel, \r\n    IonContent, \r\n    IonHeader, \r\n    IonToolbar, \r\n    IonTitle, \r\n    IonButtons\r\n  ]\r\n})\r\nexport class HacerAlbaranComponent implements OnInit, AfterViewInit {\r\n  @Input() trabajo!: TrabajoRealizado;\r\n  @Input() aviso!: Aviso;\r\n\r\n  albaranForm: FormGroup;\r\n  loading = false;\r\n  error: string | null = null;\r\n  \r\n  // Variables para la selección de repuestos\r\n  productosInventario: Inventario[] = [];\r\n  productosFiltrados: Inventario[] = [];\r\n  busquedaRepuesto = '';\r\n  mostrarSelectorRepuestos = false;\r\n  repuestosSeleccionados: RepuestoAlbaran[] = []; // ← CAMBIADO: Ahora incluye cantidades\r\n\r\n  // Variables para la firma digital\r\n  @ViewChild('signaturePad') signaturePadElement!: ElementRef;\r\n  private signaturePad: any;\r\n  public firmaCapturada = false;\r\n  public firmaDataUrl = '';\r\n  public mostrarCanvas = false;\r\n\r\n  // Estados de cierre disponibles\r\n  estadosCierre = [\r\n    { valor: 'Finalizado', label: 'Finalizado', descripcion: 'Trabajo completado, listo para facturar' },\r\n    { valor: 'Presupuesto pendiente', label: 'Presupuesto pendiente', descripcion: 'Se requiere presupuesto adicional' },\r\n    { valor: 'Otra visita', label: 'Otra visita', descripcion: 'Se necesita realizar otra visita' }\r\n  ];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private modalController: ModalController,\r\n    private inventarioService: InventarioService,\r\n    private albaranesService: AlbaranesService,\r\n    private trabajosService: TrabajosService,\r\n    private avisosService: AvisosService\r\n  ) {\r\n    console.log('HacerAlbaranComponent constructor called');\r\n    addIcons({close,timeOutline,cubeOutline,addCircleOutline,searchOutline,trashOutline,checkmarkCircleOutline,checkmarkOutline,createOutline,warningOutline,saveOutline,refreshOutline,calendarOutline,personOutline,pencilOutline,documentTextOutline});\r\n\r\n    this.albaranForm = this.fb.group({\r\n      fecha_cierre: [new Date(), Validators.required],\r\n      hora_entrada: ['', Validators.required],\r\n      hora_salida: ['', Validators.required],\r\n      descripcion_trabajo_realizado: ['', Validators.required],\r\n      repuestos_utilizados: [[]],\r\n      estado_cierre: ['', Validators.required],\r\n      presupuesto_necesario: [0, [Validators.min(0)]],\r\n      dni_cliente: [''],\r\n      nombre_firma: [''],\r\n      firma_cliente: [''],\r\n      observaciones: ['']\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('🎯 HacerAlbaranComponent ngOnInit - Trabajo:', this.trabajo);\r\n    console.log('🎯 HacerAlbaranComponent ngOnInit - Aviso:', this.aviso);\r\n    console.log('🎯 Formulario inicializado:', this.albaranForm);\r\n    this.cargarProductosInventario();\r\n    this.inicializarFormulario();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // Esperar un poco para que el DOM esté listo\r\n    setTimeout(() => {\r\n      this.inicializarSignaturePad();\r\n    }, 100);\r\n  }\r\n\r\n  /**\r\n   * Inicializa el formulario con datos del trabajo\r\n   */\r\n  inicializarFormulario() {\r\n    if (this.trabajo) {\r\n      // Establecer hora de entrada como hora de inicio del trabajo\r\n      this.albaranForm.patchValue({\r\n        hora_entrada: this.trabajo.hora_inicio,\r\n        hora_salida: this.trabajo.hora_fin,\r\n        repuestos_utilizados: this.trabajo.repuestos || []\r\n      });\r\n      \r\n      // Si ya hay repuestos, convertirlos al nuevo formato con cantidades\r\n      if (this.trabajo.repuestos && this.trabajo.repuestos.length > 0) {\r\n        // Convertir repuestos existentes al nuevo formato\r\n        this.repuestosSeleccionados = this.trabajo.repuestos.map(nombre => ({\r\n          nombre: nombre,\r\n          cantidad: 1, // Cantidad por defecto si no hay información previa\r\n          precio_neto: 0,\r\n          precio_pvp: 25, // Precio por defecto\r\n          unidad: 'unidad',\r\n          codigo: ''\r\n        }));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Carga los productos del inventario\r\n   */\r\n  cargarProductosInventario() {\r\n    this.inventarioService.getInventario(1, 1000, '', 'nombre', 'asc', false)\r\n      .subscribe({\r\n        next: (response) => {\r\n          this.productosInventario = response.inventario;\r\n          this.productosFiltrados = [...this.productosInventario];\r\n        },\r\n        error: (error) => {\r\n          console.error('Error al cargar productos del inventario:', error);\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Filtra productos del inventario por búsqueda\r\n   */\r\n  filtrarProductos(event: any) {\r\n    const termino = event?.target?.value || event || '';\r\n    this.busquedaRepuesto = termino;\r\n    \r\n    if (!termino.trim()) {\r\n      this.productosFiltrados = [...this.productosInventario];\r\n    } else {\r\n      this.productosFiltrados = this.productosInventario.filter(producto =>\r\n        producto.nombre.toLowerCase().includes(termino.toLowerCase()) ||\r\n        producto.codigo.toLowerCase().includes(termino.toLowerCase()) ||\r\n        (producto.descripcion?.toLowerCase() || '').includes(termino.toLowerCase())\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Abre el selector de repuestos\r\n   */\r\n  abrirSelectorRepuestos() {\r\n    this.mostrarSelectorRepuestos = true;\r\n    this.productosFiltrados = [...this.productosInventario];\r\n    this.busquedaRepuesto = '';\r\n  }\r\n\r\n  /**\r\n   * Cierra el selector de repuestos\r\n   */\r\n  cerrarSelectorRepuestos() {\r\n    this.mostrarSelectorRepuestos = false;\r\n  }\r\n\r\n  /**\r\n   * Agrega un repuesto del inventario con cantidad\r\n   */\r\n  agregarRepuesto(producto: Inventario) {\r\n    // Verificar si el repuesto ya existe\r\n    const repuestoExistente = this.repuestosSeleccionados.find(r => r.nombre === producto.nombre);\r\n    \r\n    if (repuestoExistente) {\r\n      // Si ya existe, aumentar la cantidad\r\n      repuestoExistente.cantidad += 1;\r\n    } else {\r\n      // Si no existe, agregarlo con cantidad 1\r\n      const nuevoRepuesto: RepuestoAlbaran = {\r\n        nombre: producto.nombre,\r\n        cantidad: 1,\r\n        precio_neto: producto.precio_neto || 0,\r\n        precio_pvp: producto.pvp || producto.precio_neto || 25,\r\n        unidad: producto.unidad || 'unidad',\r\n        codigo: producto.codigo || ''\r\n      };\r\n      this.repuestosSeleccionados.push(nuevoRepuesto);\r\n    }\r\n    \r\n    // Actualizar el formulario\r\n    this.albaranForm.patchValue({\r\n      repuestos_utilizados: this.repuestosSeleccionados\r\n    });\r\n    \r\n    this.cerrarSelectorRepuestos();\r\n  }\r\n\r\n  /**\r\n   * Elimina un repuesto de la lista\r\n   */\r\n  eliminarRepuesto(repuesto: RepuestoAlbaran) {\r\n    this.repuestosSeleccionados = this.repuestosSeleccionados.filter(r => r !== repuesto);\r\n    this.albaranForm.patchValue({\r\n      repuestos_utilizados: this.repuestosSeleccionados\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Actualiza la cantidad de un repuesto\r\n   */\r\n  actualizarCantidadRepuesto(repuesto: RepuestoAlbaran, nuevaCantidad: number) {\r\n    if (nuevaCantidad > 0) {\r\n      repuesto.cantidad = nuevaCantidad;\r\n      this.albaranForm.patchValue({\r\n        repuestos_utilizados: this.repuestosSeleccionados\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Agrega un repuesto manualmente\r\n   */\r\n  agregarRepuestoManual() {\r\n    const nombreRepuesto = prompt('Introduce el nombre del repuesto:');\r\n    if (nombreRepuesto && nombreRepuesto.trim()) {\r\n      const cantidadStr = prompt('Introduce la cantidad utilizada:');\r\n      const cantidad = parseInt(cantidadStr || '1');\r\n      \r\n      if (cantidad > 0) {\r\n        const repuestoManual: RepuestoAlbaran = {\r\n          nombre: nombreRepuesto.trim(),\r\n          cantidad: cantidad,\r\n          precio_neto: 0,\r\n          precio_pvp: 25, // Precio por defecto\r\n          unidad: 'unidad',\r\n          codigo: ''\r\n        };\r\n        \r\n        this.repuestosSeleccionados.push(repuestoManual);\r\n        this.albaranForm.patchValue({\r\n          repuestos_utilizados: this.repuestosSeleccionados\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Genera hora actual en formato HH:MM\r\n   */\r\n  generarHoraActual(): string {\r\n    const ahora = new Date();\r\n    return `${ahora.getHours().toString().padStart(2, '0')}:${ahora.getMinutes().toString().padStart(2, '0')}`;\r\n  }\r\n\r\n  /**\r\n   * Establece la hora actual\r\n   */\r\n  establecerHoraActual() {\r\n    const horaActual = this.generarHoraActual();\r\n    this.albaranForm.patchValue({\r\n      hora_salida: horaActual\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Establece la fecha actual\r\n   */\r\n  establecerFechaActual() {\r\n    this.albaranForm.patchValue({\r\n      fecha_cierre: new Date()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Guarda el albarán\r\n   */\r\n  guardarAlbaran() {\r\n    if (this.albaranForm.valid) {\r\n      this.loading = true;\r\n      this.error = null;\r\n\r\n      const albaranData: CrearAlbaranRequest = {\r\n        trabajo_id: this.trabajo.id!,\r\n        aviso_id: this.aviso.id!,\r\n        fecha_cierre: this.albaranForm.value.fecha_cierre,\r\n        hora_entrada: this.albaranForm.value.hora_entrada,\r\n        hora_salida: this.albaranForm.value.hora_salida,\r\n        descripcion_trabajo_realizado: this.albaranForm.value.descripcion_trabajo_realizado,\r\n        repuestos_utilizados: this.albaranForm.value.repuestos_utilizados,\r\n        estado_cierre: this.albaranForm.value.estado_cierre,\r\n        presupuesto_necesario: this.albaranForm.value.presupuesto_necesario,\r\n        dni_cliente: this.albaranForm.value.dni_cliente,\r\n        nombre_firma: this.albaranForm.value.nombre_firma,\r\n        firma_cliente: this.albaranForm.value.firma_cliente,\r\n        observaciones: this.albaranForm.value.observaciones\r\n      };\r\n\r\n      console.log('Datos del albarán:', albaranData);\r\n\r\n      // Guardar albarán usando el servicio\r\n      this.albaranesService.crearAlbaran(albaranData).subscribe({\r\n        next: (albaran) => {\r\n          console.log('Albarán guardado exitosamente:', albaran);\r\n          \r\n          // Actualizar el estado del trabajo según el estado del albarán\r\n          let nuevoEstado = 'Abierto';\r\n          if (albaran.estado_cierre === 'Finalizado') {\r\n            nuevoEstado = 'Finalizado';\r\n          } else if (albaran.estado_cierre === 'Presupuesto pendiente') {\r\n            nuevoEstado = 'Cerrado';\r\n          } else if (albaran.estado_cierre === 'Otra visita') {\r\n            nuevoEstado = 'Cerrado';\r\n          }\r\n          \r\n          // Actualizar el trabajo con el nuevo estado y el ID del albarán\r\n          this.trabajosService.actualizarEstadoTrabajo(\r\n            this.trabajo.id!, \r\n            nuevoEstado, \r\n            albaran.id\r\n          ).subscribe({\r\n            next: (trabajoActualizado) => {\r\n              console.log('Trabajo actualizado exitosamente:', trabajoActualizado);\r\n              \r\n              // Actualizar automáticamente el estado del aviso\r\n              this.avisosService.actualizarEstadoAutomatico(this.aviso.id!).subscribe({\r\n                next: (avisoActualizado) => {\r\n                  this.loading = false;\r\n                  console.log('Estado del aviso actualizado automáticamente:', avisoActualizado);\r\n                  \r\n                  this.modalController.dismiss({\r\n                    success: true,\r\n                    albaran: albaran,\r\n                    trabajo: trabajoActualizado,\r\n                    aviso: avisoActualizado,\r\n                    mensaje: 'Albarán guardado exitosamente'\r\n                  });\r\n                },\r\n                error: (error) => {\r\n                  console.error('Error al actualizar estado del aviso:', error);\r\n                  // Aún así, cerrar el modal con éxito\r\n                  this.loading = false;\r\n                  this.modalController.dismiss({\r\n                    success: true,\r\n                    albaran: albaran,\r\n                    trabajo: trabajoActualizado,\r\n                    mensaje: 'Albarán guardado exitosamente'\r\n                  });\r\n                }\r\n              });\r\n            },\r\n            error: (error) => {\r\n              this.loading = false;\r\n              this.error = 'Error al actualizar el trabajo: ' + (error.message || 'Error desconocido');\r\n              console.error('Error al actualizar trabajo:', error);\r\n            }\r\n          });\r\n        },\r\n        error: (error) => {\r\n          this.loading = false;\r\n          this.error = 'Error al guardar el albarán: ' + (error.message || 'Error desconocido');\r\n          console.error('Error al guardar albarán:', error);\r\n        }\r\n      });\r\n    } else {\r\n      this.error = 'Por favor, complete todos los campos requeridos';\r\n      this.marcarCamposComoTocados();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Marca todos los campos como tocados para mostrar errores\r\n   */\r\n  marcarCamposComoTocados() {\r\n    Object.keys(this.albaranForm.controls).forEach(key => {\r\n      const control = this.albaranForm.get(key);\r\n      control?.markAsTouched();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Cierra el modal\r\n   */\r\n  cancelar() {\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  /**\r\n   * Verifica si el estado requiere presupuesto\r\n   */\r\n  requierePresupuesto(): boolean {\r\n    return this.albaranForm.get('estado_cierre')?.value === 'Presupuesto pendiente';\r\n  }\r\n\r\n  /**\r\n   * Verifica si el estado requiere otra visita\r\n   */\r\n  requiereOtraVisita(): boolean {\r\n    return this.albaranForm.get('estado_cierre')?.value === 'Otra visita';\r\n  }\r\n\r\n  // ========================================\r\n  // MÉTODOS PARA LA FIRMA DIGITAL\r\n  // ========================================\r\n\r\n  /**\r\n   * Inicia el proceso de firma\r\n   */\r\n  iniciarFirma() {\r\n    this.mostrarCanvas = true;\r\n    this.firmaCapturada = false;\r\n    this.firmaDataUrl = '';\r\n  }\r\n\r\n  /**\r\n   * Inicializa el signature pad\r\n   */\r\n  private inicializarSignaturePad() {\r\n    if (!this.signaturePadElement?.nativeElement) {\r\n      console.warn('Canvas no encontrado');\r\n      return;\r\n    }\r\n\r\n    const canvas = this.signaturePadElement.nativeElement;\r\n    \r\n    // Importar signature_pad dinámicamente\r\n    import('signature_pad').then(({ default: SignaturePad }) => {\r\n      // Crear instancia de SignaturePad\r\n      this.signaturePad = new SignaturePad(canvas, {\r\n        backgroundColor: 'white',\r\n        penColor: 'black',\r\n        minWidth: 1,\r\n        maxWidth: 2.5,\r\n        throttle: 16,\r\n        velocityFilterWeight: 0.7,\r\n        dotSize: 1\r\n      });\r\n\r\n      // Ajustar tamaño del canvas\r\n      this.ajustarCanvas();\r\n      \r\n      // Escuchar cambios de tamaño de ventana\r\n      window.addEventListener('resize', () => this.ajustarCanvas());\r\n    });\r\n  }\r\n\r\n  private ajustarCanvas() {\r\n    if (!this.signaturePadElement?.nativeElement || !this.signaturePad) {\r\n      return;\r\n    }\r\n\r\n    const canvas = this.signaturePadElement.nativeElement;\r\n    const container = canvas.parentElement;\r\n    \r\n    if (!container) return;\r\n    \r\n    // Obtener dimensiones del contenedor\r\n    const rect = container.getBoundingClientRect();\r\n    const width = Math.max(rect.width - 40, 200);\r\n    const height = 150;\r\n    \r\n    // Establecer dimensiones del canvas\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    \r\n    // Redimensionar el canvas\r\n    this.signaturePad.resizeCanvas();\r\n  }\r\n\r\n  /**\r\n   * Limpia el canvas de firma\r\n   */\r\n  limpiarFirma() {\r\n    if (this.signaturePad) {\r\n      this.signaturePad.clear();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Guarda la firma capturada\r\n   */\r\n  guardarFirma() {\r\n    if (this.signaturePad && !this.signaturePad.isEmpty()) {\r\n      this.firmaDataUrl = this.signaturePad.toDataURL();\r\n      this.firmaCapturada = true;\r\n      this.mostrarCanvas = false;\r\n      \r\n      // Guardar en el formulario\r\n      this.albaranForm.patchValue({ \r\n        firma_cliente: this.firmaDataUrl \r\n      });\r\n      \r\n      console.log('Firma guardada exitosamente');\r\n    } else {\r\n      console.warn('No hay firma para guardar');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Permite editar la firma existente\r\n   */\r\n  editarFirma() {\r\n    this.mostrarCanvas = true;\r\n    this.firmaCapturada = false;\r\n    \r\n    if (this.signaturePad) {\r\n      this.signaturePad.clear();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Elimina la firma completamente\r\n   */\r\n  eliminarFirma() {\r\n    this.firmaCapturada = false;\r\n    this.firmaDataUrl = '';\r\n    this.mostrarCanvas = false;\r\n    \r\n    if (this.signaturePad) {\r\n      this.signaturePad.clear();\r\n    }\r\n    \r\n    // Limpiar del formulario\r\n    this.albaranForm.patchValue({ \r\n      firma_cliente: '' \r\n    });\r\n    \r\n    console.log('Firma eliminada');\r\n  }\r\n}\r\n", "<ion-header>\r\n  <ion-toolbar>\r\n    <ion-title>VISTA CIERRE ALBARÁN</ion-title>\r\n    <ion-buttons slot=\"end\">\r\n      <ion-button (click)=\"cancelar()\">\r\n        <ion-icon name=\"close\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <div class=\"albaran-container\">\r\n    <form [formGroup]=\"albaranForm\" (ngSubmit)=\"guardarAlbaran()\">\r\n\r\n      <!-- Layout de dos columnas -->\r\n      <div class=\"form-layout\">\r\n\r\n        <!-- COLUMNA IZQUIERDA: Formulario principal -->\r\n        <div class=\"form-main\">\r\n\r\n          <!-- Fecha y Horarios -->\r\n          <div class=\"form-section\">\r\n            <h3>Fecha y Horarios</h3>\r\n            <div class=\"form-row\">\r\n              <div class=\"form-group\">\r\n                <ion-label>FECHA</ion-label>\r\n                <ion-input type=\"date\" formControlName=\"fecha_cierre\" (click)=\"establecerFechaActual()\">\r\n                </ion-input>\r\n                <small class=\"help-text\">Automática día actual</small>\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                <ion-label>HORA ENTRADA</ion-label>\r\n                <ion-input type=\"time\" formControlName=\"hora_entrada\" step=\"900\">\r\n                </ion-input>\r\n                <small class=\"help-text\">Menú interactivo 15 en 15 min</small>\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                <ion-label>HORA SALIDA</ion-label>\r\n                <ion-input type=\"time\" formControlName=\"hora_salida\" step=\"900\" (click)=\"establecerHoraActual()\">\r\n                </ion-input>\r\n                <button type=\"button\" class=\"btn-now\" (click)=\"establecerHoraActual()\">\r\n                  <ion-icon name=\"time-outline\"></ion-icon>\r\n                  Ahora\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Descripción del Trabajo -->\r\n          <div class=\"form-section\">\r\n            <h3>Descripción del Trabajo Realizado</h3>\r\n            <div class=\"form-group\">\r\n              <ion-textarea formControlName=\"descripcion_trabajo_realizado\"\r\n                placeholder=\"Describe detalladamente el trabajo realizado...\" rows=\"3\">\r\n              </ion-textarea>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Repuestos Utilizados (visible solo en móvil) -->\r\n          <div class=\"form-section repuestos-section mobile-only\">\r\n            <h3>Repuestos Utilizados</h3>\r\n\r\n            <!-- Botones de acción -->\r\n            <div class=\"repuestos-actions\">\r\n              <button type=\"button\" class=\"btn-select-inventory\" (click)=\"abrirSelectorRepuestos()\">\r\n                <ion-icon name=\"cube-outline\"></ion-icon>\r\n                Seleccionar del Inventario\r\n              </button>\r\n            </div>\r\n\r\n            <!-- Selector de repuestos del inventario -->\r\n            <div *ngIf=\"mostrarSelectorRepuestos\" class=\"inventory-selector\">\r\n              <div class=\"selector-header\">\r\n                <h4>Seleccionar Repuestos</h4>\r\n                <button type=\"button\" class=\"btn-close\" (click)=\"cerrarSelectorRepuestos()\">\r\n                  <ion-icon name=\"close\"></ion-icon>\r\n                </button>\r\n              </div>\r\n\r\n              <div class=\"search-container\">\r\n                <ion-input type=\"text\" [(ngModel)]=\"busquedaRepuesto\" (ionInput)=\"filtrarProductos($event)\"\r\n                  placeholder=\"Buscar repuestos...\" class=\"search-input\">\r\n                </ion-input>\r\n                <ion-icon name=\"search-outline\"></ion-icon>\r\n              </div>\r\n\r\n              <div class=\"products-list\">\r\n                <div *ngFor=\"let producto of productosFiltrados\" class=\"product-item\"\r\n                  (click)=\"agregarRepuesto(producto)\">\r\n                  <div class=\"product-info\">\r\n                    <div class=\"product-header\">\r\n                      <span class=\"product-code\">{{ producto.codigo }}</span>\r\n                      <span class=\"product-price\">{{ producto.precio_neto | currency:'EUR':'symbol':'1.2-2' }}</span>\r\n                    </div>\r\n                    <span class=\"product-name\">{{ producto.nombre }}</span>\r\n                    <div class=\"product-details\">\r\n                      <span class=\"product-stock\">Stock: {{ producto.cantidad_disponible }} {{ producto.unidad }}</span>\r\n                      <span class=\"product-description\">{{ producto.descripcion }}</span>\r\n                    </div>\r\n                  </div>\r\n                  <ion-icon name=\"add-circle-outline\" class=\"add-icon\"></ion-icon>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Lista de repuestos seleccionados -->\r\n            <div class=\"repuestos-list\" *ngIf=\"repuestosSeleccionados.length > 0\">\r\n              <h4>Repuestos Seleccionados:</h4>\r\n              <div class=\"repuesto-item\" *ngFor=\"let repuesto of repuestosSeleccionados\">\r\n                <div class=\"repuesto-info\">\r\n                  <span class=\"repuesto-nombre\">{{ repuesto.nombre }}</span>\r\n                  <div class=\"repuesto-cantidad\">\r\n                    <label>Cantidad:</label>\r\n                    <input \r\n                      type=\"number\" \r\n                      [value]=\"repuesto.cantidad\"\r\n                      [min]=\"1\"\r\n                      (change)=\"actualizarCantidadRepuesto(repuesto, $any($event.target).value)\"\r\n                      class=\"cantidad-input\">\r\n                    <span class=\"unidad\">{{ repuesto.unidad }}</span>\r\n                  </div>\r\n                  <span class=\"repuesto-precio\">{{ repuesto.precio_pvp | currency:'EUR':'symbol':'1.2-2' }}</span>\r\n                </div>\r\n                <button type=\"button\" class=\"btn-remove\" (click)=\"eliminarRepuesto(repuesto)\">\r\n                  <ion-icon name=\"trash-outline\"></ion-icon>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Estado vacío -->\r\n            <div class=\"repuestos-empty\" *ngIf=\"repuestosSeleccionados.length === 0 && !mostrarSelectorRepuestos\">\r\n              <ion-icon name=\"cube-outline\"></ion-icon>\r\n              <p>No hay repuestos seleccionados</p>\r\n              <small>Selecciona repuestos del inventario o agrega manualmente</small>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Estado de Cierre -->\r\n          <div class=\"form-section\">\r\n            <h3>Estado de Cierre</h3>\r\n            <div class=\"estados-grid\">\r\n              <div *ngFor=\"let estado of estadosCierre\" class=\"estado-option\"\r\n                [class.selected]=\"albaranForm.get('estado_cierre')?.value === estado.valor\"\r\n                (click)=\"albaranForm.patchValue({estado_cierre: estado.valor})\">\r\n                <div class=\"estado-content\">\r\n                  <h4>{{ estado.label }}</h4>\r\n                  <p>{{ estado.descripcion }}</p>\r\n                </div>\r\n                <ion-icon name=\"checkmark-circle-outline\"\r\n                  *ngIf=\"albaranForm.get('estado_cierre')?.value === estado.valor\"></ion-icon>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Presupuesto Necesario (solo si es Presupuesto pendiente) -->\r\n          <div class=\"form-section\" *ngIf=\"requierePresupuesto()\">\r\n            <h3>Presupuesto Necesario</h3>\r\n            <div class=\"form-group\">\r\n              <ion-input type=\"number\" formControlName=\"presupuesto_necesario\" placeholder=\"0.00\" step=\"0.01\">\r\n              </ion-input>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Observaciones -->\r\n          <div class=\"form-section\">\r\n            <h3>Observaciones Adicionales</h3>\r\n            <div class=\"form-group\">\r\n              <ion-textarea formControlName=\"observaciones\" placeholder=\"Observaciones adicionales...\" rows=\"2\">\r\n              </ion-textarea>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Identificación y Firma -->\r\n          <div class=\"form-section\">\r\n            <h3>Identificación y Firma</h3>\r\n            <div class=\"form-row\">\r\n              <div class=\"form-group\">\r\n                <ion-label>DNI</ion-label>\r\n                <ion-input type=\"text\" formControlName=\"dni_cliente\" placeholder=\"DNI del cliente\">\r\n                </ion-input>\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                <ion-label>NOMBRE FIRMA</ion-label>\r\n                <ion-input type=\"text\" formControlName=\"nombre_firma\" placeholder=\"Nombre de la persona que firma\">\r\n                </ion-input>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <ion-label>FIRMA</ion-label>\r\n              <div class=\"signature-area\">\r\n                                 <!-- Canvas de firma -->\r\n                 <div class=\"signature-canvas-container\" *ngIf=\"!firmaCapturada\">\r\n                   <canvas #signaturePad class=\"signature-canvas\"></canvas>\r\n                   <div class=\"signature-controls\">\r\n                     <button type=\"button\" class=\"btn-clear\" (click)=\"limpiarFirma()\">\r\n                       <ion-icon name=\"trash-outline\"></ion-icon>\r\n                       Limpiar\r\n                     </button>\r\n                     <button type=\"button\" class=\"btn-save\" (click)=\"guardarFirma()\">\r\n                       <ion-icon name=\"checkmark-outline\"></ion-icon>\r\n                       Guardar Firma\r\n                     </button>\r\n                   </div>\r\n                 </div>\r\n                \r\n                <!-- Vista previa de la firma -->\r\n                <div class=\"signature-preview\" *ngIf=\"firmaCapturada\">\r\n                  <img [src]=\"firmaDataUrl\" alt=\"Firma del cliente\" class=\"firma-image\">\r\n                  <div class=\"signature-actions\">\r\n                    <button type=\"button\" class=\"btn-edit\" (click)=\"editarFirma()\">\r\n                      <ion-icon name=\"create-outline\"></ion-icon>\r\n                      Editar\r\n                    </button>\r\n                    <button type=\"button\" class=\"btn-remove\" (click)=\"eliminarFirma()\">\r\n                      <ion-icon name=\"trash-outline\"></ion-icon>\r\n                      Eliminar\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                \r\n                <!-- Placeholder cuando no hay firma -->\r\n                <div class=\"signature-placeholder\" *ngIf=\"!firmaCapturada && !mostrarCanvas\">\r\n                  <span>Área de firma digital</span>\r\n                  <small>Haz clic para comenzar a firmar</small>\r\n                  <button type=\"button\" class=\"btn-start-signature\" (click)=\"iniciarFirma()\">\r\n                    <ion-icon name=\"create-outline\"></ion-icon>\r\n                    Comenzar Firma\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <!-- COLUMNA DERECHA: Gestión de repuestos -->\r\n        <div class=\"form-sidebar\">\r\n\r\n          <!-- Sección de Repuestos -->\r\n          <div class=\"form-section repuestos-section desktop-only\">\r\n            <h3>Repuestos Utilizados</h3>\r\n\r\n            <!-- Botones de acción -->\r\n            <div class=\"repuestos-actions\">\r\n              <button type=\"button\" class=\"btn-select-inventory\" (click)=\"abrirSelectorRepuestos()\">\r\n                <ion-icon name=\"cube-outline\"></ion-icon>\r\n                Seleccionar del Inventario\r\n              </button>\r\n            </div>\r\n\r\n            <!-- Selector de repuestos del inventario -->\r\n            <div *ngIf=\"mostrarSelectorRepuestos\" class=\"inventory-selector\">\r\n              <div class=\"selector-header\">\r\n                <h4>Seleccionar Repuestos</h4>\r\n                <button type=\"button\" class=\"btn-close\" (click)=\"cerrarSelectorRepuestos()\">\r\n                  <ion-icon name=\"close\"></ion-icon>\r\n                </button>\r\n              </div>\r\n\r\n              <div class=\"search-container\">\r\n                <ion-input type=\"text\" [(ngModel)]=\"busquedaRepuesto\" (ionInput)=\"filtrarProductos($event)\"\r\n                  placeholder=\"Buscar repuestos...\" class=\"search-input\">\r\n                </ion-input>\r\n                <ion-icon name=\"search-outline\"></ion-icon>\r\n              </div>\r\n\r\n              <div class=\"products-list\">\r\n                <div *ngFor=\"let producto of productosFiltrados\" class=\"product-item\"\r\n                  (click)=\"agregarRepuesto(producto)\">\r\n                  <div class=\"product-info\">\r\n                    <div class=\"product-header\">\r\n                      <span class=\"product-code\">{{ producto.codigo }}</span>\r\n                      <span class=\"product-price\">{{ producto.precio_neto | currency:'EUR':'symbol':'1.2-2' }}</span>\r\n                    </div>\r\n                    <span class=\"product-name\">{{ producto.nombre }}</span>\r\n                    <div class=\"product-details\">\r\n                      <span class=\"product-stock\">Stock: {{ producto.cantidad_disponible }} {{ producto.unidad }}</span>\r\n                      <span class=\"product-description\">{{ producto.descripcion }}</span>\r\n                    </div>\r\n                  </div>\r\n                  <ion-icon name=\"add-circle-outline\" class=\"add-icon\"></ion-icon>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Lista de repuestos seleccionados -->\r\n            <div class=\"repuestos-list\" *ngIf=\"repuestosSeleccionados.length > 0\">\r\n              <h4>Repuestos Seleccionados:</h4>\r\n              <div class=\"repuesto-item\" *ngFor=\"let repuesto of repuestosSeleccionados\">\r\n                <div class=\"repuesto-info\">\r\n                  <span class=\"repuesto-nombre\">{{ repuesto.nombre }}</span>\r\n                  <div class=\"repuesto-cantidad\">\r\n                    <label>Cantidad:</label>\r\n                    <input \r\n                      type=\"number\" \r\n                      [value]=\"repuesto.cantidad\"\r\n                      [min]=\"1\"\r\n                      (change)=\"actualizarCantidadRepuesto(repuesto, $any($event.target).value)\"\r\n                      class=\"cantidad-input\">\r\n                    <span class=\"unidad\">{{ repuesto.unidad }}</span>\r\n                  </div>\r\n                  <span class=\"repuesto-precio\">{{ repuesto.precio_pvp | currency:'EUR':'symbol':'1.2-2' }}</span>\r\n                </div>\r\n                <button type=\"button\" class=\"btn-remove\" (click)=\"eliminarRepuesto(repuesto)\">\r\n                  <ion-icon name=\"trash-outline\"></ion-icon>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Estado vacío -->\r\n            <div class=\"repuestos-empty\" *ngIf=\"repuestosSeleccionados.length === 0 && !mostrarSelectorRepuestos\">\r\n              <ion-icon name=\"cube-outline\"></ion-icon>\r\n              <p>No hay repuestos seleccionados</p>\r\n              <small>Selecciona repuestos del inventario o agrega manualmente</small>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <!-- Mensaje de error -->\r\n      <div *ngIf=\"error\" class=\"error-message\">\r\n        <ion-icon name=\"warning-outline\"></ion-icon>\r\n        <span>{{ error }}</span>\r\n      </div>\r\n\r\n      <!-- Botones de acción -->\r\n      <div class=\"form-actions\">\r\n        <ion-button type=\"button\" fill=\"outline\" (click)=\"cancelar()\">\r\n          Cancelar\r\n        </ion-button>\r\n\r\n        <ion-button type=\"submit\" [disabled]=\"!albaranForm.valid || loading\">\r\n          <ion-icon name=\"save-outline\" *ngIf=\"!loading\"></ion-icon>\r\n          <ion-icon name=\"refresh-outline\" class=\"spinning\" *ngIf=\"loading\"></ion-icon>\r\n          {{ loading ? 'Guardando...' : 'Guardar Albarán' }}\r\n        </ion-button>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</ion-content>", "import { Component, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IonIcon, IonButton, IonBadge } from '@ionic/angular/standalone';\r\nimport { addIcons } from 'ionicons';\r\nimport { \r\n  documentTextOutline, \r\n  checkmarkCircleOutline, \r\n  timeOutline, \r\n  receiptOutline,\r\n  createOutline,\r\n  eyeOutline,\r\n  arrowForwardOutline,\r\n  warningOutline,\r\n  refreshOutline\r\n} from 'ionicons/icons';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { FlujoAvisosService, FlujoEstado } from '../../../core/services/flujo-avisos.service';\r\n\r\n@Component({\r\n  selector: 'app-flujo-estado',\r\n  templateUrl: './flujo-estado.component.html',\r\n  styleUrls: ['./flujo-estado.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    IonIcon\r\n  ]\r\n})\r\nexport class FlujoEstadoComponent implements OnInit, OnDestroy {\r\n  @Input() avisoId!: string;\r\n  @Output() accionEjecutada = new EventEmitter<any>();\r\n\r\n  estadoFlujo: FlujoEstado | null = null;\r\n  accionesDisponibles: string[] = [];\r\n  loading = false;\r\n  error: string | null = null;\r\n\r\n  private destroy$ = new Subject<void>();\r\n\r\n  constructor(private flujoService: FlujoAvisosService) {\r\n    addIcons({\r\n      documentTextOutline,\r\n      checkmarkCircleOutline,\r\n      timeOutline,\r\n      receiptOutline,\r\n      createOutline,\r\n      eyeOutline,\r\n      arrowForwardOutline,\r\n      warningOutline,\r\n      refreshOutline\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.avisoId) {\r\n      this.cargarEstadoFlujo();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  /**\r\n   * Carga el estado actual del flujo\r\n   */\r\n  cargarEstadoFlujo() {\r\n    this.loading = true;\r\n    this.error = null;\r\n\r\n    this.flujoService.obtenerEstadoFlujo(this.avisoId)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: (estado) => {\r\n          this.estadoFlujo = estado;\r\n          this.cargarAccionesDisponibles();\r\n          this.loading = false;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error al cargar estado del flujo:', error);\r\n          this.error = 'Error al cargar el estado del flujo';\r\n          this.loading = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Carga las acciones disponibles\r\n   */\r\n  cargarAccionesDisponibles() {\r\n    this.flujoService.obtenerAccionesDisponibles(this.avisoId)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: (acciones) => {\r\n          this.accionesDisponibles = acciones;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error al cargar acciones:', error);\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Ejecuta una acción del flujo\r\n   */\r\n  ejecutarAccion(accion: string) {\r\n    this.loading = true;\r\n    this.error = null;\r\n\r\n    let accionObservable;\r\n\r\n    switch (accion) {\r\n      case 'crear_presupuesto':\r\n        accionObservable = this.flujoService.ejecutarFlujoCompleto(this.avisoId, true);\r\n        break;\r\n      case 'aprobar_presupuesto':\r\n        const presupuestoId = this.estadoFlujo?.resumen?.presupuesto?.id;\r\n        if (presupuestoId) {\r\n          accionObservable = this.flujoService.aprobarPresupuesto(presupuestoId);\r\n        }\r\n        break;\r\n      case 'facturar_presupuesto':\r\n        const presupuestoIdFacturar = this.estadoFlujo?.resumen?.presupuesto?.id;\r\n        if (presupuestoIdFacturar) {\r\n          accionObservable = this.flujoService.facturarPresupuesto(presupuestoIdFacturar);\r\n        }\r\n        break;\r\n      case 'facturar_trabajos':\r\n        accionObservable = this.flujoService.facturarTrabajos(this.avisoId);\r\n        break;\r\n      case 'completar_aviso':\r\n        // Implementar completar aviso\r\n        this.completarAviso();\r\n        break;\r\n      default:\r\n        this.loading = false;\r\n        return;\r\n    }\r\n\r\n    if (accionObservable) {\r\n      accionObservable\r\n        .pipe(takeUntil(this.destroy$))\r\n        .subscribe({\r\n          next: (resultado) => {\r\n            console.log('Acción ejecutada:', resultado);\r\n            this.accionEjecutada.emit(resultado);\r\n            this.cargarEstadoFlujo(); // Recargar estado\r\n            this.loading = false;\r\n          },\r\n          error: (error) => {\r\n            console.error('Error al ejecutar acción:', error);\r\n            this.error = `Error al ejecutar ${accion}: ${error.message}`;\r\n            this.loading = false;\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Inicia flujo directo sin presupuesto\r\n   */\r\n  iniciarFlujoDirecto() {\r\n    this.loading = true;\r\n    this.flujoService.ejecutarFlujoCompleto(this.avisoId, false)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: (resultado) => {\r\n          console.log('Flujo directo iniciado:', resultado);\r\n          this.accionEjecutada.emit(resultado);\r\n          this.cargarEstadoFlujo();\r\n          this.loading = false;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error al iniciar flujo directo:', error);\r\n          this.error = `Error al iniciar flujo directo: ${error.message}`;\r\n          this.loading = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Completa el aviso actual\r\n   */\r\n  completarAviso() {\r\n    if (!this.avisoId) {\r\n      console.error('No hay aviso seleccionado para completar');\r\n      return;\r\n    }\r\n\r\n    console.log('🔄 Completando aviso:', this.avisoId);\r\n    this.loading = true;\r\n\r\n    this.flujoService.completarAviso(this.avisoId).subscribe({\r\n      next: (resultado) => {\r\n        console.log('✅ Aviso completado exitosamente:', resultado);\r\n        this.loading = false;\r\n        \r\n        // Mostrar mensaje de éxito\r\n        this.mostrarMensaje('Aviso completado exitosamente', 'success');\r\n        \r\n        // Recargar el estado del flujo\r\n        this.cargarEstadoFlujo();\r\n      },\r\n      error: (error) => {\r\n        console.error('❌ Error al completar aviso:', error);\r\n        this.loading = false;\r\n        \r\n        // Mostrar mensaje de error\r\n        this.mostrarMensaje(\r\n          error.message || 'Error al completar el aviso. Verifica que haya trabajos realizados y facturas generadas.',\r\n          'error'\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Muestra un mensaje al usuario\r\n   */\r\n  private mostrarMensaje(mensaje: string, tipo: 'success' | 'error' | 'info' = 'info') {\r\n    // Aquí podrías implementar un sistema de notificaciones\r\n    // Por ahora, usamos console.log\r\n    console.log(`[${tipo.toUpperCase()}] ${mensaje}`);\r\n    \r\n    // Si tienes un servicio de notificaciones, lo usarías aquí\r\n    // this.notificationService.show(mensaje, tipo);\r\n  }\r\n\r\n  /**\r\n   * Obtiene el icono para el estado actual\r\n   */\r\n  getEstadoIcon(): string {\r\n    if (!this.estadoFlujo) return 'time-outline';\r\n    \r\n    switch (this.estadoFlujo.estadoActual) {\r\n      case 'No visitado':\r\n        return 'time-outline';\r\n      case 'Visitado pendiente':\r\n        return 'eye-outline';\r\n      case 'Pendiente de presupuesto':\r\n        return 'document-text-outline';\r\n      case 'En curso':\r\n        return 'create-outline';\r\n      case 'Completado':\r\n        return 'checkmark-circle-outline';\r\n      default:\r\n        return 'time-outline';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtiene la clase CSS para el estado\r\n   */\r\n  getEstadoClass(): string {\r\n    if (!this.estadoFlujo) return 'pendiente';\r\n    \r\n    switch (this.estadoFlujo.estadoActual) {\r\n      case 'No visitado':\r\n      case 'Visitado pendiente':\r\n        return 'pendiente';\r\n      case 'Pendiente de presupuesto':\r\n        return 'presupuesto';\r\n      case 'En curso':\r\n        return 'en-curso';\r\n      case 'Completado':\r\n        return 'completado';\r\n      default:\r\n        return 'pendiente';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtiene el texto descriptivo para una acción\r\n   */\r\n  getAccionTexto(accion: string): string {\r\n    switch (accion) {\r\n      case 'crear_presupuesto':\r\n        return 'Crear Presupuesto';\r\n      case 'aprobar_presupuesto':\r\n        return 'Aprobar Presupuesto';\r\n      case 'facturar_presupuesto':\r\n        return 'Generar Factura desde Presupuesto';\r\n      case 'facturar_trabajos':\r\n        return 'Facturar Trabajos Realizados';\r\n      case 'completar_aviso':\r\n        return 'Completar Aviso';\r\n      default:\r\n        return accion;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtiene el icono para una acción\r\n   */\r\n  getAccionIcon(accion: string): string {\r\n    switch (accion) {\r\n      case 'crear_presupuesto':\r\n        return 'document-text-outline';\r\n      case 'aprobar_presupuesto':\r\n        return 'checkmark-circle-outline';\r\n      case 'facturar_presupuesto':\r\n      case 'facturar_trabajos':\r\n        return 'receipt-outline';\r\n      case 'completar_aviso':\r\n        return 'checkmark-circle-outline';\r\n      default:\r\n        return 'arrow-forward-outline';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Recarga el estado del flujo\r\n   */\r\n  recargar() {\r\n    this.cargarEstadoFlujo();\r\n  }\r\n} ", "<div class=\"flujo-estado-container\">\r\n  <!-- Estado de carga -->\r\n  <div *ngIf=\"loading\" class=\"loading-state\">\r\n    <ion-icon name=\"refresh-outline\" class=\"spinning\"></ion-icon>\r\n    <span class=\"desktop-only\">Cargando estado del flujo...</span>\r\n    <span class=\"mobile-only\">Cargando...</span>\r\n  </div>\r\n\r\n  <!-- Estado de error -->\r\n  <div *ngIf=\"error && !loading\" class=\"error-state\">\r\n    <ion-icon name=\"warning-outline\"></ion-icon>\r\n    <span class=\"error-text\">{{ error }}</span>\r\n    <button (click)=\"recargar()\" class=\"btn-retry\">\r\n      <ion-icon name=\"refresh-outline\"></ion-icon>\r\n      <span class=\"desktop-only\">Reintentar</span>\r\n      <span class=\"mobile-only\">Reintentar</span>\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Estado del flujo normal -->\r\n  <div *ngIf=\"estadoFlujo && !loading && !error\" class=\"flujo-content\">\r\n    \r\n    <!-- Estado actual -->\r\n    <div class=\"estado-actual\">\r\n      <div class=\"estado-header\">\r\n        <div class=\"estado-badge\" [ngClass]=\"getEstadoClass()\">\r\n          <ion-icon [name]=\"getEstadoIcon()\"></ion-icon>\r\n          <span class=\"estado-text\">{{ estadoFlujo.estadoActual }}</span>\r\n        </div>\r\n        <button (click)=\"recargar()\" class=\"btn-refresh\" title=\"Actualizar estado\">\r\n          <ion-icon name=\"refresh-outline\"></ion-icon>\r\n        </button>\r\n      </div>\r\n      \r\n      <!-- Información del resumen -->\r\n      <!-- <div class=\"resumen-info\" *ngIf=\"estadoFlujo.resumen\">\r\n        <div class=\"info-grid\">\r\n          <div class=\"info-item\" *ngIf=\"estadoFlujo.resumen.estadisticas\">\r\n            <span class=\"label\">Trabajos completados:</span>\r\n            <span class=\"value\">{{ estadoFlujo.resumen.estadisticas.trabajosCompletados }}</span>\r\n          </div>\r\n          <div class=\"info-item\" *ngIf=\"estadoFlujo.resumen.estadisticas\">\r\n            <span class=\"label\">Tiene presupuesto:</span>\r\n            <span class=\"value\" [ngClass]=\"estadoFlujo.resumen.estadisticas.tienePresupuesto ? 'si' : 'no'\">\r\n              {{ estadoFlujo.resumen.estadisticas.tienePresupuesto ? 'Sí' : 'No' }}\r\n            </span>\r\n          </div>\r\n          <div class=\"info-item\" *ngIf=\"estadoFlujo.resumen.estadisticas && estadoFlujo.resumen.estadisticas.tienePresupuesto\">\r\n            <span class=\"label\">Estado presupuesto:</span>\r\n            <span class=\"value\">{{ estadoFlujo.resumen.estadisticas.estadoPresupuesto }}</span>\r\n          </div>\r\n          <div class=\"info-item\" *ngIf=\"estadoFlujo.resumen.estadisticas\">\r\n            <span class=\"label\">Total facturas:</span>\r\n            <span class=\"value\">{{ estadoFlujo.resumen.estadisticas.totalFacturas }}</span>\r\n          </div>\r\n        </div>\r\n      </div> -->\r\n    </div>\r\n\r\n    <!-- Acciones disponibles -->\r\n    <div class=\"acciones-disponibles\" *ngIf=\"accionesDisponibles.length > 0\">\r\n      <h4 class=\"section-title\">Acciones disponibles:</h4>\r\n      <div class=\"acciones-grid\">\r\n        <button \r\n          *ngFor=\"let accion of accionesDisponibles\" \r\n          (click)=\"ejecutarAccion(accion)\"\r\n          class=\"btn-accion\"\r\n          [disabled]=\"loading\"\r\n          [title]=\"getAccionTexto(accion)\">\r\n          <ion-icon [name]=\"getAccionIcon(accion)\"></ion-icon>\r\n          <span class=\"accion-text\">{{ getAccionTexto(accion) }}</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Información del nuevo flujo -->\r\n    <div class=\"flujo-inicial\" *ngIf=\"estadoFlujo.estadoActual === 'No visitado' || estadoFlujo.estadoActual === 'Visitado pendiente'\">\r\n      <!-- <h4 class=\"section-title\">Nuevo Flujo de Trabajo:</h4>\r\n      <div class=\"flujo-info\">\r\n        <div class=\"flujo-step\">\r\n          <ion-icon name=\"create-outline\"></ion-icon>\r\n          <div class=\"step-content\">\r\n            <span class=\"step-title\">1. Crear Trabajo</span>\r\n            <span class=\"step-description\">Crear un nuevo parte de trabajo para el aviso</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"flujo-step\">\r\n          <ion-icon name=\"document-text-outline\"></ion-icon>\r\n          <div class=\"step-content\">\r\n            <span class=\"step-title\">2. Hacer Albarán</span>\r\n            <span class=\"step-description\">Al finalizar el trabajo, crear albarán con firma del cliente</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"flujo-step\">\r\n          <ion-icon name=\"receipt-outline\"></ion-icon>\r\n          <div class=\"step-content\">\r\n            <span class=\"step-title\">3. Facturar</span>\r\n            <span class=\"step-description\">Generar factura basada en el albarán completado</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div> -->\r\n\r\n    <!-- Sin acciones disponibles -->\r\n    <div class=\"sin-acciones\" *ngIf=\"accionesDisponibles.length === 0 && !estadoFlujo.puedeCrearPresupuesto\">\r\n      <ion-icon name=\"checkmark-circle-outline\" class=\"complete-icon\"></ion-icon>\r\n      <span class=\"complete-text\">No hay acciones pendientes</span>\r\n    </div>\r\n\r\n  </div>\r\n</div> ", "import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IonIcon, IonSegment, IonSegmentButton, ModalController } from '@ionic/angular/standalone';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { addIcons } from 'ionicons';\r\nimport { close, pencilOutline, mapOutline, navigate, person, call, mail, add, addCircle, gridOutline, listOutline, chevronDownOutline, eyeOutline, arrowBackOutline, refreshOutline, alertCircleOutline, ellipsisVertical, ellipsisVerticalOutline, trashOutline, constructOutline, personOutline, imagesOutline, documentTextOutline, checkmarkCircleOutline } from 'ionicons/icons';\r\nimport { AvisosService } from '../../../../core/services/avisos.service';\r\nimport { TrabajosService } from '../../../../core/services/trabajos.service';\r\nimport { Aviso } from '../../models/aviso.model';\r\nimport { TrabajoRealizado } from '../../models/trabajo-realizado.model';\r\nimport { CrearTrabajosRealizadosComponent } from '../crear-trabajos-realizados/crear-trabajos-realizados.component';\r\nimport { HacerAlbaranComponent } from '../hacer-albaran/hacer-albaran.component';\r\nimport { FlujoEstadoComponent } from '../../../../shared/components/flujo-estado/flujo-estado.component';\r\nimport { CrearAvisosModalComponent } from '../crear-avisos-modal/crear-avisos-modal.component';\r\nimport { Subject, takeUntil, firstValueFrom } from 'rxjs';\r\nimport { FlujoAvisosService } from '../../../../core/services/flujo-avisos.service';\r\n\r\naddIcons({ close, pencilOutline, navigate, person, call, mail, mapOutline, arrowBackOutline });\r\n\r\n@Component({\r\n  selector: 'app-ver-avisos',\r\n  templateUrl: './ver-avisos.component.html',\r\n  styleUrls: ['./ver-avisos.component.scss'],\r\n  standalone: true, \r\n    imports: [CommonModule, IonIcon, FlujoEstadoComponent],\r\n})\r\nexport class VerAvisosComponent implements OnInit {\r\n  @ViewChild('fileInput', { static: false }) fileInput!: ElementRef<HTMLInputElement>;\r\n  \r\n  // Añadir la propiedad para controlar la vista\r\n  vistaGaleria: 'grid' | 'list' = 'grid';\r\n  \r\n  // Datos del aviso\r\n  aviso: Aviso | null = null;\r\n  loading = false;\r\n  error: string | null = null;\r\n  subiendoImagenes = false;\r\n  \r\n  private destroy$ = new Subject<void>();  \r\n\r\n  // Datos de trabajos realizados\r\n  trabajosRealizados: TrabajoRealizado[] = [];\r\n  loadingTrabajos = false;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private avisosService: AvisosService,\r\n    private trabajosService: TrabajosService,\r\n    private modalController: ModalController,\r\n    private flujoAvisosService: FlujoAvisosService\r\n  ) {\r\n    addIcons({refreshOutline,alertCircleOutline,arrowBackOutline,close,pencilOutline,checkmarkCircleOutline,navigate,person,call,mail,addCircle,constructOutline,documentTextOutline,trashOutline,imagesOutline,personOutline,gridOutline,listOutline,chevronDownOutline,eyeOutline,ellipsisVerticalOutline,ellipsisVertical,add,mapOutline});\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.cargarAviso();\r\n  }\r\n\r\n  /**\r\n   * Carga los trabajos realizados del aviso\r\n   */\r\n  cargarTrabajos() {\r\n    if (!this.aviso?.id) return;\r\n\r\n    this.loadingTrabajos = true;\r\n    this.trabajosService.getTrabajosAviso(this.aviso.id)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: (response) => {\r\n          this.trabajosRealizados = response.trabajos;\r\n          this.loadingTrabajos = false;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error al cargar trabajos:', error);\r\n          this.loadingTrabajos = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  /**\r\n   * Carga el aviso basado en el ID de la URL\r\n   */\r\n  cargarAviso() {\r\n    this.loading = true;\r\n    this.error = null;\r\n\r\n    this.route.params\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(params => {\r\n        const avisoId = params['id-aviso'];\r\n        if (avisoId) {\r\n          this.avisosService.getAviso(avisoId)\r\n            .pipe(takeUntil(this.destroy$))\r\n            .subscribe({\r\n              next: (aviso) => {\r\n                this.aviso = aviso;\r\n                this.loading = false;\r\n                // Cargar trabajos realizados después de cargar el aviso\r\n                this.cargarTrabajos();\r\n              },\r\n              error: (error) => {\r\n                console.error('Error al cargar el aviso:', error);\r\n                this.error = 'Error al cargar el aviso. Por favor, inténtalo de nuevo.';\r\n                this.loading = false;\r\n              }\r\n            });\r\n        } else {\r\n          this.error = 'ID de aviso no válido';\r\n          this.loading = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  cambiarVistaGaleria(event: any) {\r\n    this.vistaGaleria = event.detail.value;\r\n  }\r\n\r\n  /**\r\n   * Navega de vuelta a la lista de avisos\r\n   */\r\n  volverALista() {\r\n    // Verificar si vino desde el historial\r\n    const referrer = document.referrer;\r\n    if (referrer && referrer.includes('/historial')) {\r\n      this.router.navigate(['/historial']);\r\n    } else {\r\n      this.router.navigate(['/avisos']);\r\n    }\r\n  }\r\n\r\n  verCliente() {\r\n    if (this.aviso?.cliente?.id) {\r\n      // Implementar navegación al detalle del cliente\r\n      console.log('Navegar al cliente:', this.aviso.cliente.id);\r\n    }\r\n  }\r\n\r\n  verMapa() {\r\n    if (this.aviso?.direccion_cliente_aviso) {\r\n      // Abrir Google Maps con la dirección\r\n      const direccion = encodeURIComponent(this.aviso.direccion_cliente_aviso);\r\n      window.open(`https://www.google.com/maps/search/?api=1&query=${direccion}`, '_blank');\r\n    }\r\n  }\r\n\r\n  editarAviso() {\r\n    if (this.aviso?.id) {\r\n      this.abrirModalEditarAviso();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Abre el modal para editar el aviso\r\n   */\r\n  async abrirModalEditarAviso() {\r\n    if (!this.aviso?.id) return;\r\n\r\n    const modal = await this.modalController.create({\r\n      component: CrearAvisosModalComponent,\r\n      cssClass: 'modal-crear-aviso',\r\n      componentProps: {\r\n        modoEdicion: true,\r\n        avisoExistente: this.aviso\r\n      }\r\n    });\r\n\r\n    await modal.present();\r\n\r\n    const { data, role } = await modal.onWillDismiss();\r\n    if (role === 'confirm' && data) {\r\n      try {\r\n        console.log('Datos del formulario de edición:', data);\r\n        \r\n        // Preparar datos para actualizar\r\n        const datosActualizacion = {\r\n          tipo: data.tipo,\r\n          nombre_cliente_aviso: data.nombreContacto,\r\n          direccion_cliente_aviso: data.direccionLocal,\r\n          telefono_cliente_aviso: data.telefono,\r\n          nombre_contacto: data.nombreContacto,\r\n          descripcion_problema: data.descripcion,\r\n          es_urgente: data.esUrgente,\r\n          urgencia: data.esUrgente ? 'Alta' : 'Normal'\r\n        };\r\n\r\n        // Actualizar el aviso\r\n        this.loading = true;\r\n        this.avisosService.actualizarAviso(this.aviso.id, datosActualizacion)\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe({\r\n            next: (avisoActualizado) => {\r\n              console.log('Aviso actualizado exitosamente:', avisoActualizado);\r\n              this.loading = false;\r\n              \r\n              // Mostrar mensaje de éxito\r\n              this.mostrarMensaje('Aviso actualizado exitosamente', 'success');\r\n              \r\n              // Recargar los datos del aviso\r\n              this.cargarAviso();\r\n            },\r\n            error: (error) => {\r\n              console.error('Error al actualizar aviso:', error);\r\n              this.loading = false;\r\n              \r\n              // Mostrar mensaje de error\r\n              this.mostrarMensaje(\r\n                error.message || 'Error al actualizar el aviso. Por favor, inténtalo de nuevo.',\r\n                'error'\r\n              );\r\n            }\r\n          });\r\n      } catch (error) {\r\n        console.error('Error al procesar la edición:', error);\r\n        this.mostrarMensaje('Error al procesar la edición. Por favor, inténtalo de nuevo.', 'error');\r\n      }\r\n    }\r\n  }\r\n\r\n  cerrarAlbaran() {\r\n    if (this.aviso?.id) {\r\n      // Implementar cierre de albarán\r\n      console.log('Cerrar albarán para aviso:', this.aviso.id);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Abre el selector de archivos\r\n   */\r\n  seleccionarImagenes() {\r\n    if (this.fileInput) {\r\n      this.fileInput.nativeElement.click();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Maneja la selección de archivos\r\n   */\r\n  onFileSelected(event: any) {\r\n    const files: FileList = event.target.files;\r\n    if (files.length > 0 && this.aviso?.id) {\r\n      this.subirImagenes(Array.from(files));\r\n    }\r\n    \r\n    // Limpiar el input para permitir seleccionar los mismos archivos de nuevo\r\n    event.target.value = '';\r\n  }\r\n\r\n  /**\r\n   * Sube múltiples imágenes al aviso\r\n   */\r\n  async subirImagenes(files: File[]) {\r\n    if (!this.aviso?.id) {\r\n      console.error('No se puede subir imágenes: aviso no válido');\r\n      return;\r\n    }\r\n\r\n    this.subiendoImagenes = true;\r\n    this.error = null;\r\n\r\n    try {\r\n      const subidasCompletadas = new Promise<void>((resolve) => {\r\n        let fotosSubidas = 0;\r\n        const totalFotos = files.length;\r\n        \r\n        files.forEach((file: File) => {\r\n          this.avisosService.subirFoto(this.aviso!.id!, file)\r\n            .pipe(takeUntil(this.destroy$))\r\n            .subscribe({\r\n              next: (foto) => {\r\n                console.log('Foto subida:', foto);\r\n                fotosSubidas++;\r\n                if (fotosSubidas === totalFotos) {\r\n                  resolve();\r\n                }\r\n              },\r\n              error: (error) => {\r\n                console.error('Error al subir foto:', error);\r\n                fotosSubidas++;\r\n                if (fotosSubidas === totalFotos) {\r\n                  resolve();\r\n                }\r\n              }\r\n            });\r\n        });\r\n      });\r\n      \r\n      // Esperar a que todas las fotos se suban\r\n      await subidasCompletadas;\r\n      \r\n      // Recargar el aviso para mostrar las nuevas imágenes\r\n      this.cargarAviso();\r\n      \r\n    } catch (error) {\r\n      console.error('Error al subir imágenes:', error);\r\n      this.error = 'Error al subir las imágenes. Por favor, inténtalo de nuevo.';\r\n    } finally {\r\n      this.subiendoImagenes = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Abre el modal para crear un nuevo trabajo realizado\r\n   */\r\n  async crearTrabajoRealizado(trabajoExistente?: TrabajoRealizado) {\r\n    if (!this.aviso?.id) return;\r\n\r\n    const modal = await this.modalController.create({\r\n      component: CrearTrabajosRealizadosComponent,\r\n      componentProps: {\r\n        avisoId: this.aviso.id,\r\n        trabajoExistente: trabajoExistente // Pasar el trabajo existente si se está editando\r\n      },\r\n      cssClass: 'modal-crear-trabajo'\r\n    });\r\n\r\n    await modal.present();\r\n\r\n    const { data, role } = await modal.onWillDismiss();\r\n    if (role === 'confirm' && data) {\r\n      try {\r\n        if (trabajoExistente) {\r\n          // Actualizar trabajo existente\r\n          const resultado = await firstValueFrom(this.trabajosService.actualizarTrabajo(trabajoExistente.id!, data));\r\n          console.log('Trabajo actualizado exitosamente:', resultado);\r\n          alert('Trabajo actualizado exitosamente.');\r\n        } else {\r\n          // Crear nuevo trabajo\r\n          const resultado = await firstValueFrom(this.trabajosService.crearTrabajo(data));\r\n          console.log('Trabajo creado exitosamente:', resultado);\r\n          alert('Trabajo creado exitosamente. Los materiales han sido descontados del inventario.');\r\n        }\r\n        \r\n        // Recargar trabajos para mostrar los cambios\r\n        this.cargarTrabajos();\r\n      } catch (error) {\r\n        console.error('Error al procesar trabajo:', error);\r\n        alert('Error al procesar el trabajo. Por favor, inténtalo de nuevo.');\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Edita un trabajo existente\r\n   */\r\n  async editarTrabajo(trabajo: TrabajoRealizado) {\r\n    try {\r\n      // Cargar los datos completos del trabajo con sus materiales\r\n      const trabajoCompleto = await firstValueFrom(this.trabajosService.getTrabajo(trabajo.id!));\r\n      await this.crearTrabajoRealizado(trabajoCompleto.trabajo);\r\n    } catch (error) {\r\n      console.error('Error al cargar el trabajo para editar:', error);\r\n      alert('Error al cargar el trabajo para editar. Por favor, inténtalo de nuevo.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Elimina un trabajo\r\n   */\r\n  async eliminarTrabajo(trabajo: TrabajoRealizado) {\r\n    const confirmacion = confirm(\r\n      `¿Estás seguro de que quieres eliminar este trabajo?\\n\\n` +\r\n      `Fecha: ${trabajo.fecha_trabajo}\\n` +\r\n      `Descripción: ${trabajo.descripcion}\\n\\n` +\r\n      `Esta acción no se puede deshacer y los materiales serán devueltos al inventario.`\r\n    );\r\n\r\n    if (confirmacion) {\r\n      try {\r\n        await firstValueFrom(this.trabajosService.eliminarTrabajo(trabajo.id!));\r\n        console.log('Trabajo eliminado exitosamente');\r\n        alert('Trabajo eliminado exitosamente. Los materiales han sido devueltos al inventario.');\r\n        \r\n        // Recargar trabajos para actualizar la lista\r\n        this.cargarTrabajos();\r\n      } catch (error) {\r\n        console.error('Error al eliminar el trabajo:', error);\r\n        alert('Error al eliminar el trabajo. Por favor, inténtalo de nuevo.');\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Abre el modal para hacer albarán\r\n   */\r\n  async hacerAlbaran(trabajo: TrabajoRealizado) {\r\n    console.log('Abriendo modal de hacer albarán para trabajo:', trabajo);\r\n    if (!this.aviso?.id) return;\r\n\r\n        const modal = await this.modalController.create({\r\n      component: HacerAlbaranComponent,\r\n      componentProps: {\r\n        trabajo: trabajo,\r\n        aviso: this.aviso\r\n      },\r\n      cssClass: 'modal-hacer-albaran modal-fullscreen',\r\n      backdropDismiss: false\r\n    });\r\n\r\n    console.log('Modal creado:', modal);\r\n    console.log('Presentando modal...');\r\n    await modal.present();\r\n    console.log('Modal presentado');\r\n\r\n                    const { data, role } = await modal.onWillDismiss();\r\n        if (role === 'confirm' && data?.success) {\r\n          try {\r\n            console.log('Albarán creado exitosamente:', data.albaran);\r\n            console.log('Trabajo actualizado:', data.trabajo);\r\n            console.log('Aviso actualizado:', data.aviso);\r\n            alert(data.mensaje || 'Albarán creado exitosamente');\r\n            \r\n            // Recargar trabajos y aviso para mostrar los cambios\r\n            this.cargarTrabajos();\r\n            if (data.aviso) {\r\n              this.aviso = data.aviso;\r\n            }\r\n            \r\n            // Procesar el estado del albarán\r\n            if (data.albaran.estado_cierre === 'Finalizado') {\r\n              console.log('Trabajo finalizado, listo para facturar');\r\n              // El trabajo ya está marcado como \"Finalizado\" y listo para facturar\r\n            }\r\n            \r\n            if (data.albaran.estado_cierre === 'Presupuesto pendiente') {\r\n              console.log('Presupuesto pendiente, se puede crear presupuesto');\r\n              // Aquí se podría mostrar opción para crear presupuesto\r\n            }\r\n            \r\n            if (data.albaran.estado_cierre === 'Otra visita') {\r\n              console.log('Otra visita requerida');\r\n              // Aquí se podría programar nueva visita\r\n            }\r\n            \r\n          } catch (error) {\r\n            console.error('Error al procesar albarán:', error);\r\n            alert('Error al procesar el albarán. Por favor, inténtalo de nuevo.');\r\n          }\r\n        }\r\n  }\r\n\r\n  realizarOtraVisita(trabajo: any) {\r\n    // Implementar lógica para realizar otra visita\r\n    console.log('Realizar otra visita para el trabajo:', trabajo);\r\n  }\r\n\r\n  /**\r\n   * Elimina una foto del aviso\r\n   */\r\n  async eliminarFoto(foto: any) {\r\n    if (!this.aviso?.id || !foto?.id) {\r\n      console.error('No se puede eliminar la foto: faltan datos');\r\n      return;\r\n    }\r\n\r\n    // Confirmar antes de eliminar\r\n    const confirmacion = confirm(`¿Estás seguro de que quieres eliminar esta imagen?\\n\\nEsta acción no se puede deshacer.`);\r\n    \r\n    if (confirmacion) {\r\n      try {\r\n        await firstValueFrom(this.avisosService.eliminarFoto(foto.id));\r\n        console.log('Foto eliminada exitosamente');\r\n        \r\n        // Recargar el aviso para actualizar la lista de fotos\r\n        this.cargarAviso();\r\n      } catch (error) {\r\n        console.error('Error al eliminar la foto:', error);\r\n        alert('Error al eliminar la imagen. Por favor, inténtalo de nuevo.');\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calcula las horas de trabajo de un trabajo\r\n   */\r\n  calcularHorasTrabajo(trabajo: TrabajoRealizado): number {\r\n    const inicio = new Date(`2000-01-01T${trabajo.hora_inicio}`);\r\n    const fin = new Date(`2000-01-01T${trabajo.hora_fin}`);\r\n    const horas = (fin.getTime() - inicio.getTime()) / (1000 * 60 * 60);\r\n    return Math.max(0, horas);\r\n  }\r\n\r\n  /**\r\n   * Obtiene el estado del albarán asociado al trabajo\r\n   */\r\n  getAlbaranEstado(trabajo: TrabajoRealizado): string {\r\n    if (!trabajo.albaran_id || !this.aviso?.albaranes) {\r\n      return 'pendiente';\r\n    }\r\n    \r\n    const albaran = this.aviso.albaranes.find(a => a.id === trabajo.albaran_id);\r\n    if (!albaran) {\r\n      return 'pendiente';\r\n    }\r\n    \r\n    // Convertir el estado del albarán a un formato válido para CSS\r\n    return albaran.estado_cierre.toLowerCase().replace(/ /g, '-');\r\n  }\r\n\r\n  /**\r\n   * Convierte el estado del aviso a una clase CSS válida\r\n   */\r\n  getEstadoClass(estado: string | undefined): string {\r\n    if (!estado) return 'badge-pendiente';\r\n    return 'badge-' + estado.toLowerCase().replace(/ /g, '-');\r\n  }\r\n\r\n  /**\r\n   * Maneja las acciones ejecutadas desde el componente de flujo\r\n   */\r\n  onAccionFlujoEjecutada(resultado: any) {\r\n    console.log('Acción de flujo ejecutada:', resultado);\r\n    \r\n    // Recargar aviso para reflejar cambios\r\n    this.cargarAviso();\r\n    \r\n    // Mostrar mensaje de éxito (opcional)\r\n    if (resultado.mensaje) {\r\n      console.log('Mensaje de éxito:', resultado.mensaje);\r\n      // Aquí puedes implementar un toast o notificación\r\n      alert(resultado.mensaje);\r\n    }\r\n    \r\n    // Navegar si se creó una factura\r\n    if (resultado.facturaId) {\r\n      const navegarFactura = confirm('Se ha generado una factura. ¿Deseas ver la factura creada?');\r\n      if (navegarFactura) {\r\n        this.router.navigate(['/facturas', resultado.facturaId]);\r\n      }\r\n    }\r\n  }\r\n\r\n  completarAviso() {\r\n    if (this.aviso?.id) {\r\n      console.log('🔄 Completando aviso:', this.aviso.id);\r\n      \r\n      // Mostrar confirmación antes de completar\r\n      if (confirm('¿Estás seguro de que quieres marcar este aviso como completado? Esta acción no se puede deshacer.')) {\r\n        this.loading = true;\r\n        \r\n        this.flujoAvisosService.completarAviso(this.aviso.id).subscribe({\r\n          next: (resultado) => {\r\n            console.log('✅ Aviso completado exitosamente:', resultado);\r\n            this.loading = false;\r\n            \r\n            // Mostrar mensaje de éxito\r\n            this.mostrarMensaje('Aviso completado exitosamente', 'success');\r\n            \r\n            // Recargar los datos del aviso\r\n            this.cargarAviso();\r\n          },\r\n          error: (error) => {\r\n            console.error('❌ Error al completar aviso:', error);\r\n            this.loading = false;\r\n            \r\n            // Mostrar mensaje de error\r\n            this.mostrarMensaje(\r\n              error.message || 'Error al completar el aviso. Verifica que haya trabajos realizados y facturas generadas.',\r\n              'error'\r\n            );\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      console.error('No hay aviso seleccionado para completar');\r\n      this.mostrarMensaje('No hay aviso seleccionado para completar', 'error');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Muestra un mensaje al usuario\r\n   */\r\n  private mostrarMensaje(mensaje: string, tipo: 'success' | 'error' | 'info' = 'info') {\r\n    // Aquí podrías implementar un sistema de notificaciones\r\n    // Por ahora, usamos console.log y alert para errores\r\n    console.log(`[${tipo.toUpperCase()}] ${mensaje}`);\r\n    \r\n    if (tipo === 'error') {\r\n      alert(mensaje);\r\n    }\r\n    \r\n    // Si tienes un servicio de notificaciones, lo usarías aquí\r\n    // this.notificationService.show(mensaje, tipo);\r\n  }\r\n}\r\n", "<!-- Loading State -->\r\n<div *ngIf=\"loading\" class=\"loading-state\">\r\n  <div class=\"loading-spinner\">\r\n    <ion-icon name=\"refresh-outline\" class=\"spinning\"></ion-icon>\r\n    <p>Cargando aviso...</p>\r\n  </div>\r\n</div>\r\n\r\n<!-- Error State -->\r\n<div *ngIf=\"error && !loading\" class=\"error-state\">\r\n  <div class=\"error-message\">\r\n    <ion-icon name=\"alert-circle-outline\"></ion-icon>\r\n    <p>{{ error }}</p>\r\n    <button class=\"btn-retry\" (click)=\"cargarAviso()\">\r\n      <ion-icon name=\"refresh-outline\"></ion-icon>\r\n      Reintentar\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n<!-- Información General -->\r\n<div *ngIf=\"aviso && !loading\" class=\"info-card\">\r\n  <div class=\"card-header\">\r\n    <div class=\"header-container\">\r\n      <!-- Botón de volver -->\r\n      <div class=\"back-button\">\r\n        <button class=\"btn-back\" (click)=\"volverALista()\">\r\n          <ion-icon name=\"arrow-back-outline\"></ion-icon>\r\n          <span class=\"desktop-only\">Volver</span>\r\n          <span class=\"mobile-only\">Volver</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"header-actions\">\r\n      <!-- Solo mostrar botón de completar si el aviso NO está completado -->\r\n      <button \r\n        *ngIf=\"aviso?.estado !== 'Completado'\" \r\n        class=\"btn-secondary\" \r\n        (click)=\"completarAviso()\">\r\n        <ion-icon name=\"close\"></ion-icon>\r\n        <span class=\"desktop-only\">Completar Aviso</span>\r\n        <span class=\"mobile-only\">Completar</span>\r\n      </button>\r\n      \r\n      <!-- Solo mostrar botón de editar si el aviso NO está completado -->\r\n      <button \r\n        *ngIf=\"aviso?.estado !== 'Completado'\" \r\n        class=\"btn-primary\" \r\n        (click)=\"editarAviso()\">\r\n        <ion-icon name=\"pencil-outline\"></ion-icon>\r\n        <span class=\"desktop-only\">Editar aviso</span>\r\n        <span class=\"mobile-only\">Editar</span>\r\n      </button>\r\n      \r\n      <!-- Mostrar mensaje cuando el aviso esté completado -->\r\n      <div *ngIf=\"aviso?.estado === 'Completado'\" class=\"aviso-completado-message\">\r\n        <ion-icon name=\"checkmark-circle-outline\"></ion-icon>\r\n        <span>Aviso completado</span>\r\n      </div>\r\n    </div>\r\n    <span class=\"mobile-only title\">Aviso #{{aviso.id?.substring(0, 8)}}</span>\r\n  </div>\r\n\r\n  <h2 class=\"title\">\r\n    <span class=\"desktop-only\">Información general del Aviso - #{{aviso.id?.substring(0, 8)}}</span>\r\n  </h2>\r\n\r\n  <div class=\"info-grid\">\r\n    <div class=\"info-row\">\r\n      <div class=\"info-item\">\r\n        <label>Estado</label>\r\n        <span class=\"estado-pendiente\">{{aviso.estado}}</span>\r\n      </div>\r\n      <div class=\"info-item\">\r\n        <label>Urgente</label>\r\n        <span class=\"urgent-badge\" [class.urgent]=\"aviso.urgencia === 'Alta' || aviso.es_urgente\">\r\n          {{aviso.urgencia === 'Alta' || aviso.es_urgente ? 'Sí' : 'No'}}\r\n        </span>\r\n      </div>\r\n      <div class=\"info-item\">\r\n        <label>Fecha de creación</label>\r\n        <span>{{aviso.fecha_creacion | date:'dd/MM/yyyy'}}</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"info-item cliente-section\">\r\n      <label>Cliente</label>\r\n      <div class=\"cliente-info\">\r\n        <span class=\"cliente-nombre\">{{aviso.nombre_cliente_aviso}}</span>\r\n        <a class=\"ver-cliente\" (click)=\"verCliente()\">\r\n          <span class=\"desktop-only\">Ver cliente</span>\r\n        </a>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"info-item direccion-section\">\r\n      <label>Dirección</label>\r\n      <div class=\"direccion-info\">\r\n        <span class=\"direccion-texto\">{{aviso.direccion_cliente_aviso}}</span>\r\n        <button class=\"btn-map\" (click)=\"verMapa()\" title=\"Ver en mapa\">\r\n          <ion-icon name=\"navigate\"></ion-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"contacto-section\">\r\n      <label>Contacto Cliente</label>\r\n      <div class=\"contacto-items\">\r\n        <div class=\"contacto-item nombre-contacto\" *ngIf=\"aviso.nombre_contacto\">\r\n          <ion-icon name=\"person\"></ion-icon>\r\n          <span>{{aviso.nombre_contacto}}</span>\r\n        </div>\r\n        <div class=\"contacto-item\" *ngIf=\"aviso.telefono_cliente_aviso\">\r\n          <ion-icon name=\"call\"></ion-icon>\r\n          <span>{{aviso.telefono_cliente_aviso}}</span>\r\n        </div>\r\n        <div class=\"contacto-item\" *ngIf=\"aviso.cliente?.email\">\r\n          <ion-icon name=\"mail\"></ion-icon>\r\n          <span>{{aviso.cliente?.email}}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Descripción del Aviso -->\r\n<div class=\"info-card\">\r\n  <div class=\"card-header\" style=\"justify-content: space-between!important;\">\r\n    <h2>Descripción del Aviso</h2>\r\n    <span class=\"badge-estado-aviso\" [class]=\"getEstadoClass(aviso?.estado)\">\r\n      {{aviso?.estado || 'Pendiente'}}\r\n    </span>\r\n  </div>\r\n\r\n  <div class=\"descripcion-content\">\r\n    <div class=\"info-item\">\r\n      <label>Tipo de Aviso</label>\r\n      <p class=\"tipo-aviso\">{{aviso?.tipo || 'No especificado'}}</p>\r\n    </div>\r\n\r\n    <div class=\"info-item\">\r\n      <label>Descripción Detallada del Problema/Petición</label>\r\n      <p class=\"descripcion-texto\">{{aviso?.descripcion_problema}}</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- ================================= -->\r\n<!-- SECCIÓN REORGANIZADA: TRABAJOS Y FLUJO JUNTOS -->\r\n<!-- ================================= -->\r\n\r\n<!-- Trabajos Realizados y Gestión del Flujo -->\r\n<div class=\"info-card\">\r\n  <div class=\"card-header\">\r\n    <h2 style=\"text-wrap: nowrap;\">Gestión de Albaranes</h2>\r\n    <div class=\"header-actions-jobs\">\r\n      <button class=\"btn-primary\" (click)=\"crearTrabajoRealizado()\">\r\n        <ion-icon name=\"add-circle\"></ion-icon>\r\n        <span class=\"desktop-only\">Crear parte de trabajo</span>\r\n        <span class=\"mobile-only\">Crear trabajo</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Gestión del Flujo Automático - MOVIDO AQUÍ -->\r\n  <div class=\"flujo-section\" *ngIf=\"aviso?.id\">\r\n    <div class=\"flujo-container\">\r\n      <app-flujo-estado [avisoId]=\"aviso?.id || ''\" (accionEjecutada)=\"onAccionFlujoEjecutada($event)\">\r\n      </app-flujo-estado>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Separador visual -->\r\n  <div class=\"section-divider\">\r\n    <span>Lista de Trabajos Registrados</span>\r\n  </div>\r\n\r\n  <!-- Tabla de trabajos realizados -->\r\n  <div class=\"table-container\">\r\n    <!-- Loading State -->\r\n    <div *ngIf=\"loadingTrabajos\" class=\"loading-state\">\r\n      <div class=\"loading-spinner\">\r\n        <ion-icon name=\"refresh-outline\" class=\"spinning\"></ion-icon>\r\n        <p>Cargando trabajos...</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- No hay trabajos -->\r\n    <div *ngIf=\"!loadingTrabajos && (!trabajosRealizados || trabajosRealizados.length === 0)\" class=\"no-trabajos\">\r\n      <div class=\"empty-state\">\r\n        <ion-icon name=\"construct-outline\"></ion-icon>\r\n        <p>No hay trabajos realizados para este aviso</p>\r\n        <small>Crea el primer parte de trabajo para comenzar</small>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Tabla de trabajos -->\r\n    <table *ngIf=\"!loadingTrabajos && trabajosRealizados.length > 0\" class=\"custom-mat-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Número</th>\r\n          <th>Fecha trabajo</th>\r\n          <th>Horas</th>\r\n          <th>Descripción</th>\r\n          <th>Materiales</th>\r\n          <th>Estado</th>\r\n          <th>Acciones</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let trabajo of trabajosRealizados; let i = index\">\r\n          <td data-label=\"Número\">#{{i + 1}}</td>\r\n          <td data-label=\"Fecha trabajo\">{{trabajo.fecha_trabajo | date:'dd/MM/yyyy'}}</td>\r\n          <td data-label=\"Horas\">{{calcularHorasTrabajo(trabajo) | number:'1.1-1'}}h</td>\r\n          <td data-label=\"Descripción\">\r\n            <div class=\"descripcion-trabajo\">\r\n              <p>{{trabajo.descripcion}}</p>\r\n              <small>{{trabajo.hora_inicio}} - {{trabajo.hora_fin}}</small>\r\n            </div>\r\n          </td>\r\n          <td data-label=\"Materiales\">\r\n            <div class=\"materiales-info\">\r\n              <!-- Mostrar materiales con cantidades reales si están disponibles -->\r\n              <ul class=\"repuestos-list\" *ngIf=\"trabajo.materiales && trabajo.materiales.length > 0\">\r\n                <li *ngFor=\"let material of trabajo.materiales\">\r\n                  {{material.material?.nombre || 'Material'}}: {{material.cantidad_utilizada}} {{material.material?.unidad || 'unidad'}}\r\n                </li>\r\n              </ul>\r\n              <!-- Fallback a repuestos básicos si no hay materiales detallados -->\r\n              <ul class=\"repuestos-list\" *ngIf=\"(!trabajo.materiales || trabajo.materiales.length === 0) && trabajo.repuestos && trabajo.repuestos.length > 0\">\r\n                <li *ngFor=\"let repuesto of trabajo.repuestos\">{{repuesto}}</li>\r\n              </ul>\r\n              <span *ngIf=\"(!trabajo.materiales || trabajo.materiales.length === 0) && (!trabajo.repuestos || trabajo.repuestos.length === 0)\" class=\"no-repuestos\">\r\n                Sin materiales\r\n              </span>\r\n            </div>\r\n          </td>\r\n          <td data-label=\"Estado\">\r\n            <span class=\"badge-estado\" [class]=\"'badge-' + trabajo.estado.toLowerCase().replace(' ', '-')\">\r\n              {{trabajo.estado}}\r\n            </span>\r\n          </td>\r\n          <td data-label=\"Acciones\">\r\n            <div class=\"estado-actions\">\r\n              <!-- Botón de Hacer Albarán (solo si el trabajo está en estado \"En curso\" o \"Abierto\") -->\r\n              <button \r\n                *ngIf=\"trabajo.estado === 'En curso' || trabajo.estado === 'Abierto'\"\r\n                class=\"btn-primary btn-small\" \r\n                (click)=\"hacerAlbaran(trabajo)\" \r\n                title=\"Hacer albarán\">\r\n                <ion-icon name=\"document-text-outline\"></ion-icon>\r\n                <span class=\"desktop-only\">Crear Albarán</span>\r\n                <span class=\"mobile-only\">Albarán</span>\r\n              </button>\r\n              \r\n              <!-- Mostrar información del albarán si existe -->\r\n              <div *ngIf=\"trabajo.albaran_id\" class=\"albaran-info\">\r\n                <span class=\"badge-albaran\" [class]=\"'badge-' + getAlbaranEstado(trabajo)\">\r\n                  <ion-icon name=\"checkmark-circle-outline\"></ion-icon>\r\n                  Albarán Cerrado\r\n                </span>\r\n                <small class=\"albaran-details\">\r\n                  {{ getAlbaranEstado(trabajo) }}\r\n                </small>\r\n              </div>\r\n              \r\n              <!-- Botón de Editar (solo si no está cerrado) -->\r\n              <button \r\n                *ngIf=\"trabajo.estado !== 'Cerrado' && trabajo.estado !== 'Finalizado'\"\r\n                class=\"btn-secondary btn-small\" \r\n                (click)=\"editarTrabajo(trabajo)\" \r\n                title=\"Editar trabajo\">\r\n                <ion-icon name=\"pencil-outline\"></ion-icon>\r\n                <span class=\"desktop-only\">Editar</span>\r\n                <span class=\"mobile-only\">Editar</span>\r\n              </button>\r\n              \r\n              <!-- Botón de Eliminar (solo si no está cerrado) -->\r\n              <button \r\n                *ngIf=\"trabajo.estado !== 'Cerrado' && trabajo.estado !== 'Finalizado'\"\r\n                class=\"btn-danger btn-small\" \r\n                (click)=\"eliminarTrabajo(trabajo)\" \r\n                title=\"Eliminar trabajo\">\r\n                <ion-icon name=\"trash-outline\"></ion-icon>\r\n                <span class=\"desktop-only\">Eliminar</span>\r\n                <span class=\"mobile-only\">Eliminar</span>\r\n              </button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n\r\n<!-- Albaranes Cerrados -->\r\n<div class=\"info-card\" *ngIf=\"aviso && aviso.albaranes && aviso.albaranes.length > 0\">\r\n  <div class=\"card-header\">\r\n    <h2>Albaranes Cerrados</h2>\r\n    <div class=\"header-actions\">\r\n      <span class=\"badge-info\">Total: {{aviso.albaranes.length}}</span>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"albaranes-container\">\r\n    <div class=\"albaran-item\" *ngFor=\"let albaran of aviso.albaranes; let i = index\">\r\n      <div class=\"albaran-header\">\r\n        <div class=\"albaran-info\">\r\n          <h4>Albarán #{{i + 1}}</h4>\r\n          <span class=\"fecha-albaran\">{{albaran.fecha_cierre | date:'dd/MM/yyyy'}}</span>\r\n        </div>\r\n        <div class=\"estado-albaran\">\r\n          <span class=\"badge-estado\" [class]=\"'badge-' + albaran.estado_cierre.toLowerCase().replace(' ', '-')\">\r\n            {{albaran.estado_cierre}}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"albaran-details\">\r\n        <div class=\"detail-row\">\r\n          <div class=\"detail-item\">\r\n            <label>Horario:</label>\r\n            <span>{{albaran.hora_entrada}} - {{albaran.hora_salida}}</span>\r\n          </div>\r\n          <div class=\"detail-item\" *ngIf=\"albaran.presupuesto_necesario > 0\">\r\n            <label>Presupuesto:</label>\r\n            <span>{{albaran.presupuesto_necesario | currency:'EUR':'symbol':'1.2-2'}}</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"detail-item full-width\">\r\n          <label>Descripción del trabajo:</label>\r\n          <p>{{albaran.descripcion_trabajo_realizado}}</p>\r\n        </div>\r\n        \r\n        <div class=\"detail-item full-width\" *ngIf=\"albaran.repuestos_utilizados && albaran.repuestos_utilizados.length > 0\">\r\n          <label>Repuestos utilizados:</label>\r\n          <div class=\"repuestos-tags\">\r\n            <!-- Mostrar repuestos con cantidades reales si están disponibles -->\r\n            <span class=\"repuesto-tag\" *ngFor=\"let repuesto of albaran.repuestos_utilizados\">\r\n              <ng-container *ngIf=\"repuesto.cantidad; else repuestoBasico\">\r\n                {{repuesto.nombre}}: {{repuesto.cantidad}} {{repuesto.unidad || 'unidad'}}\r\n              </ng-container>\r\n              <ng-template #repuestoBasico>\r\n                {{repuesto}}\r\n              </ng-template>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"detail-row\" *ngIf=\"albaran.dni_cliente || albaran.nombre_firma\">\r\n          <div class=\"detail-item\" *ngIf=\"albaran.dni_cliente\">\r\n            <label>DNI Cliente:</label>\r\n            <span>{{albaran.dni_cliente}}</span>\r\n          </div>\r\n          <div class=\"detail-item\" *ngIf=\"albaran.nombre_firma\">\r\n            <label>Firmado por:</label>\r\n            <span>{{albaran.nombre_firma}}</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"detail-item full-width\" *ngIf=\"albaran.observaciones\">\r\n          <label>Observaciones:</label>\r\n          <p>{{albaran.observaciones}}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Galería de imágenes -->\r\n<div class=\"info-card\">\r\n  <div class=\"card-header\" style=\"justify-content: space-between!important;\">\r\n    <h2>Galería de imágenes</h2>\r\n    <div class=\"gallery-actions\">\r\n      <!-- <ion-segment [value]=\"vistaGaleria\" (ionChange)=\"cambiarVistaGaleria($event)\" mode=\"ios\">\r\n        <ion-segment-button value=\"grid\">\r\n          <ion-icon name=\"grid-outline\"></ion-icon>\r\n        </ion-segment-button>\r\n        <ion-segment-button value=\"list\">\r\n          <ion-icon name=\"list-outline\"></ion-icon>\r\n        </ion-segment-button>\r\n      </ion-segment> -->\r\n      <button class=\"btn-primary\" (click)=\"seleccionarImagenes()\" [disabled]=\"subiendoImagenes\">\r\n        <ion-icon name=\"add-circle\"></ion-icon>\r\n        <span class=\"desktop-only\">{{ subiendoImagenes ? 'Subiendo...' : 'Añadir imágenes' }}</span>\r\n        <span class=\"mobile-only\">{{ subiendoImagenes ? 'Subiendo...' : 'Añadir' }}</span>\r\n      </button>\r\n      <input #fileInput type=\"file\" multiple accept=\"image/*\" style=\"display: none;\" (change)=\"onFileSelected($event)\">\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"gallery-items\">\r\n    <!-- Indicador de carga al subir imágenes -->\r\n    <div *ngIf=\"subiendoImagenes\" class=\"uploading-indicator\">\r\n      <ion-icon name=\"refresh-outline\" class=\"spinning\"></ion-icon>\r\n      <p>Subiendo imágenes...</p>\r\n    </div>\r\n\r\n    <div *ngIf=\"!aviso?.fotos || aviso?.fotos?.length === 0\" class=\"no-images\">\r\n      <ion-icon name=\"images-outline\"></ion-icon>\r\n      <p>No hay imágenes disponibles para este aviso</p>\r\n    </div>\r\n    <div class=\"gallery-item\" *ngFor=\"let foto of aviso?.fotos\">\r\n      <img [src]=\"foto.url\" [alt]=\"foto.descripcion || 'Imagen del aviso'\">\r\n      <div class=\"image-info\">\r\n        <span class=\"image-title\">{{foto.descripcion || 'Imagen del aviso'}}</span>\r\n        <span class=\"file-info\">{{foto.fecha_subida | date:'dd/MM/yyyy HH:mm'}}</span>\r\n      </div>\r\n      <button class=\"btn-delete\" (click)=\"eliminarFoto(foto)\" title=\"Eliminar imagen\">\r\n        <ion-icon name=\"trash-outline\"></ion-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["ModalController", "IonIcon", "_a"]
}
