import{a as z}from"./chunk-POYQTKRJ.js";import{a as $}from"./chunk-S7Q5O5P3.js";import{a as E}from"./chunk-NZLZCUTU.js";import{B as v,F,I as j,f as g,j as b,m as C,z as f}from"./chunk-ICGOMMV6.js";var D=(()=>{let _=class _{constructor(e,a,s){this.avisosService=e,this.facturasService=a,this.presupuestosService=s}obtenerEstadoFlujo(e){return this.avisosService.getResumenCompletoAviso(e).pipe(b(a=>({avisoId:e,estadoActual:a.estado,puedeCrearPresupuesto:this.puedeCrearPresupuesto(a),puedeAprobarPresupuesto:this.puedeAprobarPresupuesto(a),puedeFacturarPresupuesto:this.puedeFacturarPresupuesto(a),puedeFacturarTrabajos:this.puedeFacturarTrabajos(a),puedeCompletarAviso:this.puedeCompletarAviso(a),resumen:a})))}ejecutarFlujoCompleto(e,a=!0){return a?this.flujoConPresupuesto(e):this.flujoDirectoSinPresupuesto(e)}flujoDirectoSinPresupuesto(e){return this.avisosService.actualizarAviso(e,{estado:"En curso",requiere_presupuesto:!1}).pipe(v(()=>console.log("\u2705 Aviso actualizado para trabajo directo")),f(()=>this.avisosService.getResumenCompletoAviso(e)),b(a=>({paso:"flujo_directo_iniciado",avisoId:e,mensaje:"Flujo directo iniciado. El t\xE9cnico puede comenzar a trabajar.",resumen:a})))}flujoConPresupuesto(e){return this.avisosService.actualizarAviso(e,{estado:"Pendiente de presupuesto",requiere_presupuesto:!0}).pipe(v(()=>console.log("\u2705 Aviso marcado como requiere presupuesto")),f(()=>this.presupuestosService.crearPresupuesto({aviso_id:e,horas_estimadas:2,total_estimado:0})),v(()=>console.log("\u2705 Presupuesto creado")),b(a=>({paso:"presupuesto_creado",avisoId:e,presupuestoId:a.id,mensaje:"Presupuesto creado. Pendiente de evaluaci\xF3n y aprobaci\xF3n.",presupuesto:a})))}aprobarPresupuesto(e){return this.presupuestosService.cambiarEstado(e,"Completado").pipe(f(a=>this.avisosService.actualizarAviso(a.aviso_id,{estado:"En curso"})),v(()=>console.log("\u2705 Presupuesto aprobado y aviso en curso")),b(a=>({paso:"presupuesto_aprobado",avisoId:a.id,mensaje:"Presupuesto aprobado. El t\xE9cnico puede comenzar a trabajar.",aviso:a})))}facturarPresupuesto(e){return this.facturasService.crearFacturaDesdePresupuesto(e).pipe(v(()=>console.log("\u2705 Factura creada desde presupuesto")),f(a=>this.avisosService.actualizarEstadoAutomatico(a.factura.aviso_id).pipe(b(()=>a))),b(a=>({paso:"factura_desde_presupuesto",avisoId:a.factura.aviso_id,facturaId:a.factura.id,mensaje:"Factura generada autom\xE1ticamente desde presupuesto aprobado.",factura:a})))}facturarTrabajos(e){return console.log("\u{1F527} Iniciando facturaci\xF3n de trabajos para aviso:",e),this.avisosService.getResumenCompletoAviso(e).pipe(f(a=>{var i;if(console.log("\u{1F527} Resumen completo obtenido:",a),!a.estadisticas.albaranesFinalizados)throw new Error('No hay albaranes finalizados para facturar. Solo los albaranes marcados como "Finalizado" se pueden facturar autom\xE1ticamente.');let s=((i=a.trabajos)==null?void 0:i.filter(r=>{var c;return!r.albaran_id||!((c=r.albaran)!=null&&c.estado_cierre)||r.albaran.estado_cierre!=="Finalizado"}))||[];if(s.length>0){let r=s.map(c=>{var h,o;return`Trabajo #${(h=c.id)==null?void 0:h.substring(0,8)} (${c.descripcion}) - Estado: ${((o=c.albaran)==null?void 0:o.estado_cierre)||"Sin cerrar"}`}).join(", ");throw new Error(`No se puede facturar. Solo se pueden facturar trabajos con albaranes marcados como "Finalizado". Trabajos pendientes: ${r}`)}console.log("\u{1F527} Cliente del resumen:",a.cliente);let n=this.convertirDatosAFactura({avisoId:e,cliente:a.cliente,resumen:a});return this.facturasService.getSiguienteNumero().pipe(f(r=>(n.numero_factura=r,console.log("\u{1F527} N\xFAmero de factura generado:",r),this.facturasService.crearFactura(n))))}),v(()=>console.log("\u2705 Factura creada desde trabajos realizados")),f(()=>this.avisosService.getResumenCompletoAviso(e)),b(a=>({paso:"factura_creada_desde_trabajos",avisoId:e,mensaje:"Factura creada exitosamente desde trabajos realizados",resumen:a})))}verificarEstadoFactura(e,a){return this.avisosService.getResumenCompletoAviso(a).pipe(f(s=>s.estado==="Completado"?this.facturasService.cambiarEstado(e,"Completado"):s.estado==="Listo para facturar"?this.facturasService.cambiarEstado(e,"En curso"):g([{id:e,estado:"Pendiente"}])))}sincronizarEstadosFacturas(e){return this.avisosService.getResumenCompletoAviso(e).pipe(f(a=>{if(!a.facturas||a.facturas.length===0)return g([{mensaje:"No hay facturas para sincronizar"}]);let s;a.estado==="Completado"?s="Completado":a.estado==="Listo para facturar"?s="En curso":s="Pendiente";let n=a.facturas.map(i=>this.facturasService.cambiarEstado(i.id,s));return C(n).pipe(b(()=>({mensaje:`Estados de ${a.facturas.length} factura(s) sincronizados a "${s}"`,avisoId:e,nuevoEstado:s})))}))}completarAviso(e){return this.avisosService.getResumenCompletoAviso(e).pipe(f(a=>{var n;if(!this.puedeCompletarAviso(a))throw new Error("No se puede completar el aviso. Verifica que haya trabajos finalizados y facturas generadas.");let s=((n=a.trabajos)==null?void 0:n.filter(i=>{var r;return!i.albaran_id||!((r=i.albaran)!=null&&r.estado_cierre)||i.albaran.estado_cierre==="Otra visita"}))||[];if(s.length>0){let i=s.map(r=>{var c,h;return`Trabajo #${(c=r.id)==null?void 0:c.substring(0,8)} (${r.descripcion}) - Estado: ${((h=r.albaran)==null?void 0:h.estado_cierre)||"Sin cerrar"}`}).join(", ");throw new Error(`No se puede completar el aviso. Los siguientes trabajos necesitan albaranes cerrados (Finalizado o Presupuesto pendiente): ${i}`)}return this.avisosService.actualizarAviso(e,{estado:"Completado",fecha_finalizacion:new Date}).pipe(f(i=>{if(a.facturas&&a.facturas.length>0){let r=a.facturas.map(c=>this.facturasService.cambiarEstado(c.id,"Completado"));return C(r).pipe(b(()=>i))}return g([i])}))}),v(()=>console.log("\u2705 Aviso completado exitosamente")),f(()=>this.avisosService.getResumenCompletoAviso(e)),b(a=>({paso:"aviso_completado",avisoId:e,mensaje:"Aviso marcado como completado",resumen:a})))}obtenerAccionesDisponibles(e){return this.obtenerEstadoFlujo(e).pipe(b(a=>{let s=[];return a.puedeFacturarTrabajos&&s.push("facturar_trabajos"),a.puedeCompletarAviso&&s.push("completar_aviso"),s}))}puedeCrearPresupuesto(e){return!1}puedeAprobarPresupuesto(e){return!1}puedeFacturarPresupuesto(e){return!1}puedeFacturarTrabajos(e){return e.estadisticas.albaranesFinalizados>0&&e.estadisticas.facturasPendientes===0}puedeCompletarAviso(e){let a=e.estadisticas.albaranesFinalizados>0&&e.estadisticas.totalFacturas>0,s=e.estadisticas.albaranesPresupuestoPendiente>0;return e.estadisticas.albaranesOtraVisita>0?!1:a||s}convertirDatosAFactura(e){var h;if(console.log("\u{1F527} Datos de factura recibidos:",e),!e.cliente||!e.cliente.id)throw new Error("Datos de cliente incompletos para crear factura");let a=[],s=0;e.resumen.albaranes&&e.resumen.albaranes.length>0&&(console.log("\u{1F527} Calculando horas totales de todos los albaranes:",e.resumen.albaranes.length,"albaranes"),e.resumen.albaranes.forEach((o,d)=>{if(o.hora_entrada&&o.hora_salida){let t=new Date(`2000-01-01T${o.hora_entrada}`),u=(new Date(`2000-01-01T${o.hora_salida}`).getTime()-t.getTime())/(1e3*60*60),p=Math.max(0,u);console.log(`\u{1F527} Albar\xE1n #${d+1}: ${o.hora_entrada} - ${o.hora_salida} = ${p.toFixed(2)} horas`),s+=p}}),console.log("\u{1F527} Horas totales acumuladas:",s.toFixed(2),"horas")),s>0&&a.push({tipo:"mano_obra",nombre:"Mano de obra",cantidad:s,precio_neto:50,precio_pvp:50,descripcion:`Trabajo realizado: ${s.toFixed(2)} horas (${((h=e.resumen.albaranes)==null?void 0:h.length)||0} albaranes)`});let n=new Map;e.resumen.albaranes&&e.resumen.albaranes.length>0&&(console.log("\u{1F527} Consolidando repuestos de todos los albaranes..."),e.resumen.albaranes.forEach((o,d)=>{console.log(`\u{1F527} Procesando albar\xE1n #${d+1}:`,o.id),o.repuestos&&o.repuestos.length>0&&o.repuestos.forEach(t=>{if(t&&t.cantidad&&t.cantidad>0){let l=t.nombre||"Repuesto sin nombre",u=l.toLowerCase();if(n.has(u)){let p=n.get(u);p.cantidad_total+=parseFloat(t.cantidad),p.precio_total+=parseFloat(t.precio_pvp||0)*parseFloat(t.cantidad),p.albaranes.push(d+1),console.log(`\u{1F527} Repuesto consolidado: ${l} - Cantidad total: ${p.cantidad_total}`)}else n.set(u,{nombre:l,cantidad_total:parseFloat(t.cantidad),precio_unitario:parseFloat(t.precio_neto||0),precio_total:parseFloat(t.precio_pvp||0)*parseFloat(t.cantidad),unidad:t.unidad||"unidad",albaranes:[d+1]}),console.log(`\u{1F527} Nuevo repuesto: ${l} - Cantidad: ${t.cantidad}`)}}),(!o.repuestos||o.repuestos.length===0)&&o.repuestos_utilizados&&Array.isArray(o.repuestos_utilizados)&&(console.log(`\u{1F527} Procesando repuestos_utilizados legacy para albar\xE1n #${d+1}`),o.repuestos_utilizados.forEach(t=>{if(t){let l,u=1,p=0;if(typeof t=="string")l=t;else if(typeof t=="object"&&t.nombre)l=t.nombre,u=Number(t.cantidad)||1,p=Number(t.precio_pvp)||Number(t.precio_neto)||0;else try{let m=typeof t=="string"?JSON.parse(t):t;l=m.nombre||"Repuesto sin nombre",u=Number(m.cantidad)||1,p=Number(m.precio_pvp)||Number(m.precio_neto)||0}catch{console.warn("\u26A0\uFE0F Repuesto mal formateado, ignorando:",t);return}let S=l.toLowerCase();if(n.has(S)){let m=n.get(S);m.cantidad_total+=u,m.precio_total+=p*u,m.albaranes.push(d+1),console.log(`\u{1F527} Repuesto legacy consolidado: ${l} - Cantidad total: ${m.cantidad_total}`)}else n.set(S,{nombre:l,cantidad_total:u,precio_unitario:p,precio_total:p*u,unidad:"unidad",albaranes:[d+1]}),console.log(`\u{1F527} Nuevo repuesto legacy: ${l} - Cantidad: ${u}`)}}))})),n.forEach((o,d)=>{let t=o.cantidad_total>0?o.precio_total/o.cantidad_total:o.precio_unitario;a.push({tipo:"repuesto",nombre:o.nombre,cantidad:o.cantidad_total,precio_neto:o.precio_unitario||0,precio_pvp:t||o.precio_unitario||0,descripcion:`${o.nombre} - ${o.cantidad_total} ${o.unidad} (usado en albaranes: ${o.albaranes.join(", ")})`}),console.log(`\u{1F527} L\xEDnea de factura creada: ${o.nombre} x${o.cantidad_total} = \u20AC${(t*o.cantidad_total).toFixed(2)}`)});let i=a.reduce((o,d)=>{let t=(d.precio_pvp||0)*(d.cantidad||0);return o+t},0),r=+(i*.21).toFixed(2),c=+(i+r).toFixed(2);return console.log("\u{1F527} L\xEDneas de factura consolidadas:",a.length,"l\xEDneas"),console.log("\u{1F527} Subtotal consolidado:",i.toFixed(2),"\u20AC"),console.log("\u{1F527} IVA:",r.toFixed(2),"\u20AC"),console.log("\u{1F527} Total consolidado:",c.toFixed(2),"\u20AC"),a.forEach((o,d)=>{console.log(`\u{1F527} L\xEDnea ${d+1}:`,{tipo:o.tipo,nombre:o.nombre,cantidad:o.cantidad,precio_neto:o.precio_neto,precio_pvp:o.precio_pvp,descripcion:o.descripcion})}),{cliente_id:e.cliente.id,nombre_cliente:e.cliente.nombre_completo,direccion_cliente:e.cliente.direccion||"",cif_cliente:e.cliente.cif||"",email_cliente:e.cliente.email||"",aviso_id:e.avisoId,fecha_emision:new Date().toISOString().split("T")[0],estado:"Pendiente",subtotal:i,iva:r,total:c,lineas:a}}};_.\u0275fac=function(a){return new(a||_)(j($),j(E),j(z))},_.\u0275prov=F({token:_,factory:_.\u0275fac,providedIn:"root"});let P=_;return P})();export{D as a};
