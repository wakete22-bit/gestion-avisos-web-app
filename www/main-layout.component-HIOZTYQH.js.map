{
  "version": 3,
  "sources": ["src/app/layout/components/sidebar/sidebar.component.ts", "src/app/layout/components/sidebar/sidebar.component.html", "src/app/layout/components/main-layout/main-layout.component.ts", "src/app/layout/components/main-layout/main-layout.component.html"],
  "sourcesContent": ["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { RouterLink, RouterLinkActive, Router } from '@angular/router';\nimport { IonIcon } from \"@ionic/angular/standalone\";\nimport { addIcons } from 'ionicons';\nimport {\n  gridOutline,\n  notificationsOutline,\n  timeOutline,\n  cubeOutline,\n  documentTextOutline,\n  cashOutline,\n  peopleOutline,\n  settingsOutline,  \n  personCircleOutline, logOutOutline, chevronForwardOutline, chevronDownOutline, closeOutline, constructOutline } from 'ionicons/icons';\nimport { AuthService } from '../../../core/services/auth.service';\nimport { RolesService } from '../../../core/services/roles.service';\nimport { Usuario, TipoRol } from '../../../core/models/usuario.model';\nimport { CommonModule } from '@angular/common';\n\naddIcons({\n  'grid-outline': gridOutline,\n  'notifications-outline': notificationsOutline,\n  'time-outline': timeOutline,\n  'cube-outline': cubeOutline,\n  'document-text-outline': documentTextOutline,\n  'cash-outline': cashOutline,\n  'people-outline': peopleOutline,\n  'settings-outline': settingsOutline,\n  'person-circle-outline': personCircleOutline,\n  'chevron-forward-outline': chevronForwardOutline,\n  'chevron-down-outline': chevronDownOutline,\n  'close-outline': closeOutline\n});\n\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss'],\n  standalone: true,\n  imports: [IonIcon, RouterLink, RouterLinkActive, CommonModule],\n})\nexport class SidebarComponent implements OnInit {\n  @Input() isOpen: boolean = false;\n  @Output() closeSidebar = new EventEmitter<void>();\n\n  currentUser: Usuario | null = null;\n  rolActual: TipoRol | null = null;\n  TipoRol = TipoRol;\n  isAdmin = false;\n\n  constructor(\n    private authService: AuthService,\n    private rolesService: RolesService,\n    private router: Router\n  ) {\n      addIcons({closeOutline,gridOutline,notificationsOutline,timeOutline,cubeOutline,documentTextOutline,cashOutline,peopleOutline,constructOutline,settingsOutline,personCircleOutline,logOutOutline,chevronForwardOutline,chevronDownOutline});\n  }\n\n  ngOnInit() {\n    // Suscribirse al usuario actual\n    this.authService.currentUser$.subscribe(user => {\n      this.currentUser = user;\n    });\n\n    // Suscribirse al rol actual\n    this.rolesService.getRolActual().subscribe(rol => {\n      this.rolActual = rol;\n    });\n\n    // Verificar si es administrador\n    this.rolesService.esAdministrador().subscribe(isAdmin => {\n      this.isAdmin = isAdmin;\n      console.log('🔧 SidebarComponent: Rol actual:', this.rolActual);\n    });\n  }\n\n  onCloseSidebar() {\n    this.closeSidebar.emit();\n  }\n\n  onNavClick() {\n    // Cerrar sidebar en móviles cuando se hace clic en un enlace\n    if (window.innerWidth <= 768) {\n      this.onCloseSidebar();\n    }\n  }\n\n  async onLogout() {\n    await this.authService.logout();\n    this.router.navigate(['/auth/login']);\n    this.onCloseSidebar();\n  }\n\n  getRolDisplayName(): string {\n    if (!this.rolActual) return 'Usuario';\n    \n    const nombres: Record<TipoRol, string> = {\n      [TipoRol.ADMINISTRADOR]: 'Administrador',\n      [TipoRol.TECNICO]: 'Técnico',\n      [TipoRol.USUARIO]: 'Usuario'\n    };\n    \n    return nombres[this.rolActual];\n  }\n}\n", "<aside class=\"sidebar\" [class.open]=\"isOpen\">\r\n  <!-- Botón de cerrar para móviles -->\r\n  <div class=\"sidebar-close-btn\" (click)=\"onCloseSidebar()\">\r\n    <ion-icon name=\"close-outline\"></ion-icon>\r\n  </div>\r\n\r\n  <div class=\"sidebar-header\">\r\n    <img style=\"width: 180px;\" src=\"assets/icon/LogoGestionAvisosLargo.png\" alt=\"Logo\" class=\"logo\">\r\n  </div>\r\n  <nav class=\"sidebar-menu\">\r\n    <a routerLink=\"/home\" routerLinkActive=\"active\" (click)=\"onNavClick()\"><ion-icon name=\"grid-outline\" class=\"icon\"></ion-icon>Inicio</a>\r\n    <a routerLink=\"/avisos\" routerLinkActive=\"active\" (click)=\"onNavClick()\"><ion-icon name=\"notifications-outline\" class=\"icon\"></ion-icon>Avisos</a>\r\n    <a routerLink=\"/historial\" routerLinkActive=\"active\" (click)=\"onNavClick()\"><ion-icon name=\"time-outline\" class=\"icon\"></ion-icon>Historial</a>\r\n    <a routerLink=\"/inventario\" routerLinkActive=\"active\" (click)=\"onNavClick()\"><ion-icon name=\"cube-outline\" class=\"icon\"></ion-icon>Inventario</a>\r\n    <a routerLink=\"/facturas\" routerLinkActive=\"active\" (click)=\"onNavClick()\"><ion-icon name=\"document-text-outline\" class=\"icon\"></ion-icon>Facturas</a>\r\n    <a routerLink=\"/presupuestos\" routerLinkActive=\"active\" (click)=\"onNavClick()\"><ion-icon name=\"cash-outline\" class=\"icon\"></ion-icon>Presupuestos</a>\r\n    <a routerLink=\"/clientes\" routerLinkActive=\"active\" (click)=\"onNavClick()\"><ion-icon name=\"people-outline\" class=\"icon\"></ion-icon>Clientes</a>\r\n    <a *ngIf=\"this.rolActual === TipoRol.ADMINISTRADOR\" routerLink=\"/tecnicos\" routerLinkActive=\"active\" (click)=\"onNavClick()\"><ion-icon name=\"construct-outline\" class=\"icon\"></ion-icon>Técnicos</a>\r\n  </nav>\r\n  <div class=\"sidebar-footer\">\r\n    <a routerLink=\"/ajustes\" routerLinkActive=\"active\" (click)=\"onNavClick()\"><ion-icon name=\"settings-outline\" class=\"icon\"></ion-icon>Ajustes</a>\r\n    <a routerLink=\"/cuenta\" routerLinkActive=\"active\" (click)=\"onNavClick()\"><ion-icon name=\"person-circle-outline\" class=\"icon\"></ion-icon>Mi cuenta</a>\r\n    <a (click)=\"onLogout()\" class=\"logout-link\"><ion-icon name=\"log-out-outline\" class=\"icon\"></ion-icon>Cerrar Sesión</a>\r\n  </div>\r\n  <div class=\"sidebar-spacer\"></div>\r\n</aside>\r\n", "import { Component, OnInit, HostListener } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { SidebarComponent } from '../sidebar/sidebar.component';\r\nimport { IonIcon } from \"@ionic/angular/standalone\";\r\nimport { addIcons } from 'ionicons';\r\nimport { menuOutline } from 'ionicons/icons';\r\n\r\naddIcons({\r\n  'menu-outline': menuOutline\r\n});\r\n\r\n@Component({\r\n  selector: 'app-main-layout',\r\n  templateUrl: './main-layout.component.html',\r\n  styleUrls: ['./main-layout.component.scss'],\r\n  standalone: true,\r\n  imports: [CommonModule, RouterOutlet, SidebarComponent, IonIcon],\r\n})\r\nexport class MainLayoutComponent implements OnInit {\r\n  isSidebarOpen: boolean = false;\r\n  isMobile: boolean = false;\r\n\r\n  constructor() {\r\n    addIcons({ menuOutline });\r\n    this.checkScreenSize();\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize() {\r\n    this.checkScreenSize();\r\n  }\r\n\r\n  checkScreenSize() {\r\n    this.isMobile = window.innerWidth <= 768;\r\n    // Cerrar sidebar automáticamente en desktop\r\n    if (!this.isMobile) {\r\n      this.isSidebarOpen = false;\r\n    }\r\n  }\r\n\r\n  toggleSidebar() {\r\n    this.isSidebarOpen = !this.isSidebarOpen;\r\n  }\r\n\r\n  closeSidebar() {\r\n    this.isSidebarOpen = false;\r\n  }\r\n\r\n  onOverlayClick() {\r\n    if (this.isMobile && this.isSidebarOpen) {\r\n      this.closeSidebar();\r\n    }\r\n  }\r\n}\r\n", "<div class=\"main-layout\">\r\n    <!-- Header móvil con botón hamburguesa -->\r\n    <header class=\"mobile-header\" *ngIf=\"isMobile\">\r\n        <button class=\"hamburger-btn\" (click)=\"toggleSidebar()\">\r\n            <ion-icon name=\"menu-outline\"></ion-icon>\r\n        </button>\r\n        <div class=\"mobile-title\">\r\n            <img src=\"assets/icon/LogoGestionAvisosLargo.png\" alt=\"Logo\" class=\"mobile-logo\">\r\n        </div>\r\n        <div class=\"mobile-profile\" routerLink=\"/cuenta\">\r\n            <span class=\"avatar\"></span>\r\n        </div>\r\n    </header>\r\n\r\n    <!-- Overlay para cerrar sidebar en móviles -->\r\n    <div class=\"sidebar-overlay\" \r\n         *ngIf=\"isMobile && isSidebarOpen\" \r\n         (click)=\"onOverlayClick()\"></div>\r\n\r\n    <div class=\"content-wrapper\">\r\n        <!-- Sidebar -->\r\n        <app-sidebar \r\n            *ngIf=\"!isMobile || (isMobile && isSidebarOpen)\"\r\n            class=\"sidebar\" \r\n            [class.open]=\"isSidebarOpen\"\r\n            [isOpen]=\"isSidebarOpen\"\r\n            (closeSidebar)=\"closeSidebar()\">\r\n        </app-sidebar>\r\n\r\n        <!-- Main Content -->\r\n        <main class=\"main-content\" [class.mobile]=\"isMobile\">\r\n            <router-outlet></router-outlet>\r\n        </main>\r\n    </div>\r\n</div>\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACiBI,IAAA,yBAAA,GAAA,KAAA,EAAA;AAAqG,IAAA,qBAAA,SAAA,SAAA,oDAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,CAAY;IAAA,CAAA;AAAE,IAAA,oBAAA,GAAA,YAAA,EAAA;AAA2D,IAAA,iBAAA,GAAA,aAAA;AAAQ,IAAA,uBAAA;;;ADEnM,SAAS;EACP,gBAAgB;EAChB,yBAAyB;EACzB,gBAAgB;EAChB,gBAAgB;EAChB,yBAAyB;EACzB,gBAAgB;EAChB,kBAAkB;EAClB,oBAAoB;EACpB,yBAAyB;EACzB,2BAA2B;EAC3B,wBAAwB;EACxB,iBAAiB;CAClB;AAUK,IAAO,oBAAP,MAAO,kBAAgB;EAS3B,YACU,aACA,cACA,QAAc;AAFd,SAAA,cAAA;AACA,SAAA,eAAA;AACA,SAAA,SAAA;AAXD,SAAA,SAAkB;AACjB,SAAA,eAAe,IAAI,aAAY;AAEzC,SAAA,cAA8B;AAC9B,SAAA,YAA4B;AAC5B,SAAA,UAAU;AACV,SAAA,UAAU;AAON,aAAS,EAAC,cAAa,aAAY,sBAAqB,aAAY,aAAY,qBAAoB,aAAY,eAAc,kBAAiB,iBAAgB,qBAAoB,eAAc,uBAAsB,mBAAkB,CAAC;EAC9O;EAEA,WAAQ;AAEN,SAAK,YAAY,aAAa,UAAU,UAAO;AAC7C,WAAK,cAAc;IACrB,CAAC;AAGD,SAAK,aAAa,aAAY,EAAG,UAAU,SAAM;AAC/C,WAAK,YAAY;IACnB,CAAC;AAGD,SAAK,aAAa,gBAAe,EAAG,UAAU,aAAU;AACtD,WAAK,UAAU;AACf,cAAQ,IAAI,2CAAoC,KAAK,SAAS;IAChE,CAAC;EACH;EAEA,iBAAc;AACZ,SAAK,aAAa,KAAI;EACxB;EAEA,aAAU;AAER,QAAI,OAAO,cAAc,KAAK;AAC5B,WAAK,eAAc;IACrB;EACF;EAEM,WAAQ;;AACZ,YAAM,KAAK,YAAY,OAAM;AAC7B,WAAK,OAAO,SAAS,CAAC,aAAa,CAAC;AACpC,WAAK,eAAc;IACrB;;EAEA,oBAAiB;AACf,QAAI,CAAC,KAAK;AAAW,aAAO;AAE5B,UAAM,UAAmC;MACvC,CAAC,QAAQ,aAAa,GAAG;MACzB,CAAC,QAAQ,OAAO,GAAG;MACnB,CAAC,QAAQ,OAAO,GAAG;;AAGrB,WAAO,QAAQ,KAAK,SAAS;EAC/B;;;mCA9DW,mBAAgB,4BAAA,WAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,MAAA,CAAA;AAAA;kFAAhB,mBAAgB,WAAA,CAAA,CAAA,aAAA,CAAA,GAAA,QAAA,EAAA,QAAA,SAAA,GAAA,SAAA,EAAA,cAAA,eAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,SAAA,GAAA,CAAA,GAAA,qBAAA,GAAA,OAAA,GAAA,CAAA,QAAA,eAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,OAAA,0CAAA,OAAA,QAAA,GAAA,QAAA,GAAA,SAAA,OAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,cAAA,SAAA,oBAAA,UAAA,GAAA,OAAA,GAAA,CAAA,QAAA,gBAAA,GAAA,MAAA,GAAA,CAAA,cAAA,WAAA,oBAAA,UAAA,GAAA,OAAA,GAAA,CAAA,QAAA,yBAAA,GAAA,MAAA,GAAA,CAAA,cAAA,cAAA,oBAAA,UAAA,GAAA,OAAA,GAAA,CAAA,QAAA,gBAAA,GAAA,MAAA,GAAA,CAAA,cAAA,eAAA,oBAAA,UAAA,GAAA,OAAA,GAAA,CAAA,QAAA,gBAAA,GAAA,MAAA,GAAA,CAAA,cAAA,aAAA,oBAAA,UAAA,GAAA,OAAA,GAAA,CAAA,QAAA,yBAAA,GAAA,MAAA,GAAA,CAAA,cAAA,iBAAA,oBAAA,UAAA,GAAA,OAAA,GAAA,CAAA,QAAA,gBAAA,GAAA,MAAA,GAAA,CAAA,cAAA,aAAA,oBAAA,UAAA,GAAA,OAAA,GAAA,CAAA,QAAA,kBAAA,GAAA,MAAA,GAAA,CAAA,cAAA,aAAA,oBAAA,UAAA,GAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,cAAA,YAAA,oBAAA,UAAA,GAAA,OAAA,GAAA,CAAA,QAAA,oBAAA,GAAA,MAAA,GAAA,CAAA,cAAA,WAAA,oBAAA,UAAA,GAAA,OAAA,GAAA,CAAA,QAAA,yBAAA,GAAA,MAAA,GAAA,CAAA,GAAA,eAAA,GAAA,OAAA,GAAA,CAAA,QAAA,mBAAA,GAAA,MAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,cAAA,aAAA,oBAAA,UAAA,GAAA,OAAA,GAAA,CAAA,QAAA,qBAAA,GAAA,MAAA,CAAA,GAAA,UAAA,SAAA,0BAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;AC1C7B,IAAA,yBAAA,GAAA,SAAA,CAAA,EAA6C,GAAA,OAAA,CAAA;AAEZ,IAAA,qBAAA,SAAA,SAAA,iDAAA;AAAA,aAAS,IAAA,eAAA;IAAgB,CAAA;AACtD,IAAA,oBAAA,GAAA,YAAA,CAAA;AACF,IAAA,uBAAA;AAEA,IAAA,yBAAA,GAAA,OAAA,CAAA;AACE,IAAA,oBAAA,GAAA,OAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA0B,GAAA,KAAA,CAAA;AACwB,IAAA,qBAAA,SAAA,SAAA,+CAAA;AAAA,aAAS,IAAA,WAAA;IAAY,CAAA;AAAE,IAAA,oBAAA,GAAA,YAAA,CAAA;AAAsD,IAAA,iBAAA,GAAA,QAAA;AAAM,IAAA,uBAAA;AACnI,IAAA,yBAAA,GAAA,KAAA,CAAA;AAAkD,IAAA,qBAAA,SAAA,SAAA,+CAAA;AAAA,aAAS,IAAA,WAAA;IAAY,CAAA;AAAE,IAAA,oBAAA,IAAA,YAAA,CAAA;AAA+D,IAAA,iBAAA,IAAA,QAAA;AAAM,IAAA,uBAAA;AAC9I,IAAA,yBAAA,IAAA,KAAA,EAAA;AAAqD,IAAA,qBAAA,SAAA,SAAA,gDAAA;AAAA,aAAS,IAAA,WAAA;IAAY,CAAA;AAAE,IAAA,oBAAA,IAAA,YAAA,EAAA;AAAsD,IAAA,iBAAA,IAAA,WAAA;AAAS,IAAA,uBAAA;AAC3I,IAAA,yBAAA,IAAA,KAAA,EAAA;AAAsD,IAAA,qBAAA,SAAA,SAAA,gDAAA;AAAA,aAAS,IAAA,WAAA;IAAY,CAAA;AAAE,IAAA,oBAAA,IAAA,YAAA,EAAA;AAAsD,IAAA,iBAAA,IAAA,YAAA;AAAU,IAAA,uBAAA;AAC7I,IAAA,yBAAA,IAAA,KAAA,EAAA;AAAoD,IAAA,qBAAA,SAAA,SAAA,gDAAA;AAAA,aAAS,IAAA,WAAA;IAAY,CAAA;AAAE,IAAA,oBAAA,IAAA,YAAA,EAAA;AAA+D,IAAA,iBAAA,IAAA,UAAA;AAAQ,IAAA,uBAAA;AAClJ,IAAA,yBAAA,IAAA,KAAA,EAAA;AAAwD,IAAA,qBAAA,SAAA,SAAA,gDAAA;AAAA,aAAS,IAAA,WAAA;IAAY,CAAA;AAAE,IAAA,oBAAA,IAAA,YAAA,EAAA;AAAsD,IAAA,iBAAA,IAAA,cAAA;AAAY,IAAA,uBAAA;AACjJ,IAAA,yBAAA,IAAA,KAAA,EAAA;AAAoD,IAAA,qBAAA,SAAA,SAAA,gDAAA;AAAA,aAAS,IAAA,WAAA;IAAY,CAAA;AAAE,IAAA,oBAAA,IAAA,YAAA,EAAA;AAAwD,IAAA,iBAAA,IAAA,UAAA;AAAQ,IAAA,uBAAA;AAC3I,IAAA,qBAAA,IAAA,gCAAA,GAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA4B,IAAA,KAAA,EAAA;AACyB,IAAA,qBAAA,SAAA,SAAA,gDAAA;AAAA,aAAS,IAAA,WAAA;IAAY,CAAA;AAAE,IAAA,oBAAA,IAAA,YAAA,EAAA;AAA0D,IAAA,iBAAA,IAAA,SAAA;AAAO,IAAA,uBAAA;AAC3I,IAAA,yBAAA,IAAA,KAAA,EAAA;AAAkD,IAAA,qBAAA,SAAA,SAAA,gDAAA;AAAA,aAAS,IAAA,WAAA;IAAY,CAAA;AAAE,IAAA,oBAAA,IAAA,YAAA,EAAA;AAA+D,IAAA,iBAAA,IAAA,WAAA;AAAS,IAAA,uBAAA;AACjJ,IAAA,yBAAA,IAAA,KAAA,EAAA;AAAG,IAAA,qBAAA,SAAA,SAAA,gDAAA;AAAA,aAAS,IAAA,SAAA;IAAU,CAAA;AAAsB,IAAA,oBAAA,IAAA,YAAA,EAAA;AAAyD,IAAA,iBAAA,IAAA,kBAAA;AAAa,IAAA,uBAAA,EAAI;AAExH,IAAA,oBAAA,IAAA,OAAA,EAAA;AACF,IAAA,uBAAA;;;AAzBuB,IAAA,sBAAA,QAAA,IAAA,MAAA;AAiBf,IAAA,oBAAA,EAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,cAAA,IAAA,QAAA,aAAA;;kBDuBI,SAAS,YAAY,kBAAkB,cAAY,IAAA,GAAA,QAAA,CAAA,y/IAAA,EAAA,CAAA;AAEzD,IAAO,mBAAP;;sEAAO,kBAAgB,CAAA;UAP5B;uBACW,eAAa,YAGX,MAAI,SACP,CAAC,SAAS,YAAY,kBAAkB,YAAY,GAAC,UAAA,0rEAAA,QAAA,CAAA,6lHAAA,EAAA,CAAA;iFAGrD,QAAM,CAAA;UAAd;MACS,cAAY,CAAA;UAArB;;;;6EAFU,kBAAgB,EAAA,WAAA,oBAAA,UAAA,0DAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;AGxCzB,IAAA,yBAAA,GAAA,UAAA,CAAA,EAA+C,GAAA,UAAA,CAAA;AACb,IAAA,qBAAA,SAAA,SAAA,gEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,cAAA,CAAe;IAAA,CAAA;AAClD,IAAA,oBAAA,GAAA,YAAA,CAAA;AACJ,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,OAAA,CAAA;AACI,IAAA,oBAAA,GAAA,OAAA,EAAA;AACJ,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,OAAA,EAAA;AACI,IAAA,oBAAA,GAAA,QAAA,EAAA;AACJ,IAAA,uBAAA,EAAM;;;;;;AAIV,IAAA,yBAAA,GAAA,OAAA,EAAA;AAEK,IAAA,qBAAA,SAAA,SAAA,0DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,eAAA,CAAgB;IAAA,CAAA;AAAE,IAAA,uBAAA;;;;;;AAI5B,IAAA,yBAAA,GAAA,eAAA,EAAA;AAKI,IAAA,qBAAA,gBAAA,SAAA,iFAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAgB,OAAA,aAAA,CAAc;IAAA,CAAA;AAClC,IAAA,uBAAA;;;;AAHI,IAAA,sBAAA,QAAA,OAAA,aAAA;AACA,IAAA,qBAAA,UAAA,OAAA,aAAA;;;ADjBZ,SAAS;EACP,gBAAgB;CACjB;AASK,IAAO,uBAAP,MAAO,qBAAmB;EAI9B,cAAA;AAHA,SAAA,gBAAyB;AACzB,SAAA,WAAoB;AAGlB,aAAS,EAAE,YAAW,CAAE;AACxB,SAAK,gBAAe;EACtB;EAEA,WAAQ;EAAI;EAGZ,WAAQ;AACN,SAAK,gBAAe;EACtB;EAEA,kBAAe;AACb,SAAK,WAAW,OAAO,cAAc;AAErC,QAAI,CAAC,KAAK,UAAU;AAClB,WAAK,gBAAgB;IACvB;EACF;EAEA,gBAAa;AACX,SAAK,gBAAgB,CAAC,KAAK;EAC7B;EAEA,eAAY;AACV,SAAK,gBAAgB;EACvB;EAEA,iBAAc;AACZ,QAAI,KAAK,YAAY,KAAK,eAAe;AACvC,WAAK,aAAY;IACnB;EACF;;;mCApCW,sBAAmB;AAAA;qFAAnB,sBAAmB,WAAA,CAAA,CAAA,iBAAA,CAAA,GAAA,cAAA,SAAA,iCAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;AAAnB,IAAA,qBAAA,UAAA,SAAA,8CAAA,QAAA;AAAA,aAAA,IAAA,SAAA,MAAA;IAAgB,GAAA,OAAA,yBAAA;;;;ACnB7B,IAAA,yBAAA,GAAA,OAAA,CAAA;AAEI,IAAA,qBAAA,GAAA,uCAAA,GAAA,GAAA,UAAA,CAAA,EAA+C,GAAA,oCAAA,GAAA,GAAA,OAAA,CAAA;AAiB/C,IAAA,yBAAA,GAAA,OAAA,CAAA;AAEI,IAAA,qBAAA,GAAA,4CAAA,GAAA,GAAA,eAAA,CAAA;AASA,IAAA,yBAAA,GAAA,QAAA,CAAA;AACI,IAAA,oBAAA,GAAA,eAAA;AACJ,IAAA,uBAAA,EAAO,EACL;;;AA/ByB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,QAAA;AAczB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,YAAA,IAAA,aAAA;AAMG,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,IAAA,YAAA,IAAA,YAAA,IAAA,aAAA;AAQsB,IAAA,oBAAA;AAAA,IAAA,sBAAA,UAAA,IAAA,QAAA;;kBDbvB,cAAY,MAAE,cAAc,kBAAkB,OAAO,GAAA,QAAA,CAAA,oyMAAA,EAAA,CAAA;AAE3D,IAAO,sBAAP;;sEAAO,qBAAmB,CAAA;UAP/B;uBACW,mBAAiB,YAGf,MAAI,SACP,CAAC,cAAc,cAAc,kBAAkB,OAAO,GAAC,UAAA,oyCAAA,QAAA,CAAA,+3JAAA,EAAA,CAAA;kBAchE,UAAQ,CAAA;UADP;WAAa,iBAAiB,CAAC,QAAQ,CAAC;;;;6EAX9B,qBAAmB,EAAA,WAAA,uBAAA,UAAA,kEAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}
