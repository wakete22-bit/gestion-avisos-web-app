{"version":3,"sources":["node_modules/@angular/service-worker/fesm2022/service-worker.mjs","src/app/core/guards/auth.guard.ts","src/app/app.routes.ts","src/app/core/services/pwa-ios.service.ts","src/app/core/services/pwa-install.service.ts","src/app/core/components/pwa-install-banner/pwa-install-banner.component.ts","src/app/core/services/pwa-update.service.ts","src/app/core/services/performance-fix.service.ts","src/app/app.component.ts","src/app/app.component.html","src/app/core/interceptors/performance.interceptor.ts","src/app/core/config/production.config.ts","src/app/core/config/logging.config.ts","src/main.ts"],"sourcesContent":["/**\n * @license Angular v19.2.14\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { ɵRuntimeError as _RuntimeError, ApplicationRef, Injectable, makeEnvironmentProviders, InjectionToken, Injector, provideAppInitializer, inject, NgZone, ɵformatRuntimeError as _formatRuntimeError, NgModule } from '@angular/core';\nimport { Observable, Subject, NEVER } from 'rxjs';\nimport { switchMap, take, filter, map } from 'rxjs/operators';\nconst ERR_SW_NOT_SUPPORTED = 'Service workers are disabled or not supported by this browser';\n/**\n * @publicApi\n */\nclass NgswCommChannel {\n  serviceWorker;\n  worker;\n  registration;\n  events;\n  constructor(serviceWorker, injector) {\n    this.serviceWorker = serviceWorker;\n    if (!serviceWorker) {\n      this.worker = this.events = this.registration = new Observable(subscriber => subscriber.error(new _RuntimeError(5601 /* RuntimeErrorCode.SERVICE_WORKER_DISABLED_OR_NOT_SUPPORTED_BY_THIS_BROWSER */, (typeof ngDevMode === 'undefined' || ngDevMode) && ERR_SW_NOT_SUPPORTED)));\n    } else {\n      let currentWorker = null;\n      const workerSubject = new Subject();\n      this.worker = new Observable(subscriber => {\n        if (currentWorker !== null) {\n          subscriber.next(currentWorker);\n        }\n        return workerSubject.subscribe(v => subscriber.next(v));\n      });\n      const updateController = () => {\n        const {\n          controller\n        } = serviceWorker;\n        if (controller === null) {\n          return;\n        }\n        currentWorker = controller;\n        workerSubject.next(currentWorker);\n      };\n      serviceWorker.addEventListener('controllerchange', updateController);\n      updateController();\n      this.registration = this.worker.pipe(switchMap(() => serviceWorker.getRegistration()));\n      const _events = new Subject();\n      this.events = _events.asObservable();\n      const messageListener = event => {\n        const {\n          data\n        } = event;\n        if (data?.type) {\n          _events.next(data);\n        }\n      };\n      serviceWorker.addEventListener('message', messageListener);\n      // The injector is optional to avoid breaking changes.\n      const appRef = injector?.get(ApplicationRef, null, {\n        optional: true\n      });\n      appRef?.onDestroy(() => {\n        serviceWorker.removeEventListener('controllerchange', updateController);\n        serviceWorker.removeEventListener('message', messageListener);\n      });\n    }\n  }\n  postMessage(action, payload) {\n    return new Promise(resolve => {\n      this.worker.pipe(take(1)).subscribe(sw => {\n        sw.postMessage({\n          action,\n          ...payload\n        });\n        resolve();\n      });\n    });\n  }\n  postMessageWithOperation(type, payload, operationNonce) {\n    const waitForOperationCompleted = this.waitForOperationCompleted(operationNonce);\n    const postMessage = this.postMessage(type, payload);\n    return Promise.all([postMessage, waitForOperationCompleted]).then(([, result]) => result);\n  }\n  generateNonce() {\n    return Math.round(Math.random() * 10000000);\n  }\n  eventsOfType(type) {\n    let filterFn;\n    if (typeof type === 'string') {\n      filterFn = event => event.type === type;\n    } else {\n      filterFn = event => type.includes(event.type);\n    }\n    return this.events.pipe(filter(filterFn));\n  }\n  nextEventOfType(type) {\n    return this.eventsOfType(type).pipe(take(1));\n  }\n  waitForOperationCompleted(nonce) {\n    return new Promise((resolve, reject) => {\n      this.eventsOfType('OPERATION_COMPLETED').pipe(filter(event => event.nonce === nonce), take(1), map(event => {\n        if (event.result !== undefined) {\n          return event.result;\n        }\n        throw new Error(event.error);\n      })).subscribe({\n        next: resolve,\n        error: reject\n      });\n    });\n  }\n  get isEnabled() {\n    return !!this.serviceWorker;\n  }\n}\n\n/**\n * Subscribe and listen to\n * [Web Push\n * Notifications](https://developer.mozilla.org/en-US/docs/Web/API/Push_API/Best_Practices) through\n * Angular Service Worker.\n *\n * @usageNotes\n *\n * You can inject a `SwPush` instance into any component or service\n * as a dependency.\n *\n * <code-example path=\"service-worker/push/module.ts\" region=\"inject-sw-push\"\n * header=\"app.component.ts\"></code-example>\n *\n * To subscribe, call `SwPush.requestSubscription()`, which asks the user for permission.\n * The call returns a `Promise` with a new\n * [`PushSubscription`](https://developer.mozilla.org/en-US/docs/Web/API/PushSubscription)\n * instance.\n *\n * <code-example path=\"service-worker/push/module.ts\" region=\"subscribe-to-push\"\n * header=\"app.component.ts\"></code-example>\n *\n * A request is rejected if the user denies permission, or if the browser\n * blocks or does not support the Push API or ServiceWorkers.\n * Check `SwPush.isEnabled` to confirm status.\n *\n * Invoke Push Notifications by pushing a message with the following payload.\n *\n * ```ts\n * {\n *   \"notification\": {\n *     \"actions\": NotificationAction[],\n *     \"badge\": USVString,\n *     \"body\": DOMString,\n *     \"data\": any,\n *     \"dir\": \"auto\"|\"ltr\"|\"rtl\",\n *     \"icon\": USVString,\n *     \"image\": USVString,\n *     \"lang\": DOMString,\n *     \"renotify\": boolean,\n *     \"requireInteraction\": boolean,\n *     \"silent\": boolean,\n *     \"tag\": DOMString,\n *     \"timestamp\": DOMTimeStamp,\n *     \"title\": DOMString,\n *     \"vibrate\": number[]\n *   }\n * }\n * ```\n *\n * Only `title` is required. See `Notification`\n * [instance\n * properties](https://developer.mozilla.org/en-US/docs/Web/API/Notification#Instance_properties).\n *\n * While the subscription is active, Service Worker listens for\n * [PushEvent](https://developer.mozilla.org/en-US/docs/Web/API/PushEvent)\n * occurrences and creates\n * [Notification](https://developer.mozilla.org/en-US/docs/Web/API/Notification)\n * instances in response.\n *\n * Unsubscribe using `SwPush.unsubscribe()`.\n *\n * An application can subscribe to `SwPush.notificationClicks` observable to be notified when a user\n * clicks on a notification. For example:\n *\n * <code-example path=\"service-worker/push/module.ts\" region=\"subscribe-to-notification-clicks\"\n * header=\"app.component.ts\"></code-example>\n *\n * You can read more on handling notification clicks in the [Service worker notifications\n * guide](ecosystem/service-workers/push-notifications).\n *\n * @see [Push Notifications](https://developers.google.com/web/fundamentals/codelabs/push-notifications/)\n * @see [Angular Push Notifications](https://blog.angular-university.io/angular-push-notifications/)\n * @see [MDN: Push API](https://developer.mozilla.org/en-US/docs/Web/API/Push_API)\n * @see [MDN: Notifications API](https://developer.mozilla.org/en-US/docs/Web/API/Notifications_API)\n * @see [MDN: Web Push API Notifications best practices](https://developer.mozilla.org/en-US/docs/Web/API/Push_API/Best_Practices)\n *\n * @publicApi\n */\nclass SwPush {\n  sw;\n  /**\n   * Emits the payloads of the received push notification messages.\n   */\n  messages;\n  /**\n   * Emits the payloads of the received push notification messages as well as the action the user\n   * interacted with. If no action was used the `action` property contains an empty string `''`.\n   *\n   * Note that the `notification` property does **not** contain a\n   * [Notification][Mozilla Notification] object but rather a\n   * [NotificationOptions](https://notifications.spec.whatwg.org/#dictdef-notificationoptions)\n   * object that also includes the `title` of the [Notification][Mozilla Notification] object.\n   *\n   * [Mozilla Notification]: https://developer.mozilla.org/en-US/docs/Web/API/Notification\n   */\n  notificationClicks;\n  /**\n   * Emits the currently active\n   * [PushSubscription](https://developer.mozilla.org/en-US/docs/Web/API/PushSubscription)\n   * associated to the Service Worker registration or `null` if there is no subscription.\n   */\n  subscription;\n  /**\n   * True if the Service Worker is enabled (supported by the browser and enabled via\n   * `ServiceWorkerModule`).\n   */\n  get isEnabled() {\n    return this.sw.isEnabled;\n  }\n  pushManager = null;\n  subscriptionChanges = new Subject();\n  constructor(sw) {\n    this.sw = sw;\n    if (!sw.isEnabled) {\n      this.messages = NEVER;\n      this.notificationClicks = NEVER;\n      this.subscription = NEVER;\n      return;\n    }\n    this.messages = this.sw.eventsOfType('PUSH').pipe(map(message => message.data));\n    this.notificationClicks = this.sw.eventsOfType('NOTIFICATION_CLICK').pipe(map(message => message.data));\n    this.pushManager = this.sw.registration.pipe(map(registration => registration.pushManager));\n    const workerDrivenSubscriptions = this.pushManager.pipe(switchMap(pm => pm.getSubscription()));\n    this.subscription = new Observable(subscriber => {\n      const workerDrivenSubscription = workerDrivenSubscriptions.subscribe(subscriber);\n      const subscriptionChanges = this.subscriptionChanges.subscribe(subscriber);\n      return () => {\n        workerDrivenSubscription.unsubscribe();\n        subscriptionChanges.unsubscribe();\n      };\n    });\n  }\n  /**\n   * Subscribes to Web Push Notifications,\n   * after requesting and receiving user permission.\n   *\n   * @param options An object containing the `serverPublicKey` string.\n   * @returns A Promise that resolves to the new subscription object.\n   */\n  requestSubscription(options) {\n    if (!this.sw.isEnabled || this.pushManager === null) {\n      return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n    }\n    const pushOptions = {\n      userVisibleOnly: true\n    };\n    let key = this.decodeBase64(options.serverPublicKey.replace(/_/g, '/').replace(/-/g, '+'));\n    let applicationServerKey = new Uint8Array(new ArrayBuffer(key.length));\n    for (let i = 0; i < key.length; i++) {\n      applicationServerKey[i] = key.charCodeAt(i);\n    }\n    pushOptions.applicationServerKey = applicationServerKey;\n    return new Promise((resolve, reject) => {\n      this.pushManager.pipe(switchMap(pm => pm.subscribe(pushOptions)), take(1)).subscribe({\n        next: sub => {\n          this.subscriptionChanges.next(sub);\n          resolve(sub);\n        },\n        error: reject\n      });\n    });\n  }\n  /**\n   * Unsubscribes from Service Worker push notifications.\n   *\n   * @returns A Promise that is resolved when the operation succeeds, or is rejected if there is no\n   *          active subscription or the unsubscribe operation fails.\n   */\n  unsubscribe() {\n    if (!this.sw.isEnabled) {\n      return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n    }\n    const doUnsubscribe = sub => {\n      if (sub === null) {\n        throw new _RuntimeError(5602 /* RuntimeErrorCode.NOT_SUBSCRIBED_TO_PUSH_NOTIFICATIONS */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Not subscribed to push notifications.');\n      }\n      return sub.unsubscribe().then(success => {\n        if (!success) {\n          throw new _RuntimeError(5603 /* RuntimeErrorCode.PUSH_SUBSCRIPTION_UNSUBSCRIBE_FAILED */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Unsubscribe failed!');\n        }\n        this.subscriptionChanges.next(null);\n      });\n    };\n    return new Promise((resolve, reject) => {\n      this.subscription.pipe(take(1), switchMap(doUnsubscribe)).subscribe({\n        next: resolve,\n        error: reject\n      });\n    });\n  }\n  decodeBase64(input) {\n    return atob(input);\n  }\n  static ɵfac = function SwPush_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || SwPush)(i0.ɵɵinject(NgswCommChannel));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: SwPush,\n    factory: SwPush.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SwPush, [{\n    type: Injectable\n  }], () => [{\n    type: NgswCommChannel\n  }], null);\n})();\n\n/**\n * Subscribe to update notifications from the Service Worker, trigger update\n * checks, and forcibly activate updates.\n *\n * @see {@link /ecosystem/service-workers/communications Service Worker Communication Guide}\n *\n * @publicApi\n */\nclass SwUpdate {\n  sw;\n  /**\n   * Emits a `VersionDetectedEvent` event whenever a new version is detected on the server.\n   *\n   * Emits a `VersionInstallationFailedEvent` event whenever checking for or downloading a new\n   * version fails.\n   *\n   * Emits a `VersionReadyEvent` event whenever a new version has been downloaded and is ready for\n   * activation.\n   */\n  versionUpdates;\n  /**\n   * Emits an `UnrecoverableStateEvent` event whenever the version of the app used by the service\n   * worker to serve this client is in a broken state that cannot be recovered from without a full\n   * page reload.\n   */\n  unrecoverable;\n  /**\n   * True if the Service Worker is enabled (supported by the browser and enabled via\n   * `ServiceWorkerModule`).\n   */\n  get isEnabled() {\n    return this.sw.isEnabled;\n  }\n  constructor(sw) {\n    this.sw = sw;\n    if (!sw.isEnabled) {\n      this.versionUpdates = NEVER;\n      this.unrecoverable = NEVER;\n      return;\n    }\n    this.versionUpdates = this.sw.eventsOfType(['VERSION_DETECTED', 'VERSION_INSTALLATION_FAILED', 'VERSION_READY', 'NO_NEW_VERSION_DETECTED']);\n    this.unrecoverable = this.sw.eventsOfType('UNRECOVERABLE_STATE');\n  }\n  /**\n   * Checks for an update and waits until the new version is downloaded from the server and ready\n   * for activation.\n   *\n   * @returns a promise that\n   * - resolves to `true` if a new version was found and is ready to be activated.\n   * - resolves to `false` if no new version was found\n   * - rejects if any error occurs\n   */\n  checkForUpdate() {\n    if (!this.sw.isEnabled) {\n      return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n    }\n    const nonce = this.sw.generateNonce();\n    return this.sw.postMessageWithOperation('CHECK_FOR_UPDATES', {\n      nonce\n    }, nonce);\n  }\n  /**\n   * Updates the current client (i.e. browser tab) to the latest version that is ready for\n   * activation.\n   *\n   * In most cases, you should not use this method and instead should update a client by reloading\n   * the page.\n   *\n   * <div class=\"docs-alert docs-alert-important\">\n   *\n   * Updating a client without reloading can easily result in a broken application due to a version\n   * mismatch between the application shell and other page resources,\n   * such as lazy-loaded chunks, whose filenames may change between\n   * versions.\n   *\n   * Only use this method, if you are certain it is safe for your specific use case.\n   *\n   * </div>\n   *\n   * @returns a promise that\n   *  - resolves to `true` if an update was activated successfully\n   *  - resolves to `false` if no update was available (for example, the client was already on the\n   *    latest version).\n   *  - rejects if any error occurs\n   */\n  activateUpdate() {\n    if (!this.sw.isEnabled) {\n      return Promise.reject(new _RuntimeError(5601 /* RuntimeErrorCode.SERVICE_WORKER_DISABLED_OR_NOT_SUPPORTED_BY_THIS_BROWSER */, (typeof ngDevMode === 'undefined' || ngDevMode) && ERR_SW_NOT_SUPPORTED));\n    }\n    const nonce = this.sw.generateNonce();\n    return this.sw.postMessageWithOperation('ACTIVATE_UPDATE', {\n      nonce\n    }, nonce);\n  }\n  static ɵfac = function SwUpdate_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || SwUpdate)(i0.ɵɵinject(NgswCommChannel));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: SwUpdate,\n    factory: SwUpdate.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SwUpdate, [{\n    type: Injectable\n  }], () => [{\n    type: NgswCommChannel\n  }], null);\n})();\n\n/*!\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\nconst SCRIPT = new InjectionToken(ngDevMode ? 'NGSW_REGISTER_SCRIPT' : '');\nfunction ngswAppInitializer() {\n  if (typeof ngServerMode !== 'undefined' && ngServerMode) {\n    return;\n  }\n  const options = inject(SwRegistrationOptions);\n  if (!('serviceWorker' in navigator && options.enabled !== false)) {\n    return;\n  }\n  const script = inject(SCRIPT);\n  const ngZone = inject(NgZone);\n  const appRef = inject(ApplicationRef);\n  // Set up the `controllerchange` event listener outside of\n  // the Angular zone to avoid unnecessary change detections,\n  // as this event has no impact on view updates.\n  ngZone.runOutsideAngular(() => {\n    // Wait for service worker controller changes, and fire an INITIALIZE action when a new SW\n    // becomes active. This allows the SW to initialize itself even if there is no application\n    // traffic.\n    const sw = navigator.serviceWorker;\n    const onControllerChange = () => sw.controller?.postMessage({\n      action: 'INITIALIZE'\n    });\n    sw.addEventListener('controllerchange', onControllerChange);\n    appRef.onDestroy(() => {\n      sw.removeEventListener('controllerchange', onControllerChange);\n    });\n  });\n  // Run outside the Angular zone to avoid preventing the app from stabilizing (especially\n  // given that some registration strategies wait for the app to stabilize).\n  ngZone.runOutsideAngular(() => {\n    let readyToRegister;\n    const {\n      registrationStrategy\n    } = options;\n    if (typeof registrationStrategy === 'function') {\n      readyToRegister = new Promise(resolve => registrationStrategy().subscribe(() => resolve()));\n    } else {\n      const [strategy, ...args] = (registrationStrategy || 'registerWhenStable:30000').split(':');\n      switch (strategy) {\n        case 'registerImmediately':\n          readyToRegister = Promise.resolve();\n          break;\n        case 'registerWithDelay':\n          readyToRegister = delayWithTimeout(+args[0] || 0);\n          break;\n        case 'registerWhenStable':\n          readyToRegister = Promise.race([appRef.whenStable(), delayWithTimeout(+args[0])]);\n          break;\n        default:\n          // Unknown strategy.\n          throw new _RuntimeError(5600 /* RuntimeErrorCode.UNKNOWN_REGISTRATION_STRATEGY */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Unknown ServiceWorker registration strategy: ${options.registrationStrategy}`);\n      }\n    }\n    // Don't return anything to avoid blocking the application until the SW is registered.\n    // Catch and log the error if SW registration fails to avoid uncaught rejection warning.\n    readyToRegister.then(() => {\n      // If the registration strategy has resolved after the application has\n      // been explicitly destroyed by the user (e.g., by navigating away to\n      // another application), we simply should not register the worker.\n      if (appRef.destroyed) {\n        return;\n      }\n      navigator.serviceWorker.register(script, {\n        scope: options.scope\n      }).catch(err => console.error(_formatRuntimeError(5604 /* RuntimeErrorCode.SERVICE_WORKER_REGISTRATION_FAILED */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Service worker registration failed with: ' + err)));\n    });\n  });\n}\nfunction delayWithTimeout(timeout) {\n  return new Promise(resolve => setTimeout(resolve, timeout));\n}\nfunction ngswCommChannelFactory(opts, injector) {\n  const isBrowser = !(typeof ngServerMode !== 'undefined' && ngServerMode);\n  return new NgswCommChannel(isBrowser && opts.enabled !== false ? navigator.serviceWorker : undefined, injector);\n}\n/**\n * Token that can be used to provide options for `ServiceWorkerModule` outside of\n * `ServiceWorkerModule.register()`.\n *\n * You can use this token to define a provider that generates the registration options at runtime,\n * for example via a function call:\n *\n * {@example service-worker/registration-options/module.ts region=\"registration-options\"\n *     header=\"app.module.ts\"}\n *\n * @publicApi\n */\nclass SwRegistrationOptions {\n  /**\n   * Whether the ServiceWorker will be registered and the related services (such as `SwPush` and\n   * `SwUpdate`) will attempt to communicate and interact with it.\n   *\n   * Default: true\n   */\n  enabled;\n  /**\n   * A URL that defines the ServiceWorker's registration scope; that is, what range of URLs it can\n   * control. It will be used when calling\n   * [ServiceWorkerContainer#register()](https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/register).\n   */\n  scope;\n  /**\n   * Defines the ServiceWorker registration strategy, which determines when it will be registered\n   * with the browser.\n   *\n   * The default behavior of registering once the application stabilizes (i.e. as soon as there are\n   * no pending micro- and macro-tasks) is designed to register the ServiceWorker as soon as\n   * possible but without affecting the application's first time load.\n   *\n   * Still, there might be cases where you want more control over when the ServiceWorker is\n   * registered (for example, there might be a long-running timeout or polling interval, preventing\n   * the app from stabilizing). The available option are:\n   *\n   * - `registerWhenStable:<timeout>`: Register as soon as the application stabilizes (no pending\n   *     micro-/macro-tasks) but no later than `<timeout>` milliseconds. If the app hasn't\n   *     stabilized after `<timeout>` milliseconds (for example, due to a recurrent asynchronous\n   *     task), the ServiceWorker will be registered anyway.\n   *     If `<timeout>` is omitted, the ServiceWorker will only be registered once the app\n   *     stabilizes.\n   * - `registerImmediately`: Register immediately.\n   * - `registerWithDelay:<timeout>`: Register with a delay of `<timeout>` milliseconds. For\n   *     example, use `registerWithDelay:5000` to register the ServiceWorker after 5 seconds. If\n   *     `<timeout>` is omitted, is defaults to `0`, which will register the ServiceWorker as soon\n   *     as possible but still asynchronously, once all pending micro-tasks are completed.\n   * - An Observable factory function: A function that returns an `Observable`.\n   *     The function will be used at runtime to obtain and subscribe to the `Observable` and the\n   *     ServiceWorker will be registered as soon as the first value is emitted.\n   *\n   * Default: 'registerWhenStable:30000'\n   */\n  registrationStrategy;\n}\n/**\n * @publicApi\n *\n * Sets up providers to register the given Angular Service Worker script.\n *\n * If `enabled` is set to `false` in the given options, the module will behave as if service\n * workers are not supported by the browser, and the service worker will not be registered.\n *\n * Example usage:\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [\n *     provideServiceWorker('ngsw-worker.js')\n *   ],\n * });\n * ```\n */\nfunction provideServiceWorker(script, options = {}) {\n  return makeEnvironmentProviders([SwPush, SwUpdate, {\n    provide: SCRIPT,\n    useValue: script\n  }, {\n    provide: SwRegistrationOptions,\n    useValue: options\n  }, {\n    provide: NgswCommChannel,\n    useFactory: ngswCommChannelFactory,\n    deps: [SwRegistrationOptions, Injector]\n  }, provideAppInitializer(ngswAppInitializer)]);\n}\n\n/**\n * @publicApi\n */\nclass ServiceWorkerModule {\n  /**\n   * Register the given Angular Service Worker script.\n   *\n   * If `enabled` is set to `false` in the given options, the module will behave as if service\n   * workers are not supported by the browser, and the service worker will not be registered.\n   */\n  static register(script, options = {}) {\n    return {\n      ngModule: ServiceWorkerModule,\n      providers: [provideServiceWorker(script, options)]\n    };\n  }\n  static ɵfac = function ServiceWorkerModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ServiceWorkerModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ServiceWorkerModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [SwPush, SwUpdate]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ServiceWorkerModule, [{\n    type: NgModule,\n    args: [{\n      providers: [SwPush, SwUpdate]\n    }]\n  }], null, null);\n})();\nexport { ServiceWorkerModule, SwPush, SwRegistrationOptions, SwUpdate, provideServiceWorker };\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, UrlTree } from '@angular/router';\r\nimport { Observable, from } from 'rxjs';\r\nimport { map, switchMap, catchError } from 'rxjs/operators';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  \r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    console.log('🚀 AuthGuard: canActivate() llamado');\r\n    \r\n    return from(this.checkAuthStatus()).pipe(\r\n      map(isAuthenticated => {\r\n        console.log('🚀 AuthGuard: Resultado de checkAuthStatus:', isAuthenticated);\r\n        if (!isAuthenticated) {\r\n          console.log('🚀 AuthGuard: Redirigiendo a login');\r\n          return this.router.createUrlTree(['/auth/login']);\r\n        }\r\n        console.log('🚀 AuthGuard: Permitiendo acceso');\r\n        return true;\r\n      }),\r\n      catchError(error => {\r\n        console.error('❌ AuthGuard: Error en canActivate:', error);\r\n        return of(this.router.createUrlTree(['/auth/login']));\r\n      })\r\n    );\r\n  }\r\n\r\n  private async checkAuthStatus(): Promise<boolean> {\r\n    try {\r\n      console.log('🔍 AuthGuard: Verificación rápida de autenticación');\r\n      \r\n      // Verificar token de forma rápida\r\n      const token = await this.authService.getToken();\r\n      console.log('🔍 AuthGuard: Token obtenido:', token ? 'SÍ' : 'NO');\r\n      \r\n      if (!token) {\r\n        console.log('🔍 AuthGuard: No hay token, redirigiendo a login');\r\n        return false;\r\n      }\r\n\r\n      // Si el usuario ya está cargado, permitir acceso inmediatamente\r\n      const currentUser = this.authService.getCurrentUser();\r\n      if (currentUser) {\r\n        console.log('🔍 AuthGuard: Usuario ya cargado, acceso inmediato');\r\n        return true;\r\n      }\r\n\r\n      // Asegurar que el token sea válido antes de continuar\r\n      const isTokenValid = await this.authService.ensureValidToken();\r\n      if (!isTokenValid) {\r\n        console.log('🔍 AuthGuard: Token no válido, redirigiendo a login');\r\n        return false;\r\n      }\r\n\r\n      // Cargar usuario básico de forma rápida\r\n      console.log('🔍 AuthGuard: Cargando usuario básico...');\r\n      const { data: { session } } = await this.authService.getCurrentSession();\r\n      if (session?.user) {\r\n        await this.authService.loadUserData(session.user.id);\r\n        console.log('🔍 AuthGuard: Usuario básico cargado, permitiendo acceso');\r\n        return true;\r\n      }\r\n\r\n      console.log('🔍 AuthGuard: No hay sesión válida');\r\n      return false;\r\n      \r\n    } catch (error) {\r\n      console.error('❌ AuthGuard: Error en verificación rápida:', error);\r\n      \r\n      // Si es un error de lock, intentar limpiar y reintentar una vez\r\n      if (error instanceof Error && error.message.includes('NavigatorLockAcquireTimeoutError')) {\r\n        console.log('🔍 AuthGuard: Error de lock detectado, intentando limpiar...');\r\n        try {\r\n          // Forzar limpieza de locks\r\n          localStorage.setItem('supabase_lock_issue', 'true');\r\n          await new Promise(resolve => setTimeout(resolve, 2000));\r\n          \r\n          // Reintentar una vez\r\n          const retryResult = await this.checkAuthStatus();\r\n          if (retryResult) {\r\n            console.log('🔍 AuthGuard: Reintento exitoso después de limpiar locks');\r\n            return true;\r\n          }\r\n        } catch (retryError) {\r\n          console.error('❌ AuthGuard: Error en reintento:', retryError);\r\n        }\r\n      }\r\n      \r\n      return false;\r\n    }\r\n  }\r\n} ","import { Routes } from '@angular/router';\nimport { AuthGuard } from './core/guards/auth.guard';\n\nexport const routes: Routes = [\n  // Rutas de autenticación (públicas)\n  {\n    path: 'auth',\n    children: [\n      {\n        path: 'login',\n        loadComponent: () => import('./modules/auth/pages/login/login.component').then((m) => m.LoginComponent),\n      },\n      {\n        path: 'register',\n        loadComponent: () => import('./modules/auth/pages/register/register.component').then((m) => m.RegisterComponent),\n      },\n      {\n        path: '',\n        redirectTo: 'login',\n        pathMatch: 'full',\n      }\n    ]\n  },\n  \n  // Rutas protegidas de la aplicación\n  {\n    path: '',\n    loadComponent: () => import('./layout/components/main-layout/main-layout.component').then((m) => m.MainLayoutComponent),\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'home',\n        loadComponent: () => import('./home/home.page').then((m) => m.HomePage),\n      },\n      {\n        path: 'avisos',\n        loadComponent: () => import('./modules/avisos/pages/avisos/avisos.component').then((m) => m.AvisosComponent),\n      },\n      {\n        path: 'historial',\n        loadComponent: () => import('./modules/historial/pages/historial/historial.component').then((m) => m.HistorialComponent),\n      },\n      {\n        path: 'inventario',\n        loadComponent: () => import('./modules/inventario/pages/inventario/inventario.component').then((m) => m.InventarioComponent),\n      },\n      {\n        path: 'facturas',\n        loadComponent: () => import('./modules/facturas/pages/facturas/facturas.component').then((m) => m.FacturasComponent),\n      },\n      {\n        path: 'facturas/:id',\n        loadComponent: () => import('./modules/facturas/components/ver-factura/ver-factura.component').then((m) => m.VerFacturaComponent),\n      },\n      {\n        path: 'presupuestos',\n        loadComponent: () => import('./modules/presupuestos/pages/presupuestos/presupuestos.component').then((m) => m.PresupuestosComponent),\n      },\n      {\n        path: 'presupuestos/crear',\n        loadComponent: () => import('./modules/presupuestos/components/crear-presupuesto/crear-presupuesto.component').then((m) => m.CrearPresupuestoComponent),\n      },\n      {\n        path: 'presupuestos/:id',\n        loadComponent: () => import('./modules/presupuestos/components/ver-presupuesto/ver-presupuesto.component').then((m) => m.VerPresupuestoComponent),\n      },\n      {\n        path: 'clientes',\n        loadComponent: () => import('./modules/clientes/pages/clientes/clientes.component').then((m) => m.ClientesComponent),\n      },\n      {\n        path: 'tecnicos',\n        loadComponent: () => import('./modules/tecnicos/pages/tecnicos/tecnicos.component').then((m) => m.TecnicosComponent),\n      },\n      {\n        path: 'cuenta',\n        loadComponent: () => import('./modules/mi-cuenta/pages/mi-cuenta/mi-cuenta.component').then((m) => m.MiCuentaComponent),\n      },\n      {\n        path: 'ajustes',\n        loadComponent: () => import('./modules/ajustes/pages/ajustes/ajustes.component').then((m) => m.AjustesComponent),\n      },\n      {\n        path: 'crear-factura',\n        loadComponent: () => import('./modules/facturas/components/crear-factura/crear-factura.component').then((m) => m.CrearFacturaComponent),\n      },\n      {\n        path: 'facturas/editar/:id',\n        loadComponent: () => import('./modules/facturas/components/crear-factura/crear-factura.component').then((m) => m.CrearFacturaComponent),\n      },\n      {\n        path: 'ver-aviso/:id-aviso',\n        loadComponent: () => import('./modules/avisos/components/ver-avisos/ver-avisos.component').then((m) => m.VerAvisosComponent),\n      },\n      {\n        path: '',\n        redirectTo: 'home',\n        pathMatch: 'full',\n      }\n    ]\n  },\n  \n  // Redirección por defecto\n  {\n    path: '**',\n    redirectTo: 'auth/login',\n  }\n];\n","import { Injectable } from '@angular/core';\r\nimport { Platform } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PwaIosService {\r\n\r\n  constructor(private platform: Platform) {\r\n    this.initializeMobilePWA();\r\n  }\r\n\r\n  private initializeMobilePWA() {\r\n    // Detectar si estamos en iOS o Android\r\n    if (this.platform.is('ios') || this.platform.is('android')) {\r\n      this.setupMobilePWA();\r\n    }\r\n  }\r\n\r\n  private setupMobilePWA() {\r\n    // Prevenir el zoom en dispositivos móviles\r\n    document.addEventListener('gesturestart', (e) => {\r\n      e.preventDefault();\r\n    });\r\n\r\n    // Prevenir el zoom con doble tap\r\n    document.addEventListener('touchend', (e) => {\r\n      const now = Date.now();\r\n      const lastTouch = (window as any).lastTouch || 0;\r\n      const timeDiff = now - lastTouch;\r\n      \r\n      if (timeDiff < 500 && timeDiff > 0) {\r\n        e.preventDefault();\r\n      }\r\n      \r\n      (window as any).lastTouch = now;\r\n    });\r\n\r\n    // Configurar el viewport para dispositivos móviles\r\n    this.setupViewport();\r\n    \r\n    // Agregar estilos específicos para móviles\r\n    this.addMobileStyles();\r\n  }\r\n\r\n  private setupViewport() {\r\n    const viewport = document.querySelector('meta[name=\"viewport\"]');\r\n    if (viewport) {\r\n      const content = [\r\n        'viewport-fit=cover',\r\n        'width=device-width',\r\n        'initial-scale=1.0',\r\n        'minimum-scale=1.0',\r\n        'maximum-scale=1.0',\r\n        'user-scalable=no'\r\n      ].join(', ');\r\n      \r\n      viewport.setAttribute('content', content);\r\n    }\r\n  }\r\n\r\n  private addMobileStyles() {\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      /* Estilos específicos para dispositivos móviles */\r\n      \r\n      /* Configuración base */\r\n      html {\r\n        height: 100%;\r\n        overflow: hidden;\r\n      }\r\n      \r\n      body {\r\n        height: 100%;\r\n        margin: 0;\r\n        padding: 0;\r\n        overflow: hidden;\r\n        -webkit-touch-callout: none;\r\n        -webkit-user-select: none;\r\n        -webkit-tap-highlight-color: transparent;\r\n      }\r\n      \r\n      /* Configuración para PWA standalone */\r\n      @media all and (display-mode: standalone) {\r\n        body {\r\n          /* Aplicar safe areas solo en modo standalone */\r\n          padding-top: env(safe-area-inset-top, 0px);\r\n          padding-bottom: env(safe-area-inset-bottom, 0px);\r\n          padding-left: env(safe-area-inset-left, 0px);\r\n          padding-right: env(safe-area-inset-right, 0px);\r\n        }\r\n        \r\n        /* Configurar ion-app */\r\n        ion-app {\r\n          height: 100vh;\r\n          height: calc(100vh - env(safe-area-inset-top, 0px) - env(safe-area-inset-bottom, 0px));\r\n          margin: 0;\r\n          padding: 0;\r\n        }\r\n        \r\n        /* Configurar ion-content */\r\n        ion-content {\r\n          --offset-top: 0px;\r\n          --offset-bottom: 0px;\r\n          --padding-top: 0px;\r\n          --padding-bottom: 0px;\r\n        }\r\n        \r\n        /* Configurar ion-header */\r\n        ion-header {\r\n          padding-top: 0px;\r\n        }\r\n        \r\n        /* Configurar ion-footer */\r\n        ion-footer {\r\n          padding-bottom: 0px;\r\n        }\r\n        \r\n        /* Configurar ion-toolbar */\r\n        ion-toolbar {\r\n          --padding-top: 0px;\r\n          --padding-bottom: 0px;\r\n        }\r\n      }\r\n      \r\n      /* Configuración específica para iOS */\r\n      @supports (-webkit-touch-callout: none) {\r\n        body {\r\n          /* Prevenir el bounce scroll en iOS */\r\n          position: fixed;\r\n          width: 100%;\r\n          height: 100%;\r\n        }\r\n        \r\n        ion-content {\r\n          overflow-y: auto;\r\n          -webkit-overflow-scrolling: touch;\r\n        }\r\n      }\r\n      \r\n      /* Configuración para Android */\r\n      @supports not (-webkit-touch-callout: none) {\r\n        body {\r\n          /* Configuración específica para Android */\r\n          position: relative;\r\n        }\r\n      }\r\n      \r\n      /* Asegurar que el contenido principal ocupe todo el espacio */\r\n      .ion-page {\r\n        height: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n      }\r\n      \r\n      /* Configurar el router outlet para que ocupe el espacio disponible */\r\n      ion-router-outlet {\r\n        flex: 1;\r\n        height: 100%;\r\n      }\r\n    `;\r\n    document.head.appendChild(style);\r\n  }\r\n\r\n  // Método para mostrar instrucciones de instalación específicas de iOS\r\n  public showIOSInstallInstructions() {\r\n    const isStandalone = (window.navigator as any).standalone === true;\r\n    \r\n    if (!isStandalone) {\r\n      // Mostrar instrucciones específicas para iOS\r\n      const instructions = `\r\n        Para instalar esta aplicación en tu iPhone:\r\n        \r\n        1. Toca el botón compartir (□↑) en Safari\r\n        2. Desplázate hacia abajo y toca \"Agregar a pantalla de inicio\"\r\n        3. Toca \"Agregar\"\r\n        \r\n        La aplicación aparecerá en tu pantalla de inicio como una app nativa.\r\n      `;\r\n      \r\n      alert(instructions);\r\n    }\r\n  }\r\n\r\n  // Método para verificar si la app está en modo standalone\r\n  public isStandalone(): boolean {\r\n    return (window.navigator as any).standalone === true || \r\n           window.matchMedia('(display-mode: standalone)').matches;\r\n  }\r\n\r\n  // Método para obtener información de las safe areas\r\n  public getSafeAreaInfo(): any {\r\n    return {\r\n      top: this.getComputedValue('env(safe-area-inset-top)'),\r\n      bottom: this.getComputedValue('env(safe-area-inset-bottom)'),\r\n      left: this.getComputedValue('env(safe-area-inset-left)'),\r\n      right: this.getComputedValue('env(safe-area-inset-right)')\r\n    };\r\n  }\r\n\r\n  private getComputedValue(property: string): string {\r\n    const testElement = document.createElement('div');\r\n    testElement.style.position = 'absolute';\r\n    testElement.style.visibility = 'hidden';\r\n    testElement.style[property as any] = property;\r\n    document.body.appendChild(testElement);\r\n    \r\n    const computedValue = getComputedStyle(testElement)[property as any];\r\n    document.body.removeChild(testElement);\r\n    \r\n    return computedValue || '0px';\r\n  }\r\n} ","import { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PwaInstallService {\n\n  constructor(private platform: Platform) {}\n\n  // Verificar si la PWA puede ser instalada\n  public canInstall(): boolean {\n    return 'serviceWorker' in navigator && \n           'PushManager' in window &&\n           this.isStandalone() === false;\n  }\n\n  // Verificar si la app está en modo standalone\n  public isStandalone(): boolean {\n    return (window.navigator as any).standalone === true || \n           window.matchMedia('(display-mode: standalone)').matches;\n  }\n\n  // Obtener instrucciones específicas del navegador\n  public getInstallInstructions(): string {\n    const userAgent = navigator.userAgent.toLowerCase();\n    \n    if (this.platform.is('ios')) {\n      return 'Para instalar en iOS:\\n1. Toca el botón compartir (□↑)\\n2. Selecciona \"Agregar a pantalla de inicio\"\\n3. Toca \"Agregar\"';\n    } else if (this.platform.is('android')) {\n      return 'Para instalar en Android:\\n1. Toca el menú (⋮)\\n2. Selecciona \"Agregar a pantalla de inicio\"\\n3. Toca \"Agregar\"';\n    } else if (userAgent.includes('chrome')) {\n      return 'Para instalar en Chrome:\\n1. Busca el ícono de instalación (⬇️) en la barra de direcciones\\n2. Haz clic en \"Instalar\"';\n    } else if (userAgent.includes('edge')) {\n      return 'Para instalar en Edge:\\n1. Busca el ícono de instalación (⬇️) en la barra de direcciones\\n2. Haz clic en \"Instalar\"';\n    } else if (userAgent.includes('safari') && !userAgent.includes('chrome')) {\n      return 'Para instalar en Safari:\\n1. Ve a Archivo > Agregar a pantalla de inicio\\n2. La app aparecerá en tu Launchpad';\n    } else {\n      return 'Para instalar la aplicación:\\nBusca el ícono de instalación en tu navegador o usa las opciones del menú para agregar a pantalla de inicio.';\n    }\n  }\n\n  // Verificar si el navegador soporta PWA\n  public isPwaSupported(): boolean {\n    return 'serviceWorker' in navigator && \n           'PushManager' in window &&\n           'Notification' in window;\n  }\n\n  // Obtener información del navegador\n  public getBrowserInfo(): { name: string; version: string; isMobile: boolean } {\n    const userAgent = navigator.userAgent;\n    let browserName = 'Unknown';\n    let browserVersion = 'Unknown';\n    const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent);\n\n    if (userAgent.includes('Chrome') && !userAgent.includes('Edg')) {\n      browserName = 'Chrome';\n      const match = userAgent.match(/Chrome\\/(\\d+)/);\n      browserVersion = match ? match[1] : 'Unknown';\n    } else if (userAgent.includes('Safari') && !userAgent.includes('Chrome')) {\n      browserName = 'Safari';\n      const match = userAgent.match(/Version\\/(\\d+)/);\n      browserVersion = match ? match[1] : 'Unknown';\n    } else if (userAgent.includes('Firefox')) {\n      browserName = 'Firefox';\n      const match = userAgent.match(/Firefox\\/(\\d+)/);\n      browserVersion = match ? match[1] : 'Unknown';\n    } else if (userAgent.includes('Edg')) {\n      browserName = 'Edge';\n      const match = userAgent.match(/Edg\\/(\\d+)/);\n      browserVersion = match ? match[1] : 'Unknown';\n    }\n\n    return { name: browserName, version: browserVersion, isMobile };\n  }\n\n  // Mostrar información de debug\n  public getDebugInfo(): any {\n    return {\n      isStandalone: this.isStandalone(),\n      canInstall: this.canInstall(),\n      isPwaSupported: this.isPwaSupported(),\n      browser: this.getBrowserInfo(),\n      userAgent: navigator.userAgent,\n      platform: this.platform.platforms()\n    };\n  }\n} ","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { PwaIosService } from '../../services/pwa-ios.service';\nimport { PwaInstallService } from '../../services/pwa-install.service';\n\n@Component({\n  selector: 'app-pwa-install-banner',\n  standalone: true,\n  imports: [CommonModule, IonicModule],\n  template: `\n    <div *ngIf=\"showBanner\" class=\"pwa-banner\">\n      <ion-card>\n        <ion-card-content>\n          <div class=\"banner-content\">\n            <div class=\"banner-text\">\n              <h3>Instalar aplicación</h3>\n              <p>Agrega esta aplicación a tu pantalla de inicio para un acceso más rápido</p>\n            </div>\n            <div class=\"banner-actions\">\n              <ion-button fill=\"clear\" (click)=\"dismissBanner()\">\n                <ion-icon name=\"close\" slot=\"icon-only\"></ion-icon>\n              </ion-button>\n              <ion-button (click)=\"installPWA()\">\n                Instalar\n              </ion-button>\n            </div>\n          </div>\n        </ion-card-content>\n      </ion-card>\n    </div>\n  `,\n  styles: [`\n    .banner-content {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      gap: 16px;\n    }\n    \n    .banner-text h3 {\n      margin: 0 0 4px 0;\n      font-size: 16px;\n      font-weight: 600;\n    }\n    \n    .banner-text p {\n      margin: 0;\n      font-size: 14px;\n      opacity: 0.8;\n    }\n    \n    .banner-actions {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n    }\n  `]\n})\nexport class PwaInstallBannerComponent implements OnInit, OnDestroy {\n  showBanner = false;\n  private deferredPrompt: any;\n\n  constructor(\n    private pwaIosService: PwaIosService,\n    private pwaInstallService: PwaInstallService\n  ) {}\n\n  ngOnInit() {\n    this.checkPWAInstallation();\n    window.addEventListener('beforeinstallprompt', this.handleBeforeInstallPrompt.bind(this));\n  }\n\n  ngOnDestroy() {\n    window.removeEventListener('beforeinstallprompt', this.handleBeforeInstallPrompt.bind(this));\n  }\n\n  private checkPWAInstallation() {\n    // Verificar si la app ya está instalada\n    if (this.pwaInstallService.isStandalone()) {\n      this.showBanner = false;\n      return;\n    }\n\n    // Verificar si el navegador soporta PWA\n    if (!this.pwaInstallService.isPwaSupported()) {\n      this.showBanner = false;\n      return;\n    }\n\n    // Verificar si el usuario ya ha descartado el banner\n    const dismissed = localStorage.getItem('pwa-banner-dismissed');\n    if (dismissed) {\n      this.showBanner = false;\n      return;\n    }\n\n    // Mostrar el banner después de un delay\n    setTimeout(() => {\n      this.showBanner = true;\n    }, 3000);\n  }\n\n  private handleBeforeInstallPrompt(e: Event) {\n    e.preventDefault();\n    this.deferredPrompt = e;\n  }\n\n  async installPWA() {\n    if (this.deferredPrompt) {\n      this.deferredPrompt.prompt();\n      const { outcome } = await this.deferredPrompt.userChoice;\n      if (outcome === 'accepted') {\n        console.log('Usuario aceptó instalar la PWA');\n      }\n      this.deferredPrompt = null;\n      this.showBanner = false;\n    } else {\n      // Fallback para navegadores que no soportan beforeinstallprompt\n      this.showInstallInstructions();\n    }\n  }\n\n  dismissBanner() {\n    this.showBanner = false;\n    localStorage.setItem('pwa-banner-dismissed', 'true');\n  }\n\n  private showInstallInstructions() {\n    // Usar el servicio de instalación para mostrar instrucciones específicas\n    const instructions = this.pwaInstallService.getInstallInstructions();\n    alert(instructions);\n  }\n} ","import { Injectable } from '@angular/core';\r\nimport { SwUpdate } from '@angular/service-worker';\r\nimport { AlertController, ToastController } from '@ionic/angular';\r\nimport { filter, map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PwaUpdateService {\r\n\r\n  constructor(\r\n    private swUpdate: SwUpdate,\r\n    private alertController: AlertController,\r\n    private toastController: ToastController\r\n  ) {\r\n    this.checkForUpdates();\r\n  }\r\n\r\n  private checkForUpdates() {\r\n    if (this.swUpdate.isEnabled) {\r\n      // Verificar actualizaciones al iniciar la aplicación\r\n      this.swUpdate.checkForUpdate();\r\n      \r\n      // Verificar actualizaciones cada 30 minutos (en lugar de 6 horas)\r\n      setInterval(() => {\r\n        this.swUpdate.checkForUpdate();\r\n      }, 30 * 60 * 1000);\r\n\r\n      // Escuchar actualizaciones disponibles\r\n      this.swUpdate.versionUpdates\r\n        .pipe(\r\n          filter(event => event.type === 'VERSION_READY')\r\n        )\r\n        .subscribe(() => {\r\n          this.promptUser();\r\n        });\r\n\r\n      // Escuchar errores de actualización\r\n      this.swUpdate.versionUpdates\r\n        .pipe(\r\n          filter(event => event.type === 'VERSION_INSTALLATION_FAILED')\r\n        )\r\n        .subscribe(() => {\r\n          this.showError();\r\n        });\r\n\r\n      // Escuchar cuando hay una nueva versión disponible\r\n      this.swUpdate.versionUpdates\r\n        .pipe(\r\n          filter(event => event.type === 'VERSION_DETECTED')\r\n        )\r\n        .subscribe(() => {\r\n          console.log('Nueva versión detectada');\r\n        });\r\n    }\r\n  }\r\n\r\n  private async promptUser() {\r\n    const alert = await this.alertController.create({\r\n      header: 'Nueva versión disponible',\r\n      message: 'Hay una nueva versión de la aplicación disponible. ¿Deseas actualizar ahora?',\r\n      buttons: [\r\n        {\r\n          text: 'Más tarde',\r\n          role: 'cancel'\r\n        },\r\n        {\r\n          text: 'Actualizar',\r\n          handler: () => {\r\n            this.activateUpdate();\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  private async showError() {\r\n    const toast = await this.toastController.create({\r\n      message: 'Error al actualizar la aplicación',\r\n      duration: 3000,\r\n      position: 'bottom',\r\n      color: 'danger'\r\n    });\r\n\r\n    await toast.present();\r\n  }\r\n\r\n  private activateUpdate() {\r\n    this.swUpdate.activateUpdate().then(() => {\r\n      window.location.reload();\r\n    });\r\n  }\r\n\r\n  // Método público para verificar actualizaciones manualmente\r\n  public checkForUpdate() {\r\n    if (this.swUpdate.isEnabled) {\r\n      this.swUpdate.checkForUpdate().then(() => {\r\n        console.log('Verificando actualizaciones...');\r\n      });\r\n    }\r\n  }\r\n\r\n  // Método para forzar la actualización sin preguntar al usuario\r\n  public forceUpdate() {\r\n    if (this.swUpdate.isEnabled) {\r\n      this.swUpdate.activateUpdate().then(() => {\r\n        window.location.reload();\r\n      });\r\n    }\r\n  }\r\n\r\n  // Método para limpiar el cache del Service Worker\r\n  public clearCache() {\r\n    if ('caches' in window) {\r\n      caches.keys().then(names => {\r\n        names.forEach(name => {\r\n          caches.delete(name);\r\n        });\r\n        console.log('Cache limpiado');\r\n        window.location.reload();\r\n      });\r\n    }\r\n  }\r\n} ","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { CacheService } from './cache.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PerformanceFixService implements OnDestroy {\r\n  private cleanupInterval: any;\r\n\r\n  constructor(private cacheService: CacheService) {\r\n    // Limpieza automática cada 30 segundos para prevenir acumulación\r\n    this.cleanupInterval = setInterval(() => {\r\n      this.performCleanup();\r\n    }, 30000);\r\n  }\r\n\r\n  /**\r\n   * Realiza limpieza preventiva para mantener el rendimiento\r\n   */\r\n  private performCleanup(): void {\r\n    // Limpiar cache automáticamente\r\n    this.cacheService.clearAllDataCache();\r\n    \r\n    // Limpiar elementos temporales del DOM\r\n    this.cleanupTemporaryElements();\r\n    \r\n    // Forzar garbage collection si está disponible\r\n    this.forceGarbageCollection();\r\n  }\r\n\r\n  /**\r\n   * Limpia elementos temporales del DOM\r\n   */\r\n  private cleanupTemporaryElements(): void {\r\n    try {\r\n      // Limpiar elementos que puedan estar acumulándose\r\n      const tempElements = document.querySelectorAll('[data-temp], [data-temp-listener]');\r\n      tempElements.forEach(el => el.remove());\r\n      \r\n      // Limpiar elementos con clases temporales\r\n      const tempClassElements = document.querySelectorAll('.temp-element, .temp-listener');\r\n      tempClassElements.forEach(el => el.remove());\r\n    } catch (error) {\r\n      // Silenciar errores para no afectar la funcionalidad\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fuerza la recolección de basura si está disponible\r\n   */\r\n  private forceGarbageCollection(): void {\r\n    if ('gc' in window) {\r\n      try {\r\n        (window as any).gc();\r\n      } catch (error) {\r\n        // Silenciar errores\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fuerza una limpieza inmediata (útil cuando se detecta lentitud)\r\n   */\r\n  forceCleanup(): void {\r\n    this.performCleanup();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.cleanupInterval) {\r\n      clearInterval(this.cleanupInterval);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { IonApp, IonRouterOutlet } from '@ionic/angular/standalone';\nimport { PwaInstallBannerComponent } from './core/components/pwa-install-banner/pwa-install-banner.component';\nimport { PwaUpdateService } from './core/services/pwa-update.service';\nimport { PwaIosService } from './core/services/pwa-ios.service';\nimport { ViewportService } from './core/services/viewport.service';\nimport { AuthService } from './core/services/auth.service';\nimport { PerformanceFixService } from './core/services/performance-fix.service';\nimport { environment } from '../environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  imports: [IonApp, IonRouterOutlet, PwaInstallBannerComponent],\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    private pwaUpdateService: PwaUpdateService,\n    private pwaIosService: PwaIosService,\n    private viewportService: ViewportService,\n    private authService: AuthService,\n    private performanceFix: PerformanceFixService\n  ) {}\n\n  ngOnInit() {\n    // Los servicios PWA se inicializan automáticamente en sus constructores\n    // Verificar autenticación al iniciar la aplicación\n    this.authService.isAuthenticated$.subscribe(isAuthenticated => {\n      console.log('Estado de autenticación:', isAuthenticated);\n    });\n\n    // Iniciar optimización automática de rendimiento en producción\n    if (!this.isDevMode()) {\n      // Limpieza preventiva cada 2 minutos\n      setInterval(() => {\n        this.performanceFix.forceCleanup();\n      }, 2 * 60 * 1000);\n    }\n  }\n\n  /**\n   * Verifica si estamos en modo desarrollo\n   */\n  private isDevMode(): boolean {\n    return !environment.production;\n  }\n}\n","<ion-app>\r\n  <ion-router-outlet></ion-router-outlet>\r\n  <app-pwa-install-banner></app-pwa-install-banner>\r\n</ion-app>\r\n","import { HttpRequest, HttpHandlerFn, HttpEvent } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, switchMap, timeout } from 'rxjs/operators';\r\nimport { inject } from '@angular/core';\r\nimport { PerformanceFixService } from '../services/performance-fix.service';\r\n\r\nlet requestCount = 0;\r\nconst MAX_CONCURRENT_REQUESTS = 5;\r\nconst REQUEST_TIMEOUT = 30000; // 30 segundos\r\n\r\nexport function PerformanceInterceptor(\r\n  request: HttpRequest<unknown>, \r\n  next: HttpHandlerFn\r\n): Observable<HttpEvent<unknown>> {\r\n  const performanceFix = inject(PerformanceFixService);\r\n  \r\n  // Contar peticiones concurrentes\r\n  requestCount++;\r\n  \r\n  // Si hay demasiadas peticiones, forzar limpieza\r\n  if (requestCount > MAX_CONCURRENT_REQUESTS) {\r\n    performanceFix.forceCleanup();\r\n    requestCount = 0;\r\n  }\r\n\r\n  // Aplicar timeout a todas las peticiones\r\n  return next(request).pipe(\r\n    timeout(REQUEST_TIMEOUT),\r\n    catchError((error: any) => {\r\n      requestCount--;\r\n      \r\n      // Si hay error de timeout, forzar limpieza\r\n      if (error.name === 'TimeoutError') {\r\n        performanceFix.forceCleanup();\r\n      }\r\n      \r\n      return throwError(() => error);\r\n    }),\r\n    switchMap(event => {\r\n      requestCount--;\r\n      return [event];\r\n    })\r\n  );\r\n}\r\n","import { environment } from '../../../environments/environment';\r\n\r\nexport class ProductionConfig {\r\n  static initialize(): void {\r\n    if (environment.production) {\r\n      // Configuración de producción\r\n      this.disableConsoleLogs();\r\n      this.setupErrorHandling();\r\n      this.optimizePerformance();\r\n    }\r\n  }\r\n\r\n  private static disableConsoleLogs(): void {\r\n    // Guardar referencias originales\r\n    const originalLog = console.log;\r\n    const originalDebug = console.debug;\r\n    const originalInfo = console.info;\r\n    const originalWarn = console.warn;\r\n    const originalError = console.error;\r\n\r\n    // Reemplazar métodos de console\r\n    console.log = () => {};\r\n    console.debug = () => {};\r\n    console.info = () => {};\r\n    console.warn = () => {};\r\n    \r\n    // Solo permitir errores críticos\r\n    console.error = (...args: any[]) => {\r\n      const message = args[0];\r\n      if (typeof message === 'string' && \r\n          (message.includes('ERROR') || message.includes('CRITICAL') || message.includes('FATAL'))) {\r\n        originalError(...args);\r\n      }\r\n    };\r\n\r\n    // Limpiar logs existentes\r\n    console.clear();\r\n  }\r\n\r\n  private static setupErrorHandling(): void {\r\n    // Configurar manejo global de errores\r\n    window.addEventListener('error', (event) => {\r\n      // Solo loggear errores críticos en producción\r\n      if (event.error && event.error.message && \r\n          event.error.message.includes('CRITICAL')) {\r\n        console.error('Error crítico:', event.error);\r\n      }\r\n    });\r\n\r\n    // Configurar manejo de promesas rechazadas\r\n    window.addEventListener('unhandledrejection', (event) => {\r\n      // Solo loggear errores críticos en producción\r\n      if (event.reason && event.reason.message && \r\n          event.reason.message.includes('CRITICAL')) {\r\n        console.error('Promesa rechazada crítica:', event.reason);\r\n      }\r\n    });\r\n  }\r\n\r\n  private static optimizePerformance(): void {\r\n    // Deshabilitar logs de performance en producción\r\n    if (window.performance && window.performance.getEntriesByType) {\r\n      const originalGetEntries = window.performance.getEntriesByType;\r\n      window.performance.getEntriesByType = (type) => {\r\n        // Solo permitir métricas esenciales\r\n        if (type === 'navigation' || type === 'resource') {\r\n          return originalGetEntries.call(window.performance, type);\r\n        }\r\n        return [];\r\n      };\r\n    }\r\n  }\r\n}\r\n","import { environment } from '../../../environments/environment';\r\n\r\nexport class LoggingConfig {\r\n  static initialize(): void {\r\n    if (environment.production) {\r\n      this.setupProductionLogging();\r\n    } else {\r\n      this.setupDevelopmentLogging();\r\n    }\r\n  }\r\n\r\n  private static setupProductionLogging(): void {\r\n    // Deshabilitar completamente el logging en producción\r\n    const noop = () => {};\r\n    \r\n    // Reemplazar métodos de console\r\n    console.log = noop;\r\n    console.debug = noop;\r\n    console.info = noop;\r\n    console.warn = noop;\r\n    \r\n    // Solo permitir errores críticos\r\n    const originalError = console.error;\r\n    console.error = (...args: any[]) => {\r\n      const message = args[0];\r\n      if (typeof message === 'string' && \r\n          (message.includes('ERROR') || message.includes('CRITICAL') || message.includes('FATAL'))) {\r\n        originalError(...args);\r\n      }\r\n    };\r\n\r\n    // Limpiar logs existentes\r\n    console.clear();\r\n    \r\n    // Deshabilitar logs de performance\r\n    if (window.performance && window.performance.getEntriesByType) {\r\n      const originalGetEntries = window.performance.getEntriesByType;\r\n      window.performance.getEntriesByType = (type) => {\r\n        if (type === 'navigation' || type === 'resource') {\r\n          return originalGetEntries.call(window.performance, type);\r\n        }\r\n        return [];\r\n      };\r\n    }\r\n\r\n    // Deshabilitar logs de errores no críticos\r\n    window.addEventListener('error', (event) => {\r\n      if (event.error && event.error.message && \r\n          event.error.message.includes('CRITICAL')) {\r\n        console.error('Error crítico:', event.error);\r\n      }\r\n    });\r\n\r\n    window.addEventListener('unhandledrejection', (event) => {\r\n      if (event.reason && event.reason.message && \r\n          event.reason.message.includes('CRITICAL')) {\r\n        console.error('Promesa rechazada crítica:', event.reason);\r\n      }\r\n    });\r\n  }\r\n\r\n  private static setupDevelopmentLogging(): void {\r\n    // Habilitar todo el logging en desarrollo\r\n    console.log('🛠️ Modo desarrollo: Logging habilitado');\r\n    console.debug('🔍 Debug habilitado');\r\n    console.info('ℹ️ Info habilitado');\r\n    console.warn('⚠️ Warning habilitado');\r\n    console.error('❌ Error habilitado');\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { RouteReuseStrategy, provideRouter, withPreloading, PreloadAllModules } from '@angular/router';\nimport { IonicRouteStrategy, provideIonicAngular } from '@ionic/angular/standalone';\nimport { provideHttpClient, withInterceptors } from '@angular/common/http';\nimport { provideServiceWorker } from '@angular/service-worker';\nimport { isDevMode } from '@angular/core';\n\nimport { routes } from './app/app.routes';\nimport { AppComponent } from './app/app.component';\nimport { environment } from './environments/environment';\nimport { PerformanceInterceptor } from './app/core/interceptors/performance.interceptor';\nimport { ProductionConfig } from './app/core/config/production.config';\nimport { LoggingConfig } from './app/core/config/logging.config';\n\nif (environment.production) {\n  enableProdMode();\n  ProductionConfig.initialize();\n  LoggingConfig.initialize();\n  \n  // Limpiar logs en producción\n  console.clear();\n  \n  // Deshabilitar logs de debug en producción\n  console.log = () => {};\n  console.debug = () => {};\n  console.info = () => {};\n  console.warn = () => {};\n  \n  // Solo mantener console.error para errores críticos\n  const originalError = console.error;\n  console.error = (...args: any[]) => {\n    // Solo mostrar errores críticos del sistema\n    if (args[0] && typeof args[0] === 'string' && \n        (args[0].includes('ERROR') || args[0].includes('CRITICAL') || args[0].includes('FATAL'))) {\n      originalError(...args);\n    }\n  };\n}\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    provideIonicAngular(),\n    provideRouter(routes, withPreloading(PreloadAllModules)),\n    provideHttpClient(\n      withInterceptors([PerformanceInterceptor])\n    ),\n    provideServiceWorker('ngsw-worker.js', {\n      enabled: !isDevMode(),\n      registrationStrategy: 'registerWhenStable:30000'\n    })\n  ],\n});\n"],"mappings":"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","names":["timeout","alert"],"x_google_ignoreList":[0]}