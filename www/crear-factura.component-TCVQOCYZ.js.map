{
  "version": 3,
  "sources": ["src/app/modules/facturas/components/crear-factura/crear-factura.component.ts", "src/app/modules/facturas/components/crear-factura/crear-factura.component.html"],
  "sourcesContent": ["import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonContent } from \"@ionic/angular/standalone\";\r\nimport { IonIcon } from '@ionic/angular/standalone';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { trash, closeOutline, trashOutline, arrowBackOutline, sendOutline, download, print, refreshOutline } from 'ionicons/icons';\r\nimport { addIcons } from 'ionicons';\r\nimport { \r\n  eyeOutline, \r\n  downloadOutline, \r\n  printOutline, \r\n  createOutline\r\n} from 'ionicons/icons';\r\nimport { FacturasService } from '../../services/facturas.service';\r\nimport { LineaFactura, CrearFacturaRequest, FacturaCompleta } from '../../models/factura.model';\r\nimport { PdfService } from '../../../../core/services/pdf.service';\r\nimport jsPDF from 'jspdf';\r\n\r\n@Component({\r\n  selector: 'app-crear-factura',\r\n  templateUrl: './crear-factura.component.html',\r\n  styleUrls: ['./crear-factura.component.scss'],\r\n  standalone: true,\r\n    imports: [CommonModule, ReactiveFormsModule, FormsModule, IonIcon]\r\n})\r\nexport class CrearFacturaComponent implements OnInit {\r\n  @Input() facturaId?: string; // Para editar factura existente\r\n  \r\n  facturaForm: FormGroup;\r\n  repuestos: LineaFactura[] = [];\r\n  manoObra: LineaFactura[] = [];\r\n  desplazamientos: LineaFactura[] = [];\r\n  mostrarVistaPrevia: boolean = false;\r\n  loading = false;\r\n  isEditing = false;\r\n  facturaOriginal?: FacturaCompleta;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private facturasService: FacturasService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private pdfService: PdfService\r\n  ) {\r\n    this.facturaForm = this.fb.group({\r\n      numeroFactura: ['', Validators.required],\r\n      fecha: [new Date().toISOString().split('T')[0], Validators.required],\r\n      nombre: ['', Validators.required],\r\n      direccion: ['', Validators.required],\r\n      cif: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      notas: ['']\r\n    });\r\n    addIcons({refreshOutline,trash,download,print,eyeOutline,downloadOutline,printOutline,trashOutline,createOutline});\r\n  }\r\n\r\n  ngOnInit() {\r\n    addIcons({ trash, closeOutline, download, print });\r\n    \r\n    // Verificar si estamos editando una factura existente\r\n    this.route.params.subscribe(params => {\r\n      const facturaId = params['id'];\r\n      if (facturaId) {\r\n        this.facturaId = facturaId;\r\n        this.isEditing = true;\r\n        this.cargarFacturaParaEditar(facturaId);\r\n      } else {\r\n        // Solo generar número automático si es nueva factura\r\n        this.generarNumeroFactura();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Carga una factura existente para editar\r\n   */\r\n  private cargarFacturaParaEditar(facturaId: string) {\r\n    this.loading = true;\r\n    this.facturasService.getFactura(facturaId).subscribe({\r\n      next: (facturaCompleta) => {\r\n        this.facturaOriginal = facturaCompleta;\r\n        this.cargarDatosFactura(facturaCompleta);\r\n        this.loading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error al cargar factura para editar:', error);\r\n        this.loading = false;\r\n        // Redirigir a lista de facturas si hay error\r\n        this.router.navigate(['/facturas']);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Carga los datos de la factura en el formulario\r\n   */\r\n  private cargarDatosFactura(facturaCompleta: FacturaCompleta) {\r\n    const factura = facturaCompleta.factura;\r\n    const lineas = facturaCompleta.lineas;\r\n\r\n    // Cargar datos básicos de la factura\r\n    this.facturaForm.patchValue({\r\n      numeroFactura: factura.numero_factura,\r\n      fecha: factura.fecha_emision,\r\n      nombre: factura.nombre_cliente,\r\n      direccion: factura.direccion_cliente,\r\n      cif: factura.cif_cliente,\r\n      email: factura.email_cliente,\r\n      notas: factura.notas || ''\r\n    });\r\n\r\n    // Separar líneas por tipo\r\n    this.repuestos = lineas.filter(linea => linea.tipo === 'repuesto');\r\n    this.manoObra = lineas.filter(linea => linea.tipo === 'mano_obra');\r\n    this.desplazamientos = lineas.filter(linea => linea.tipo === 'desplazamiento');\r\n\r\n    console.log('✅ Factura cargada para edición:', {\r\n      factura,\r\n      lineas,\r\n      repuestos: this.repuestos,\r\n      manoObra: this.manoObra,\r\n      desplazamientos: this.desplazamientos\r\n    });\r\n  }\r\n\r\n  // Generar número de factura automáticamente (solo para nuevas facturas)\r\n  generarNumeroFactura() {\r\n    if (!this.isEditing) {\r\n      this.facturasService.getSiguienteNumero().subscribe({\r\n        next: (numero) => {\r\n          this.facturaForm.patchValue({ numeroFactura: numero });\r\n        },\r\n        error: (error) => {\r\n          console.error('Error al generar número de factura:', error);\r\n          // Fallback: generar número manual\r\n          const año = new Date().getFullYear();\r\n          this.facturaForm.patchValue({ numeroFactura: `F${año}-001` });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // Repuestos\r\n  agregarRepuesto() {\r\n    this.repuestos.push({ \r\n      tipo: 'repuesto',\r\n      nombre: '', \r\n      cantidad: 1, \r\n      precio_neto: 0, \r\n      precio_pvp: 0 \r\n    });\r\n  }\r\n  eliminarRepuesto(i: number) {\r\n    this.repuestos.splice(i, 1);\r\n  }\r\n\r\n  // Mano de obra\r\n  agregarManoObra() {\r\n    this.manoObra.push({ \r\n      tipo: 'mano_obra',\r\n      nombre: '', \r\n      cantidad: 1, \r\n      precio_pvp: 0 \r\n    });\r\n  }\r\n  eliminarManoObra(i: number) {\r\n    this.manoObra.splice(i, 1);\r\n  }\r\n\r\n  // Desplazamiento\r\n  agregarDesplazamiento() {\r\n    this.desplazamientos.push({ \r\n      tipo: 'desplazamiento',\r\n      nombre: '', \r\n      cantidad: 1, \r\n      precio_pvp: 0 \r\n    });\r\n  }\r\n  eliminarDesplazamiento(i: number) {\r\n    this.desplazamientos.splice(i, 1);\r\n  }\r\n\r\n  // Totales\r\n  get totalRepuestosNeto() {\r\n    return this.repuestos.reduce((acc, r) => acc + (r.cantidad * (r.precio_neto || 0)), 0);\r\n  }\r\n  get totalRepuestosPvp() {\r\n    return this.repuestos.reduce((acc, r) => acc + (r.cantidad * r.precio_pvp), 0);\r\n  }\r\n  get totalManoObra() {\r\n    return this.manoObra.reduce((acc, m) => acc + (m.cantidad * m.precio_pvp), 0);\r\n  }\r\n  get totalDesplazamiento() {\r\n    return this.desplazamientos.reduce((acc, d) => acc + (d.cantidad * d.precio_pvp), 0);\r\n  }\r\n  get subtotal() {\r\n    return this.totalRepuestosPvp + this.totalManoObra + this.totalDesplazamiento;\r\n  }\r\n  get iva() {\r\n    return +(this.subtotal * 0.21).toFixed(2);\r\n  }\r\n  get total() {\r\n    return +(this.subtotal + this.iva).toFixed(2);\r\n  }\r\n\r\n  enviarFactura() {\r\n    console.log('Botón enviar factura clickeado');\r\n    console.log('Formulario válido:', this.facturaForm.valid);\r\n    console.log('Errores del formulario:', this.facturaForm.errors);\r\n    console.log('Valores del formulario:', this.facturaForm.value);\r\n    \r\n    if (this.facturaForm.valid) {\r\n      console.log('Formulario es válido, procediendo...');\r\n      this.loading = true;\r\n      const facturaData = this.prepararDatosFactura();\r\n      facturaData.estado = 'En curso';\r\n      \r\n      console.log('Datos de factura a enviar:', facturaData);\r\n      \r\n      if (this.isEditing && this.facturaId) {\r\n        // Actualizar factura existente\r\n        this.facturasService.actualizarFactura(this.facturaId, facturaData).subscribe({\r\n          next: (response) => {\r\n            console.log('Factura actualizada exitosamente:', response);\r\n            this.loading = false;\r\n            // Aquí podrías mostrar un mensaje de éxito\r\n            this.router.navigate(['/facturas']);\r\n          },\r\n          error: (error) => {\r\n            console.error('Error al actualizar factura:', error);\r\n            this.loading = false;\r\n            // Aquí podrías mostrar un mensaje de error\r\n          }\r\n        });\r\n      } else {\r\n        // Crear nueva factura\r\n        this.facturasService.crearFactura(facturaData).subscribe({\r\n          next: (response) => {\r\n            console.log('Factura creada exitosamente:', response);\r\n            this.loading = false;\r\n            // Aquí podrías mostrar un mensaje de éxito\r\n            this.router.navigate(['/facturas']);\r\n          },\r\n          error: (error) => {\r\n            console.error('Error al crear factura:', error);\r\n            this.loading = false;\r\n            // Aquí podrías mostrar un mensaje de error\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      console.log('Formulario no es válido');\r\n      // Mostrar errores específicos\r\n      Object.keys(this.facturaForm.controls).forEach(key => {\r\n        const control = this.facturaForm.get(key);\r\n        if (control?.invalid) {\r\n          console.log(`Campo ${key} es inválido:`, control.errors);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  generarFactura() {\r\n    console.log('Botón generar factura clickeado');\r\n    console.log('Formulario válido:', this.facturaForm.valid);\r\n    \r\n    if (this.facturaForm.valid) {\r\n      console.log('Formulario es válido, procediendo...');\r\n      this.loading = true;\r\n      const facturaData = this.prepararDatosFactura();\r\n      facturaData.estado = 'Pendiente';\r\n      \r\n      console.log('Datos de factura a generar:', facturaData);\r\n      \r\n      if (this.isEditing && this.facturaId) {\r\n        // Actualizar factura existente\r\n        this.facturasService.actualizarFactura(this.facturaId, facturaData).subscribe({\r\n          next: (response) => {\r\n            console.log('Factura actualizada exitosamente:', response);\r\n            this.loading = false;\r\n            // Aquí podrías mostrar un mensaje de éxito\r\n            this.router.navigate(['/facturas']);\r\n          },\r\n          error: (error) => {\r\n            console.error('Error al actualizar factura:', error);\r\n            this.loading = false;\r\n            // Aquí podrías mostrar un mensaje de error\r\n          }\r\n        });\r\n      } else {\r\n        // Crear nueva factura\r\n        this.facturasService.crearFactura(facturaData).subscribe({\r\n          next: (response) => {\r\n            console.log('Factura generada exitosamente:', response);\r\n            this.loading = false;\r\n            // Aquí podrías mostrar un mensaje de éxito\r\n            this.router.navigate(['/facturas']);\r\n          },\r\n          error: (error) => {\r\n            console.error('Error al generar factura:', error);\r\n            this.loading = false;\r\n            // Aquí podrías mostrar un mensaje de error\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      console.log('Formulario no es válido');\r\n      // Mostrar errores específicos\r\n      Object.keys(this.facturaForm.controls).forEach(key => {\r\n        const control = this.facturaForm.get(key);\r\n        if (control?.invalid) {\r\n          console.log(`Campo ${key} es inválido:`, control.errors);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private prepararDatosFactura(): CrearFacturaRequest {\r\n    const formValue = this.facturaForm.value;\r\n    const todasLasLineas = [\r\n      ...this.repuestos,\r\n      ...this.manoObra,\r\n      ...this.desplazamientos\r\n    ];\r\n\r\n    return {\r\n      numero_factura: formValue.numeroFactura,\r\n      fecha_emision: formValue.fecha,\r\n      nombre_cliente: formValue.nombre,\r\n      direccion_cliente: formValue.direccion,\r\n      cif_cliente: formValue.cif,\r\n      email_cliente: formValue.email,\r\n      subtotal: this.subtotal,\r\n      iva: this.iva,\r\n      total: this.total,\r\n      estado: 'Pendiente',\r\n      notas: formValue.notas,\r\n      lineas: todasLasLineas\r\n    };\r\n  }\r\n\r\n  toggleVistaPrevia() {\r\n    this.mostrarVistaPrevia = !this.mostrarVistaPrevia;\r\n  }\r\n\r\n  // Método para debug del formulario\r\n  debugFormulario() {\r\n    console.log('=== DEBUG FORMULARIO ===');\r\n    console.log('Formulario válido:', this.facturaForm.valid);\r\n    console.log('Valores:', this.facturaForm.value);\r\n    console.log('Errores:', this.facturaForm.errors);\r\n    \r\n    Object.keys(this.facturaForm.controls).forEach(key => {\r\n      const control = this.facturaForm.get(key);\r\n      console.log(`Campo ${key}:`, {\r\n        valor: control?.value,\r\n        válido: control?.valid,\r\n        errores: control?.errors,\r\n        touched: control?.touched,\r\n        dirty: control?.dirty\r\n      });\r\n    });\r\n  }\r\n\r\n  // Método para descargar factura como PDF\r\n  async descargarFactura() {\r\n    try {\r\n      console.log('🔧 Iniciando descarga de factura...');\r\n      \r\n      // Generar nombre del archivo\r\n      const numeroFactura = this.facturaForm.get('numeroFactura')?.value || 'factura';\r\n      const nombreArchivo = `factura_${numeroFactura}.pdf`;\r\n\r\n      // Obtener datos de la factura\r\n      const datosFactura = this.prepararDatosFactura();\r\n\r\n      // Generar PDF nativo con estilos\r\n      this.pdfService.generarPdfNativo(datosFactura, nombreArchivo);\r\n      \r\n      console.log('✅ Factura descargada exitosamente');\r\n    } catch (error) {\r\n      console.error('❌ Error al descargar factura:', error);\r\n      // Aquí podrías mostrar un mensaje de error al usuario\r\n    }\r\n  }\r\n\r\n  // Método para imprimir factura\r\n  async imprimirFactura() {\r\n    try {\r\n      console.log('🔧 Iniciando impresión de factura...');\r\n      \r\n      // Obtener datos de la factura\r\n      const datosFactura = this.prepararDatosFactura();\r\n\r\n      // Usar el método de impresión nativa\r\n      await this.pdfService.imprimirFacturaNativa(datosFactura);\r\n      \r\n      console.log('✅ Impresión iniciada exitosamente');\r\n    } catch (error) {\r\n      console.error('❌ Error al imprimir factura:', error);\r\n      // Aquí podrías mostrar un mensaje de error al usuario\r\n    }\r\n  }\r\n\r\n  // Método para generar PDF desde datos (alternativo)\r\n  generarPdfDesdeDatos() {\r\n    try {\r\n      console.log('🔧 Generando PDF desde datos...');\r\n      \r\n      const datosFactura = this.prepararDatosFactura();\r\n      const numeroFactura = this.facturaForm.get('numeroFactura')?.value || 'factura';\r\n      const nombreArchivo = `factura_${numeroFactura}.pdf`;\r\n\r\n      // Usar el nuevo método nativo en lugar del básico\r\n      this.pdfService.generarPdfNativo(datosFactura, nombreArchivo);\r\n      \r\n      console.log('✅ PDF desde datos generado exitosamente');\r\n    } catch (error) {\r\n      console.error('❌ Error al generar PDF desde datos:', error);\r\n    }\r\n  }\r\n}\r\n", "<div class=\"factura-container\">\r\n  <!-- Loading State para edición -->\r\n  <div *ngIf=\"loading && isEditing\" class=\"loading-state\">\r\n    <div class=\"loading-spinner\">\r\n      <ion-icon name=\"refresh-outline\" class=\"spinning\"></ion-icon>\r\n      <p>Cargando factura para editar...</p>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"factura-formulario\" *ngIf=\"!loading || !isEditing\">\r\n    <h2>{{ isEditing ? 'Editar Factura' : 'Crear Factura' }}</h2>\r\n    <form [formGroup]=\"facturaForm\">\r\n      <div class=\"grid-datos\">\r\n        <div class=\"form-group\">\r\n          <label>Número Factura</label>\r\n          <input type=\"text\" formControlName=\"numeroFactura\" placeholder=\"#876370A\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>Fecha de emisión</label>\r\n          <input type=\"date\" formControlName=\"fecha\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>Nombre</label>\r\n          <input type=\"text\" formControlName=\"nombre\" placeholder=\"Ejemplo\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>Dirección</label>\r\n          <input type=\"text\" formControlName=\"direccion\" placeholder=\"Calle\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>CIF</label>\r\n          <input type=\"text\" formControlName=\"cif\" placeholder=\"12345678A\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>Correo electrónico</label>\r\n          <input type=\"email\" formControlName=\"email\" placeholder=\"ejemplo@gmail.com\" />\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Repuestos -->\r\n      <section class=\"tabla-section\">\r\n        <div class=\"tabla-header\">\r\n          <span>Repuestos Utilizados</span>\r\n          <button type=\"button\" class=\"icon-btn add-btn\" (click)=\"agregarRepuesto()\"><span>+</span></button>\r\n        </div>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Nombre</th>\r\n              <th>Cantidad</th>\r\n              <th>Neto</th>\r\n              <th>PVP</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let repuesto of repuestos; let i = index\">\r\n              <td>\r\n                <input type=\"text\" [(ngModel)]=\"repuesto.nombre\" [ngModelOptions]=\"{standalone: true}\" placeholder=\"Nombre del repuesto\" class=\"table-input\">\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" [(ngModel)]=\"repuesto.cantidad\" [ngModelOptions]=\"{standalone: true}\" min=\"0\" step=\"0.01\" class=\"table-input\">\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" [(ngModel)]=\"repuesto.precio_neto\" [ngModelOptions]=\"{standalone: true}\" min=\"0\" step=\"0.01\" class=\"table-input\" placeholder=\"0.00\">\r\n              </td>\r\n              <td class=\"success\">\r\n                <input type=\"number\" [(ngModel)]=\"repuesto.precio_pvp\" [ngModelOptions]=\"{standalone: true}\" min=\"0\" step=\"0.01\" class=\"table-input\" placeholder=\"0.00\">\r\n              </td>\r\n              <td class=\"trash-btn\">\r\n                <button type=\"button\" class=\"icon-btn danger\" (click)=\"eliminarRepuesto(i)\">\r\n                  <ion-icon name=\"trash\"></ion-icon>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            <tr *ngIf=\"repuestos.length === 0\" class=\"empty-row\">\r\n              <td colspan=\"5\" class=\"text-center\">No hay repuestos añadidos</td>\r\n            </tr>\r\n            <tr class=\"total-row\" *ngIf=\"repuestos.length > 0\">\r\n              <td colspan=\"2\">Total</td>\r\n              <td>{{ totalRepuestosNeto | currency:'EUR':'symbol':'1.2-2' }}</td>\r\n              <td class=\"success\">{{ totalRepuestosPvp | currency:'EUR':'symbol':'1.2-2' }}</td>\r\n              <td></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n\r\n      <!-- Mano de obra -->\r\n      <section class=\"tabla-section\">\r\n        <div class=\"tabla-header\">\r\n          <span>Mano de Obra</span>\r\n          <button type=\"button\" class=\"icon-btn add-btn\" (click)=\"agregarManoObra()\"><span>+</span></button>\r\n        </div>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Nombre</th>\r\n              <th>Cantidad</th>\r\n              <th>PVP</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let mano of manoObra; let i = index\">\r\n              <td>\r\n                <input type=\"text\" [(ngModel)]=\"mano.nombre\" [ngModelOptions]=\"{standalone: true}\" placeholder=\"Descripción del trabajo\" class=\"table-input\">\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" [(ngModel)]=\"mano.cantidad\" [ngModelOptions]=\"{standalone: true}\" min=\"0\" step=\"0.01\" class=\"table-input\" placeholder=\"Horas\">\r\n              </td>\r\n              <td class=\"success\">\r\n                <input type=\"number\" [(ngModel)]=\"mano.precio_pvp\" [ngModelOptions]=\"{standalone: true}\" min=\"0\" step=\"0.01\" class=\"table-input\" placeholder=\"0.00\">\r\n              </td>\r\n              <td class=\"trash-btn\">\r\n                <button type=\"button\" class=\"icon-btn danger\" (click)=\"eliminarManoObra(i)\">\r\n                  <ion-icon name=\"trash\"></ion-icon>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            <tr *ngIf=\"manoObra.length === 0\" class=\"empty-row\">\r\n              <td colspan=\"4\" class=\"text-center\">No hay mano de obra añadida</td>\r\n            </tr>\r\n            <tr class=\"total-row\" *ngIf=\"manoObra.length > 0\">\r\n              <td colspan=\"2\">Total</td>\r\n              <td class=\"success\">{{ totalManoObra | currency:'EUR':'symbol':'1.2-2' }}</td>\r\n              <td></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n\r\n      <!-- Desplazamiento -->\r\n      <section class=\"tabla-section\">\r\n        <div class=\"tabla-header\">\r\n          <span>Desplazamiento</span>\r\n          <button type=\"button\" class=\"icon-btn add-btn\" (click)=\"agregarDesplazamiento()\"><span>+</span></button>\r\n        </div>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Nombre</th>\r\n              <th>Cantidad</th>\r\n              <th>PVP</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let desplazamiento of desplazamientos; let i = index\">\r\n              <td>\r\n                <input type=\"text\" [(ngModel)]=\"desplazamiento.nombre\" [ngModelOptions]=\"{standalone: true}\" placeholder=\"Tipo de desplazamiento\" class=\"table-input\">\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" [(ngModel)]=\"desplazamiento.cantidad\" [ngModelOptions]=\"{standalone: true}\" min=\"0\" step=\"0.01\" class=\"table-input\" placeholder=\"Cantidad\">\r\n              </td>\r\n              <td class=\"success\">\r\n                <input type=\"number\" [(ngModel)]=\"desplazamiento.precio_pvp\" [ngModelOptions]=\"{standalone: true}\" min=\"0\" step=\"0.01\" class=\"table-input\" placeholder=\"0.00\">\r\n              </td>\r\n              <td class=\"trash-btn\">\r\n                <button type=\"button\" class=\"icon-btn danger\" (click)=\"eliminarDesplazamiento(i)\">\r\n                  <ion-icon name=\"trash\"></ion-icon>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            <tr *ngIf=\"desplazamientos.length === 0\" class=\"empty-row\">\r\n              <td colspan=\"4\" class=\"text-center\">No hay desplazamientos añadidos</td>\r\n            </tr>\r\n            <tr class=\"total-row\" *ngIf=\"desplazamientos.length > 0\">\r\n              <td colspan=\"2\">Total</td>\r\n              <td class=\"success\">{{ totalDesplazamiento | currency:'EUR':'symbol':'1.2-2' }}</td>\r\n              <td></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n\r\n      <section class=\"tabla-section\">\r\n        <div class=\"tabla-header\" style=\"margin-bottom: 20px;\">\r\n          <span>Detalles descripción</span>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <textarea formControlName=\"notas\" placeholder=\"Notas\"></textarea>\r\n        </div>\r\n      </section>\r\n\r\n      <div class=\"botones-footer\">\r\n        <button type=\"button\" class=\"btn-outline\" (click)=\"enviarFactura()\" [disabled]=\"loading || !facturaForm.valid\">\r\n          {{ loading ? 'Enviando...' : (isEditing ? 'Actualizar factura' : 'Enviar factura') }}\r\n        </button>\r\n        <button type=\"button\" class=\"btn-primary\" (click)=\"generarFactura()\" [disabled]=\"loading || !facturaForm.valid\">\r\n          {{ loading ? 'Generando...' : (isEditing ? 'Guardar cambios' : 'Generar factura') }}\r\n        </button>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n\r\n  <!-- Vista previa -->\r\n  <div class=\"factura-preview\" [class.active]=\"mostrarVistaPrevia\">\r\n    <div class=\"header-container\">\r\n      <h2>Vista previa</h2>\r\n      <div class=\"actions-preview\">\r\n        <button type=\"button\" class=\"btn-outline\" (click)=\"descargarFactura()\">\r\n          <ion-icon name=\"download\"></ion-icon>\r\n          <span class=\"button-text\">Descargar</span>\r\n        </button>\r\n        <button type=\"button\" class=\"btn-primary\" (click)=\"imprimirFactura()\">\r\n          <ion-icon name=\"print\"></ion-icon>\r\n          <span class=\"button-text\">Imprimir</span>\r\n        </button>\r\n      </div>  \r\n    </div>\r\n    <div class=\"preview-header\">\r\n      <div class=\"logo-box\">\r\n        <img src=\"assets/icon/favicon.png\" alt=\"Logo\" />\r\n      </div>\r\n      <div class=\"empresa-datos\">\r\n        <div>\r\n          <span class=\"empresa-nombre\">Datos de empresa</span>\r\n          <span>Nombre de empresa</span>\r\n          <address>Dirección de empresa</address>\r\n          <span>Ciudad de empresa</span>\r\n          <span>CIF de empresa</span>\r\n          <span style=\"margin-top: 20px;\">ejemplodominio.es</span>\r\n          <span>+34 123 45 56 65</span>\r\n        </div>\r\n        <div class=\"factura-info\">\r\n          <label class=\"factura-label\">Factura</label>\r\n          <label style=\"color: #111827; font-weight: 500;\">Nº FACTURA</label>\r\n          <label>{{ facturaForm.get('numeroFactura')?.value || 'N/A' }}</label>\r\n          <label style=\"color: #111827; font-weight: 500;\">FECHA DE EMISIÓN</label>\r\n          <label>{{ facturaForm.get('fecha')?.value ? (facturaForm.get('fecha')?.value | date:'longDate':'':'es') : 'N/A' }}</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"preview-tabla\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Repuestos utilizados</th>\r\n            <th>CANTIDAD</th>\r\n            <th>NETO</th>\r\n            <th>PVP</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let repuesto of repuestos\">\r\n            <td>{{ repuesto.nombre || 'Sin nombre' }}</td>\r\n            <td>{{ repuesto.cantidad || 0 }}</td>\r\n            <td>{{ repuesto.precio_neto || 0 | currency:'EUR':'symbol':'1.2-2' }}</td>\r\n            <td>{{ repuesto.precio_pvp || 0 | currency:'EUR':'symbol':'1.2-2' }}</td>\r\n          </tr>\r\n          <tr *ngIf=\"repuestos.length === 0\">\r\n            <td colspan=\"4\" class=\"text-center\">No hay repuestos</td>\r\n          </tr>\r\n          <tr class=\"total-row\" *ngIf=\"repuestos.length > 0\">\r\n            <td><b>TOTAL</b></td>\r\n            <td></td>\r\n            <td class=\"success\">{{ totalRepuestosNeto | currency:'EUR':'symbol':'1.2-2' }}</td>\r\n            <td class=\"success\">{{ totalRepuestosPvp | currency:'EUR':'symbol':'1.2-2' }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <div class=\"preview-tabla\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Mano de obra/Kilometraje</th>\r\n            <th>CANTIDAD</th>\r\n            <th>PVP</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let mano of manoObra\">\r\n            <td>{{ mano.nombre || 'Sin descripción' }}</td>\r\n            <td>{{ mano.cantidad || 0 }}h</td>\r\n            <td>{{ mano.precio_pvp || 0 | currency:'EUR':'symbol':'1.2-2' }}</td>\r\n          </tr>\r\n          <tr *ngFor=\"let desplazamiento of desplazamientos\">\r\n            <td>{{ desplazamiento.nombre || 'Sin descripción' }}</td>\r\n            <td>{{ desplazamiento.cantidad || 0 }}</td>\r\n            <td>{{ desplazamiento.precio_pvp || 0 | currency:'EUR':'symbol':'1.2-2' }}</td>\r\n          </tr>\r\n          <tr *ngIf=\"manoObra.length === 0 && desplazamientos.length === 0\">\r\n            <td colspan=\"3\" class=\"text-center\">No hay mano de obra ni desplazamientos</td>\r\n          </tr>\r\n          <tr class=\"total-row\" *ngIf=\"manoObra.length > 0 || desplazamientos.length > 0\">\r\n            <td colspan=\"2\"><b>TOTAL</b></td>\r\n            <td class=\"success\">{{ totalManoObra + totalDesplazamiento | currency:'EUR':'symbol':'1.2-2' }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <div class=\"preview-totales-box\">\r\n      <div class=\"totales-row\">\r\n        <span>Subtotal</span>\r\n        <span>{{ subtotal | currency:'EUR':'symbol':'1.2-2' }}</span>\r\n      </div>\r\n      <div class=\"totales-row\">\r\n        <span>IVA (21%)</span>\r\n        <span>{{ iva | currency:'EUR':'symbol':'1.2-2' }}</span>\r\n      </div>\r\n      <div class=\"totales-row total-final\">\r\n        <span>TOTAL</span>\r\n        <span>{{ total | currency:'EUR':'symbol':'1.2-2' }}</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"preview-notas\">\r\n      <b>Notas</b>\r\n      <div class=\"notas-texto\">\r\n        {{ facturaForm.get('notas')?.value || 'Sin notas adicionales' }}\r\n      </div>\r\n    </div>\r\n    <div class=\"preview-footer\">\r\n      <span>Nombre de empresa</span>\r\n      <span>+34 698 12 12 12</span>\r\n      <span>ejemploemail.com</span>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Botón flotante para alternar vista en móvil -->\r\n  <button class=\"toggle-preview-btn\" (click)=\"toggleVistaPrevia()\">\r\n    <ion-icon [name]=\"mostrarVistaPrevia ? 'create-outline' : 'eye-outline'\"></ion-icon>\r\n  </button>\r\n</div>"],
  "mappings": "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",
  "names": []
}
