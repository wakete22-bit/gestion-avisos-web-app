{
  "version": 3,
  "sources": ["src/app/modules/inventario/components/crear-producto-modal/crear-producto-modal.component.ts", "src/app/modules/inventario/components/crear-producto-modal/crear-producto-modal.component.html", "src/app/modules/inventario/pages/inventario/inventario.component.ts", "src/app/modules/inventario/pages/inventario/inventario.component.html"],
  "sourcesContent": ["import { Component, OnInit, AfterViewInit, ElementRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule, ModalController } from '@ionic/angular';\nimport { CommonModule } from '@angular/common';\nimport { addIcons } from 'ionicons';\nimport { closeOutline } from 'ionicons/icons';\nimport { ViewportService } from 'src/app/core/services/viewport.service';\nimport { InventarioService } from '../../services/inventario.service';\n\n@Component({\n  selector: 'app-crear-producto-modal',\n  templateUrl: './crear-producto-modal.component.html',\n  styleUrls: ['./crear-producto-modal.component.scss'],\n  standalone: true,\n  imports: [IonicModule, CommonModule, ReactiveFormsModule]\n})\nexport class CrearProductoModalComponent implements OnInit, AfterViewInit {\n  productoForm: FormGroup;\n  codigoGenerado: string = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private modalController: ModalController,\n    private viewportService: ViewportService,\n    private elementRef: ElementRef,\n    private inventarioService: InventarioService\n  ) {\n    this.productoForm = this.fb.group({\n      codigo: [{ value: '', disabled: true }],\n      nombre: ['', Validators.required],\n      descripcion: ['', Validators.maxLength(200)],\n      stock: ['', [Validators.required, Validators.min(0)]],\n      unidad: ['', Validators.required],\n      precioNeto: ['', [Validators.required, Validators.min(0)]],\n      pvp: ['', [Validators.required, Validators.min(0)]]\n    });\n  }\n\n  ngOnInit() {\n    addIcons({ closeOutline });\n    this.generarCodigo();\n  }\n\n  ngAfterViewInit() {\n    // Aplicar safe areas al modal después de que se renderice\n    setTimeout(() => {\n      const modalContainer = this.elementRef.nativeElement.querySelector('.modal-container');\n      if (modalContainer) {\n        this.viewportService.applySafeAreaToModal(modalContainer);\n      }\n    }, 100);\n  }\n\n  private generarCodigo() {\n    this.codigoGenerado = this.inventarioService.generarCodigoProducto();\n    this.productoForm.patchValue({ codigo: this.codigoGenerado });\n  }\n\n  async guardarProducto() {\n    if (this.productoForm.valid) {\n      const formData = this.productoForm.getRawValue();\n      \n      // Validar que el PVP sea mayor o igual al precio neto\n      if (formData.pvp < formData.precioNeto) {\n        // Mostrar error o ajustar automáticamente\n        formData.pvp = formData.precioNeto;\n      }\n\n      await this.modalController.dismiss(formData, 'confirm');\n    }\n  }\n\n  async cerrarModal() {\n    await this.modalController.dismiss(null, 'cancel');\n  }\n\n  // Método para recalcular PVP automáticamente si se desea\n  recalcularPVP() {\n    const precioNeto = this.productoForm.get('precioNeto')?.value;\n    if (precioNeto && precioNeto > 0) {\n      // Aplicar IVA del 21% como ejemplo\n      const pvp = precioNeto * 1.21;\n      this.productoForm.patchValue({ pvp: Math.round(pvp * 100) / 100 });\n    }\n  }\n}\n", "<div class=\"modal-container\">\r\n  <header class=\"modal-header\">\r\n    <div class=\"header-content\">\r\n      <h2>Añadir producto</h2>\r\n      <button class=\"close-button\" (click)=\"cerrarModal()\">\r\n        <ion-icon name=\"close-outline\"></ion-icon>\r\n      </button>\r\n    </div>\r\n    <p class=\"subtitle\">Añade un nuevo producto a tu inventario</p>\r\n  </header>\r\n\r\n  <div class=\"modal-content\">\r\n    <form [formGroup]=\"productoForm\" (ngSubmit)=\"guardarProducto()\">\r\n      <div class=\"form-section\">\r\n        <div class=\"form-group\">\r\n          <label>Código</label>\r\n          <input type=\"text\" formControlName=\"codigo\" class=\"form-control\" [placeholder]=\"codigoGenerado || 'Generando código...'\">\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label>Nombre</label>\r\n          <input type=\"text\" formControlName=\"nombre\" class=\"form-control\" placeholder=\"Nombre del repuesto o material\">\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label>Descripción</label>\r\n          <textarea formControlName=\"descripcion\" class=\"form-control\" placeholder=\"Descripción más detallada del artículo\" maxlength=\"200\"></textarea>\r\n          <div class=\"character-count\">{{productoForm.get('descripcion')?.value?.length || 0}}/200</div>\r\n        </div>\r\n\r\n        <div class=\"form-row\">\r\n          <div class=\"form-group half\">\r\n            <label>Stock</label>\r\n            <select formControlName=\"stock\" class=\"form-control\">\r\n              <option value=\"\">Cantidad disponible</option>\r\n              <option *ngFor=\"let n of [1,2,3,4,5,10,20,50,100]\" [value]=\"n\">{{n}}</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"form-group half\">\r\n            <label>Unidad</label>\r\n            <select formControlName=\"unidad\" class=\"form-control\">\r\n              <option value=\"\">Ej: kg, m, cm, unidad..</option>\r\n              <option value=\"kg\">kg</option>\r\n              <option value=\"m\">m</option>\r\n              <option value=\"cm\">cm</option>\r\n              <option value=\"unidad\">unidad</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-row\">\r\n          <div class=\"form-group half\">\r\n            <label>Precio Neto (€)</label>\r\n            <div class=\"input-currency\">\r\n              <input type=\"number\" formControlName=\"precioNeto\" class=\"form-control\" placeholder=\"Precio artículo sin IVA\">\r\n              <span class=\"currency\">€</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group half\">\r\n            <label>PVP (€)</label>\r\n            <div class=\"input-currency\">\r\n              <input type=\"number\" formControlName=\"pvp\" class=\"form-control\" placeholder=\"Precio de venta al público\">\r\n              <span class=\"currency\">€</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n\r\n  <footer class=\"modal-footer\">\r\n    <div class=\"button-group\">\r\n      <button type=\"button\" class=\"btn btn-outline\" (click)=\"cerrarModal()\">\r\n        Cancelar\r\n      </button>\r\n      <button \r\n        type=\"button\" \r\n        class=\"btn btn-primary\" \r\n        (click)=\"guardarProducto()\"\r\n        [disabled]=\"!productoForm.valid\">\r\n        Guardar producto\r\n      </button>\r\n    </div>\r\n  </footer>\r\n</div>\r\n", "import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTableModule } from '@angular/material/table';\nimport { CommonModule } from '@angular/common';\nimport { IonContent, IonIcon, ModalController, AlertController, ToastController } from '@ionic/angular/standalone';\nimport { addIcons } from 'ionicons';\nimport { alertCircle, close, eyeOutline, mapOutline, add, addCircle, addCircleOutline, receipt, hourglassOutline, warning, document, appsOutline, cubeOutline, alertCircleOutline, checkmarkCircleOutline, searchOutline, trashOutline, createOutline, refreshOutline, chevronBackOutline, chevronForwardOutline } from 'ionicons/icons';\nimport { CrearProductoModalComponent } from '../../components/crear-producto-modal/crear-producto-modal.component';\nimport { InventarioService } from '../../services/inventario.service';\nimport { Inventario } from '../../models/inventario.model';\nimport { Subject, takeUntil, debounceTime, distinctUntilChanged } from 'rxjs';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-inventario',\n  templateUrl: './inventario.component.html',\n  styleUrls: ['./inventario.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    IonContent,\n    IonIcon,\n    MatTableModule,\n    MatIconModule,\n    ReactiveFormsModule\n  ],\n})\nexport class InventarioComponent implements OnInit, OnDestroy {\n  displayedColumns: string[] = ['codigo', 'nombre', 'descripcion', 'cantidad', 'unidad', 'enStock', 'precioNeto', 'pvp'];\n  productos: Inventario[] = [];\n  productosFiltrados: Inventario[] = [];\n  loading = true; // Cambiar a true para mostrar carga inicial\n  error: string | null = null;\n  totalProductos = 0;\n  paginaActual = 1;\n  porPagina = 10;\n  busqueda = '';\n  ordenarPor = 'fecha_creacion';\n  orden: 'asc' | 'desc' = 'desc';\n  searchControl = new FormControl('');\n  private destroy$ = new Subject<void>();\n\n  // Hacer Math disponible en el template\n  Math = Math;\n\n  constructor(\n    private modalController: ModalController,\n    private inventarioService: InventarioService,\n    private alertController: AlertController,\n    private toastController: ToastController\n  ) { \n    addIcons({\n      appsOutline, cubeOutline, alertCircleOutline, checkmarkCircleOutline, searchOutline, \n      addCircle, eyeOutline, addCircleOutline, receipt, hourglassOutline, warning, \n      document, alertCircle, close, trashOutline, createOutline, refreshOutline,\n      chevronBackOutline, chevronForwardOutline\n    });\n  }\n\n  ngOnInit() {\n    this.cargarInventario();\n    this.configurarBusqueda();\n    this.suscribirseAInventario();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private cargarInventario() {\n    this.loading = true;\n    this.error = null;\n\n    this.inventarioService.getInventario(\n      this.paginaActual,\n      this.porPagina,\n      this.busqueda,\n      this.ordenarPor,\n      this.orden\n    ).pipe(takeUntil(this.destroy$))\n    .subscribe({\n      next: (response) => {\n        this.productos = response.inventario;\n        this.productosFiltrados = response.inventario;\n        this.totalProductos = response.total;\n        this.loading = false;\n      },\n      error: (error) => {\n        console.error('Error al cargar inventario:', error);\n        this.error = 'Error al cargar el inventario. Por favor, inténtalo de nuevo.';\n        this.loading = false;\n      }\n    });\n  }\n\n  private suscribirseAInventario() {\n    this.inventarioService.inventario$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(productos => {\n        this.productos = productos;\n        this.productosFiltrados = productos;\n      });\n  }\n\n  private configurarBusqueda() {\n    this.searchControl.valueChanges\n      .pipe(\n        takeUntil(this.destroy$),\n        debounceTime(300),\n        distinctUntilChanged()\n      )\n      .subscribe(termino => {\n        this.busqueda = termino || '';\n        this.paginaActual = 1; // Resetear a la primera página\n        this.cargarInventario();\n      });\n  }\n\n  /**\n   * Refresca la lista de productos\n   */\n  refrescarInventario() {\n    this.cargarInventario();\n  }\n\n  /**\n   * Cambia a la página especificada\n   */\n  cambiarPagina(pagina: number) {\n    if (pagina >= 1 && pagina <= this.obtenerTotalPaginas()) {\n      this.paginaActual = pagina;\n      this.cargarInventario();\n    }\n  }\n\n  /**\n   * Calcula el total de páginas\n   */\n  obtenerTotalPaginas(): number {\n    return Math.ceil(this.totalProductos / this.porPagina);\n  }\n\n  /**\n   * Obtiene el rango de páginas a mostrar\n   */\n  obtenerRangoPaginas(): number[] {\n    const totalPaginas = this.obtenerTotalPaginas();\n    const paginaActual = this.paginaActual;\n    const rango = 2; // Número de páginas a mostrar antes y después de la actual\n\n    let inicio = Math.max(1, paginaActual - rango);\n    let fin = Math.min(totalPaginas, paginaActual + rango);\n\n    // Ajustar para mostrar siempre 5 páginas si es posible\n    if (fin - inicio < 4) {\n      if (inicio === 1) {\n        fin = Math.min(totalPaginas, inicio + 4);\n      } else {\n        inicio = Math.max(1, fin - 4);\n      }\n    }\n\n    const paginas: number[] = [];\n    for (let i = inicio; i <= fin; i++) {\n      paginas.push(i);\n    }\n    return paginas;\n  }\n\n  /**\n   * Verifica si se puede ir a la página anterior\n   */\n  puedeAnterior(): boolean {\n    return this.paginaActual > 1;\n  }\n\n  /**\n   * Verifica si se puede ir a la página siguiente\n   */\n  puedeSiguiente(): boolean {\n    return this.paginaActual < this.obtenerTotalPaginas();\n  }\n\n  /**\n   * Va a la página anterior\n   */\n  paginaAnterior() {\n    if (this.puedeAnterior()) {\n      this.cambiarPagina(this.paginaActual - 1);\n    }\n  }\n\n  /**\n   * Va a la página siguiente\n   */\n  paginaSiguiente() {\n    if (this.puedeSiguiente()) {\n      this.cambiarPagina(this.paginaActual + 1);\n    }\n  }\n\n  /**\n   * Va a la primera página\n   */\n  primeraPagina() {\n    this.cambiarPagina(1);\n  }\n\n  /**\n   * Va a la última página\n   */\n  ultimaPagina() {\n    this.cambiarPagina(this.obtenerTotalPaginas());\n  }\n\n  async abrirModalCrearProducto() {\n    const modal = await this.modalController.create({\n      component: CrearProductoModalComponent,\n      cssClass: 'modal-crear-producto',\n      showBackdrop: true,\n      backdropDismiss: true\n    });\n    \n    await modal.present();\n    const { data, role } = await modal.onWillDismiss();\n    \n    if (role === 'confirm' && data) {\n      this.crearProducto(data);\n    }\n  }\n\n  private crearProducto(datosProducto: any) {\n    const producto = {\n      codigo: this.inventarioService.generarCodigoProducto(),\n      nombre: datosProducto.nombre,\n      descripcion: datosProducto.descripcion || '',\n      cantidad_disponible: datosProducto.stock,\n      unidad: datosProducto.unidad,\n      precio_neto: datosProducto.precioNeto,\n      pvp: datosProducto.pvp\n    };\n\n    this.loading = true;\n    this.error = null;\n\n    this.inventarioService.crearProducto(producto)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: () => {\n          this.mostrarToast('Producto creado exitosamente', 'success');\n          this.loading = false;\n          // Recargar la lista para mostrar el nuevo producto\n          this.cargarInventario();\n        },\n        error: (error) => {\n          console.error('Error al crear producto:', error);\n          this.error = 'Error al crear el producto. Por favor, inténtalo de nuevo.';\n          this.loading = false;\n          this.mostrarToast('Error al crear el producto', 'danger');\n        }\n      });\n  }\n\n  async verDetallesProducto(producto: Inventario) {\n    const alert = await this.alertController.create({\n      header: producto.nombre,\n      subHeader: `Código: ${producto.codigo}`,\n      message: `\n        <p><strong>Descripción:</strong> ${producto.descripcion || 'Sin descripción'}</p>\n        <p><strong>Cantidad:</strong> ${producto.cantidad_disponible} ${producto.unidad}</p>\n        <p><strong>Precio Neto:</strong> ${producto.precio_neto}€</p>\n        <p><strong>PVP:</strong> ${producto.pvp}€</p>\n        <p><strong>Fecha Creación:</strong> ${new Date(producto.fecha_creacion).toLocaleDateString()}</p>\n      `,\n      buttons: [\n        {\n          text: 'Editar',\n          handler: () => {\n            this.editarProducto(producto);\n          }\n        },\n        {\n          text: 'Eliminar',\n          role: 'destructive',\n          handler: () => {\n            this.confirmarEliminarProducto(producto);\n          }\n        },\n        {\n          text: 'Cerrar',\n          role: 'cancel'\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  private editarProducto(producto: Inventario) {\n    // TODO: Implementar modal de edición\n    console.log('Editar producto:', producto);\n  }\n\n  async confirmarEliminarProducto(producto: Inventario) {\n    const alert = await this.alertController.create({\n      header: 'Confirmar eliminación',\n      message: `¿Estás seguro de que quieres eliminar el producto \"${producto.nombre}\"?`,\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel'\n        },\n        {\n          text: 'Eliminar',\n          role: 'destructive',\n          handler: () => {\n            this.eliminarProducto(producto.id);\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  private eliminarProducto(id: string) {\n    this.loading = true;\n    this.error = null;\n\n    this.inventarioService.eliminarProducto(id)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: () => {\n          this.mostrarToast('Producto eliminado exitosamente', 'success');\n          this.loading = false;\n          // Recargar la lista para actualizar la vista\n          this.cargarInventario();\n        },\n        error: (error) => {\n          console.error('Error al eliminar producto:', error);\n          this.error = 'Error al eliminar el producto. Por favor, inténtalo de nuevo.';\n          this.loading = false;\n          this.mostrarToast('Error al eliminar el producto', 'danger');\n        }\n      });\n  }\n\n  private async mostrarToast(mensaje: string, color: string) {\n    const toast = await this.toastController.create({\n      message: mensaje,\n      duration: 2000,\n      color: color,\n      position: 'top'\n    });\n    await toast.present();\n  }\n\n  // Métodos auxiliares para el template\n  getEnStock(cantidad: number): boolean {\n    return cantidad > 0;\n  }\n\n  getPrecioNetoFormateado(precio: number): string {\n    return `${precio.toFixed(2)}€`;\n  }\n\n  getPvpFormateado(pvp: number): string {\n    return `${pvp.toFixed(2)}€`;\n  }\n}\n", "<!-- <ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>\n      Blank\n    </ion-title>\n  </ion-toolbar>\n</ion-header> -->\n\n\n<ion-content>\n  <!-- Loading State -->\n  <div *ngIf=\"loading\" class=\"loading-state\">\n    <div class=\"loading-spinner\">\n      <ion-icon name=\"refresh-outline\" class=\"spinning\"></ion-icon>\n      <p>Cargando productos...</p>\n    </div>\n  </div>\n\n  <!-- Error State -->\n  <div *ngIf=\"error && !loading\" class=\"error-state\">\n    <div class=\"error-message\">\n      <ion-icon name=\"alert-circle-outline\"></ion-icon>\n      <p>{{ error }}</p>\n      <button class=\"btn-retry\" (click)=\"refrescarInventario()\">\n        <ion-icon name=\"refresh-outline\"></ion-icon>\n        Reintentar\n      </button>\n    </div>\n  </div>\n\n  <!-- Contenido principal -->\n  <section *ngIf=\"!loading && !error\" class=\"dashboard-table\">\n    <!-- Header Section -->\n    <div class=\"table-header\">\n      <div class=\"table-header-left\">\n        <div class=\"table-title\">Tabla de inventario</div>\n        <div class=\"table-meta\">Productos: {{ totalProductos }}</div>\n      </div>\n      \n      <!-- Mobile Search Bar -->\n      <div class=\"mobile-search\">\n        <input type=\"text\" placeholder=\"Buscar producto...\" [formControl]=\"searchControl\" />\n        <ion-icon name=\"search-outline\"></ion-icon>\n      </div>\n\n      <!-- Desktop Search and Actions -->\n      <div class=\"table-search desktop-only\">\n        <input type=\"text\" placeholder=\"Buscar...\" [formControl]=\"searchControl\" />\n        <select>\n          <option>Ordenar por: Recientes</option>\n        </select>\n        <div class=\"header-actions\">\n          <button class=\"btn-refresh\" (click)=\"refrescarInventario()\" title=\"Refrescar\">\n            <ion-icon name=\"refresh-outline\"></ion-icon>\n          </button>\n          <button class=\"btn-add\" (click)=\"abrirModalCrearProducto()\">\n            <ion-icon name=\"add-circle\"></ion-icon>\n            Añadir producto\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Mobile Actions -->\n    <div class=\"mobile-actions\">\n      <select class=\"mobile-filter\">\n        <option>Ordenar: Recientes</option>\n        <option>Ordenar: Antiguos</option>\n        <option>Ordenar: Stock</option>\n      </select>\n      <div class=\"mobile-buttons\">\n        <button class=\"btn-refresh\" (click)=\"refrescarInventario()\" title=\"Refrescar\">\n          <ion-icon name=\"refresh-outline\"></ion-icon>\n        </button>\n        <button class=\"btn-add\" (click)=\"abrirModalCrearProducto()\">\n          <ion-icon name=\"add-circle\"></ion-icon>\n        </button>\n      </div>\n    </div>\n\n      <!-- Compact Table View (grid, igual que avisos) -->\n      <div *ngIf=\"!loading && !error && productosFiltrados.length > 0\" class=\"compact-inventario-table\">\n        <div class=\"inventario-table\">\n          <div class=\"table-header\">\n            <div class=\"header-row\">\n              <div class=\"header-cell\">Código</div>\n              <div class=\"header-cell\">Nombre</div>\n              <div class=\"header-cell\">Descripción</div>\n              <div class=\"header-cell\">Cantidad</div>\n              <div class=\"header-cell\">Unidad</div>\n              <div class=\"header-cell\">Stock</div>\n              <div class=\"header-cell\">Precio Neto</div>\n              <div class=\"header-cell\">PVP</div>\n              <div class=\"header-cell\">Acciones</div>\n            </div>\n          </div>\n          <div class=\"table-body\">\n            <div *ngFor=\"let producto of productosFiltrados\"\n                 class=\"aviso-row\"\n                 [ngClass]=\"{ 'no-visitado': !getEnStock(producto.cantidad_disponible), 'completado': getEnStock(producto.cantidad_disponible) }\">\n              <div class=\"aviso-cell numero-aviso\">{{ producto.codigo }}</div>\n              <div class=\"aviso-cell nombre-cliente\">{{ producto.nombre }}</div>\n              <div class=\"aviso-cell detalle-servicio\">\n                <div class=\"detalle-texto\" [title]=\"producto.descripcion\">{{ producto.descripcion || 'Sin descripción' }}</div>\n              </div>\n              <div class=\"aviso-cell cantidad-aviso\">{{ producto.cantidad_disponible }}</div>\n              <div class=\"aviso-cell unidad-aviso\">{{ producto.unidad }}</div>\n              <div class=\"aviso-cell estado-aviso\">\n                <span class=\"badge\" [ngClass]=\"{ 'yellow': getEnStock(producto.cantidad_disponible), 'red': !getEnStock(producto.cantidad_disponible) }\">\n                  {{ getEnStock(producto.cantidad_disponible) ? 'En Stock' : 'Sin Stock' }}\n                </span>\n              </div>\n              <div class=\"aviso-cell precio-neto-aviso\">{{ getPrecioNetoFormateado(producto.precio_neto) }}</div>\n              <div class=\"aviso-cell pvp-aviso\">{{ getPvpFormateado(producto.pvp) }}</div>\n              <div class=\"aviso-cell acciones\">\n                <button class=\"btn-ver\" title=\"Ver detalles\" (click)=\"verDetallesProducto(producto)\">\n                  <ion-icon name=\"eye-outline\"></ion-icon>\n                </button>\n                <button class=\"btn-editar\" title=\"Editar producto\">\n                  <ion-icon name=\"create-outline\"></ion-icon>\n                </button>\n                <button class=\"btn-eliminar\" title=\"Eliminar producto\" (click)=\"confirmarEliminarProducto(producto)\">\n                  <ion-icon name=\"trash-outline\"></ion-icon>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Estado de datos vacíos -->\n      <div *ngIf=\"productosFiltrados.length === 0 && !loading && !error\" class=\"no-data-container\">\n        <div class=\"no-data-message\">\n          <ion-icon name=\"cube-outline\"></ion-icon>\n          <h3>No hay productos</h3>\n          <p>Aún no se han creado productos en el inventario. Crea el primero para comenzar.</p>\n          <button class=\"btn-create\" (click)=\"abrirModalCrearProducto()\">\n            <ion-icon name=\"add-circle\"></ion-icon>\n            Crear producto\n          </button>\n        </div>\n      </div>\n\n      <!-- Pagination -->\n      <div *ngIf=\"productosFiltrados.length > 0 && totalProductos > 0 && !loading && !error\" class=\"table-pagination\">\n        <span class=\"pagination-info\">\n          Mostrando datos {{ ((paginaActual - 1) * porPagina) + 1 }} a {{ Math.min(paginaActual * porPagina, totalProductos) }} de {{ totalProductos }} productos\n        </span>\n        <div class=\"pagination\">\n          <!-- Botón Primera Página -->\n          <button \n            class=\"pagination-btn\" \n            [disabled]=\"!puedeAnterior()\"\n            (click)=\"primeraPagina()\"\n            title=\"Primera página\">\n            <ion-icon name=\"chevron-back-outline\"></ion-icon>\n            <ion-icon name=\"chevron-back-outline\"></ion-icon>\n          </button>\n\n          <!-- Botón Página Anterior -->\n          <button \n            class=\"pagination-btn\" \n            [disabled]=\"!puedeAnterior()\"\n            (click)=\"paginaAnterior()\"\n            title=\"Página anterior\">\n            <ion-icon name=\"chevron-back-outline\"></ion-icon>\n          </button>\n\n          <!-- Páginas -->\n          <ng-container *ngFor=\"let pagina of obtenerRangoPaginas()\">\n            <button \n              class=\"pagination-btn\" \n              [class.active]=\"pagina === paginaActual\"\n              (click)=\"cambiarPagina(pagina)\">\n              {{ pagina }}\n            </button>\n          </ng-container>\n\n          <!-- Botón Página Siguiente -->\n          <button \n            class=\"pagination-btn\" \n            [disabled]=\"!puedeSiguiente()\"\n            (click)=\"paginaSiguiente()\"\n            title=\"Página siguiente\">\n            <ion-icon name=\"chevron-forward-outline\"></ion-icon>\n          </button>\n\n          <!-- Botón Última Página -->\n          <button \n            class=\"pagination-btn\" \n            [disabled]=\"!puedeSiguiente()\"\n            (click)=\"ultimaPagina()\"\n            title=\"Última página\">\n            <ion-icon name=\"chevron-forward-outline\"></ion-icon>\n            <ion-icon name=\"chevron-forward-outline\"></ion-icon>\n          </button>\n        </div>\n      </div>\n    </section>\n</ion-content>"],
  "mappings": "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",
  "names": ["ModalController", "IonIcon", "_c0"]
}
