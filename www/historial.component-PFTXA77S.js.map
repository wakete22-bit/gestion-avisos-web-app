{
  "version": 3,
  "sources": ["src/app/modules/historial/pages/historial/historial.component.ts", "src/app/modules/historial/pages/historial/historial.component.html"],
  "sourcesContent": ["import { Component, OnInit, OnDestroy, AfterViewInit, ChangeDetectorRef } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IonContent, IonIcon } from '@ionic/angular/standalone';\r\nimport { addIcons } from 'ionicons';\r\nimport { \r\n  alertCircle, \r\n  close, \r\n  eyeOutline, \r\n  mapOutline, \r\n  add, \r\n  addCircle, \r\n  addCircleOutline,\r\n  searchOutline,\r\n  locationOutline,\r\n  calendarOutline,\r\n  refreshOutline, alertCircleOutline, chevronBackOutline, chevronForwardOutline, timeOutline } from 'ionicons/icons';\r\nimport { Aviso } from 'src/app/modules/avisos/models/aviso.model';\r\nimport { AvisosService } from '../../../../core/services/avisos.service';\r\nimport { NavigationService } from '../../../../core/services/navigation.service';\r\nimport { Subject, takeUntil, take } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-historial',\r\n  templateUrl: './historial.component.html',\r\n  styleUrls: ['./historial.component.scss'],\r\n  standalone: true, \r\n  imports: [\r\n    CommonModule,\r\n    IonContent,\r\n    IonIcon,\r\n    MatTableModule,\r\n    MatIconModule\r\n  ],\r\n})\r\nexport class HistorialComponent implements OnInit, OnDestroy, AfterViewInit {\r\n\r\n  displayedColumns: string[] = ['id', 'estado', 'nombre_cliente_aviso', 'descripcion_problema', 'fecha_creacion', 'es_urgente', 'direccion', 'acciones'];\r\n  avisos: Aviso[] = [];\r\n  loading = true; // Cambiar a true para mostrar carga inicial\r\n  error: string | null = null;\r\n  totalAvisos = 0;\r\n  paginaActual = 1;\r\n  porPagina = 10;\r\n  busqueda = '';\r\n  ordenarPor = 'fecha_creacion';\r\n  orden: 'asc' | 'desc' = 'desc';\r\n  \r\n  private destroy$ = new Subject<void>();\r\n  private dataLoaded = false;\r\n  \r\n  // Hacer Math disponible en el template\r\n  Math = Math;\r\n\r\n  constructor(\r\n    private avisosService: AvisosService,\r\n    private router: Router,\r\n    private cdr: ChangeDetectorRef,\r\n    private navigationService: NavigationService\r\n  ) { \r\n    addIcons({searchOutline,eyeOutline,refreshOutline,alertCircleOutline,alertCircle,close,timeOutline,chevronBackOutline,chevronForwardOutline,mapOutline,addCircle,add,addCircleOutline,locationOutline,calendarOutline});\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Solo marcar que el componente est√° inicializado\r\n    console.log('üîÑ HistorialComponent inicializado');\r\n    \r\n    // Suscribirse a cambios de navegaci√≥n\r\n    this.navigationService.getCurrentRoute()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(route => {\r\n        if (route.includes('/historial') && !this.dataLoaded) {\r\n          console.log('üß≠ Ruta de historial detectada, preparando carga...');\r\n          // Peque√±o delay para asegurar que el DOM est√© listo\r\n          setTimeout(() => {\r\n            if (!this.dataLoaded && !this.destroy$.closed) {\r\n              this.cargarHistorial();\r\n            }\r\n          }, 200);\r\n        }\r\n      });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // Cargar datos despu√©s de que el DOM est√© completamente renderizado\r\n    console.log('üì± DOM renderizado, cargando historial...');\r\n    \r\n    // Esperar un poco m√°s para asegurar que todo est√© listo\r\n    setTimeout(() => {\r\n      if (!this.dataLoaded && !this.destroy$.closed) {\r\n        this.cargarHistorial();\r\n      }\r\n    }, 300);\r\n    \r\n    // Forzar detecci√≥n de cambios para asegurar que la UI se actualice\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    console.log('üßπ Componente HistorialComponent destruido');\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  /**\r\n   * Carga el historial de avisos completados\r\n   */\r\n  cargarHistorial() {\r\n    if (this.dataLoaded && this.avisos.length > 0) {\r\n      console.log('üìä Datos ya cargados, saltando carga...');\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.error = null;\r\n    console.log('üîÑ Iniciando carga de historial...');\r\n\r\n    this.avisosService.getAvisosCompletados(\r\n      this.paginaActual,\r\n      this.porPagina,\r\n      this.busqueda,\r\n      this.ordenarPor,\r\n      this.orden\r\n    ).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe({\r\n      next: (response) => {\r\n        console.log('‚úÖ Historial cargado exitosamente:', response.avisos.length, 'avisos');\r\n        this.avisos = response.avisos;\r\n        this.totalAvisos = response.total;\r\n        this.loading = false;\r\n        this.dataLoaded = true;\r\n        \r\n        // Forzar detecci√≥n de cambios\r\n        this.cdr.detectChanges();\r\n      },\r\n      error: (error) => {\r\n        console.error('‚ùå Error al cargar historial:', error);\r\n        this.error = 'Error al cargar el historial. Por favor, int√©ntalo de nuevo.';\r\n        this.loading = false;\r\n        \r\n        // Forzar detecci√≥n de cambios\r\n        this.cdr.detectChanges();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Refresca el historial\r\n   */\r\n  refrescarHistorial() {\r\n    console.log('üîÑ Refrescando historial...');\r\n    this.dataLoaded = false; // Resetear flag para forzar recarga\r\n    this.cargarHistorial();\r\n  }\r\n\r\n  /**\r\n   * Cambia a la p√°gina especificada\r\n   */\r\n  cambiarPagina(pagina: number) {\r\n    if (pagina >= 1 && pagina <= this.obtenerTotalPaginas()) {\r\n      this.paginaActual = pagina;\r\n      this.cargarHistorial();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calcula el total de p√°ginas\r\n   */\r\n  obtenerTotalPaginas(): number {\r\n    return Math.ceil(this.totalAvisos / this.porPagina);\r\n  }\r\n\r\n  /**\r\n   * Obtiene el rango de p√°ginas a mostrar\r\n   */\r\n  obtenerRangoPaginas(): number[] {\r\n    const totalPaginas = this.obtenerTotalPaginas();\r\n    const paginaActual = this.paginaActual;\r\n    const rango = 2; // N√∫mero de p√°ginas a mostrar antes y despu√©s de la actual\r\n\r\n    let inicio = Math.max(1, paginaActual - rango);\r\n    let fin = Math.min(totalPaginas, paginaActual + rango);\r\n\r\n    // Ajustar para mostrar siempre 5 p√°ginas si es posible\r\n    if (fin - inicio < 4) {\r\n      if (inicio === 1) {\r\n        fin = Math.min(totalPaginas, inicio + 4);\r\n      } else {\r\n        inicio = Math.max(1, fin - 4);\r\n      }\r\n    }\r\n\r\n    const paginas: number[] = [];\r\n    for (let i = inicio; i <= fin; i++) {\r\n      paginas.push(i);\r\n    }\r\n    return paginas;\r\n  }\r\n\r\n  /**\r\n   * Verifica si se puede ir a la p√°gina anterior\r\n   */\r\n  puedeAnterior(): boolean {\r\n    return this.paginaActual > 1;\r\n  }\r\n\r\n  /**\r\n   * Verifica si se puede ir a la p√°gina siguiente\r\n   */\r\n  puedeSiguiente(): boolean {\r\n    return this.paginaActual < this.obtenerTotalPaginas();\r\n  }\r\n\r\n  /**\r\n   * Va a la p√°gina anterior\r\n   */\r\n  paginaAnterior() {\r\n    if (this.puedeAnterior()) {\r\n      this.cambiarPagina(this.paginaActual - 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Va a la p√°gina siguiente\r\n   */\r\n  paginaSiguiente() {\r\n    if (this.puedeSiguiente()) {\r\n      this.cambiarPagina(this.paginaActual + 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Va a la primera p√°gina\r\n   */\r\n  primeraPagina() {\r\n    this.cambiarPagina(1);\r\n  }\r\n\r\n  /**\r\n   * Va a la √∫ltima p√°gina\r\n   */\r\n  ultimaPagina() {\r\n    this.cambiarPagina(this.obtenerTotalPaginas());\r\n  }\r\n\r\n  /**\r\n   * Navega al detalle de un aviso\r\n   */\r\n  verDetalleAviso(aviso: Aviso) {\r\n    if (aviso.id) {\r\n      this.router.navigate(['/ver-aviso', aviso.id]);\r\n    }\r\n  }\r\n\r\n}\r\n", "<ion-content>  \r\n  <!-- Loading State -->\r\n  <div *ngIf=\"loading\" class=\"loading-state\">\r\n    <div class=\"loading-spinner\">\r\n      <ion-icon name=\"refresh-outline\" class=\"spinning\"></ion-icon>\r\n      <p>Cargando historial...</p>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Error State -->\r\n  <div *ngIf=\"error && !loading\" class=\"error-state\">\r\n    <div class=\"error-message\">\r\n      <ion-icon name=\"alert-circle-outline\"></ion-icon>\r\n      <p>{{ error }}</p>\r\n      <button class=\"btn-retry\" (click)=\"refrescarHistorial()\">\r\n        <ion-icon name=\"refresh-outline\"></ion-icon>\r\n        Reintentar\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Contenido principal -->\r\n  <section *ngIf=\"!loading && !error\" class=\"dashboard-table\">\r\n    <!-- Header Section -->\r\n    <div class=\"table-header\">\r\n      <div class=\"table-header-left\">\r\n        <div class=\"table-title\">Tabla de servicios completados</div>\r\n        <div class=\"table-meta\">Servicios completados: {{ totalAvisos }}</div>  \r\n      </div>\r\n      \r\n      <!-- Mobile Search Bar -->\r\n      <div class=\"mobile-search\">\r\n        <input type=\"text\" placeholder=\"Buscar servicio...\" />\r\n        <ion-icon name=\"search-outline\"></ion-icon>\r\n      </div>\r\n\r\n      <!-- Desktop Search and Actions -->\r\n      <div class=\"table-search desktop-only\">\r\n        <input type=\"text\" placeholder=\"Buscar...\" />\r\n        <select>\r\n          <option>Ordenar por: Recientes</option>\r\n        </select>\r\n        <div class=\"header-actions\">\r\n          <button class=\"btn-add\">\r\n            <ion-icon name=\"eye-outline\" style=\"font-size: 18px;\"></ion-icon>\r\n            Ver facturas\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Mobile Actions -->\r\n    <div class=\"mobile-actions\">\r\n      <select class=\"mobile-filter\">\r\n        <option>Ordenar: Recientes</option>\r\n        <option>Ordenar: Antiguos</option>\r\n        <option>Ordenar: Urgentes</option>\r\n      </select>\r\n      <div class=\"mobile-buttons\">\r\n        <button class=\"btn-add\">\r\n          Ver facturas\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Compact Table View (grid, igual que avisos) -->\r\n    <div *ngIf=\"avisos.length > 0\" class=\"compact-historial-table\">\r\n      <div class=\"historial-table\">\r\n        <div class=\"table-header\">\r\n          <div class=\"header-row\">\r\n            <div class=\"header-cell\">N√∫mero</div>\r\n            <div class=\"header-cell\">Cliente</div>\r\n            <div class=\"header-cell\">Detalle</div>\r\n            <div class=\"header-cell desktop-only\">Fecha</div>\r\n            <div class=\"header-cell desktop-only\">Urgente</div>\r\n            <div class=\"header-cell desktop-only\">Direcci√≥n</div>\r\n            <div class=\"header-cell\">Acciones</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"table-body\">\r\n          <div *ngFor=\"let aviso of avisos\" class=\"aviso-row\"\r\n               [ngClass]=\"{\r\n                 'en-curso': aviso.estado === 'En curso',\r\n                 'pendiente': aviso.estado === 'Pendiente',\r\n                 'completado': aviso.estado === 'Completado'\r\n               }\">\r\n            <div class=\"aviso-cell numero-aviso\">#{{ aviso.id?.substring(0, 8) || 'N/A' }}</div>\r\n            <div class=\"aviso-cell nombre-cliente\">{{ aviso.nombre_cliente_aviso }}</div>\r\n            <div class=\"aviso-cell detalle-servicio\">\r\n              <div class=\"detalle-texto\" [title]=\"aviso.descripcion_problema\">{{ aviso.descripcion_problema }}</div>\r\n            </div>\r\n            <div class=\"aviso-cell fecha-aviso desktop-only\">{{ aviso.fecha_creacion | date:'dd/MM/yyyy' }}</div>\r\n            <div class=\"aviso-cell urgente-aviso desktop-only\">\r\n              <ion-icon *ngIf=\"aviso.urgencia === 'Alta' || aviso.es_urgente\" name=\"alert-circle\" class=\"urgente-icon\" title=\"Aviso urgente\"></ion-icon>\r\n              <ion-icon *ngIf=\"aviso.urgencia !== 'Alta' && !aviso.es_urgente\" name=\"close\" class=\"no-urgente-icon\" title=\"No urgente\"></ion-icon>\r\n            </div>\r\n            <div class=\"aviso-cell direccion-aviso desktop-only\">{{ aviso.direccion_cliente_aviso }}</div>\r\n            <div class=\"aviso-cell acciones\">\r\n              <button class=\"btn-ver\" title=\"Ver detalles\" (click)=\"verDetalleAviso(aviso)\">\r\n                <ion-icon name=\"eye-outline\"></ion-icon>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Estado de datos vac√≠os -->\r\n    <div *ngIf=\"avisos.length === 0 && !loading && !error\" class=\"no-data-container\">\r\n      <div class=\"no-data-message\">\r\n        <ion-icon name=\"time-outline\"></ion-icon>\r\n        <h3>No hay servicios completados</h3>\r\n        <p>A√∫n no se han completado servicios. Los servicios completados aparecer√°n aqu√≠.</p>\r\n        <button class=\"btn-create\" (click)=\"refrescarHistorial()\">\r\n          <ion-icon name=\"refresh-outline\"></ion-icon>\r\n          Actualizar historial\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Pagination -->\r\n    <div *ngIf=\"avisos.length > 0 && totalAvisos > 0\" class=\"table-pagination\">\r\n      <span class=\"pagination-info\">\r\n        Mostrando datos {{ ((paginaActual - 1) * porPagina) + 1 }} a {{ Math.min(paginaActual * porPagina, totalAvisos) }} de {{ totalAvisos }} servicios\r\n      </span>\r\n      <div class=\"pagination\">\r\n        <!-- Bot√≥n Primera P√°gina -->\r\n        <button \r\n          class=\"pagination-btn\" \r\n          [disabled]=\"!puedeAnterior()\"\r\n          (click)=\"primeraPagina()\"\r\n          title=\"Primera p√°gina\">\r\n          <ion-icon name=\"chevron-back-outline\"></ion-icon>\r\n          <ion-icon name=\"chevron-back-outline\"></ion-icon>\r\n        </button>\r\n\r\n        <!-- Bot√≥n P√°gina Anterior -->\r\n        <button \r\n          class=\"pagination-btn\" \r\n          [disabled]=\"!puedeAnterior()\"\r\n          (click)=\"paginaAnterior()\"\r\n          title=\"P√°gina anterior\">\r\n          <ion-icon name=\"chevron-back-outline\"></ion-icon>\r\n        </button>\r\n\r\n        <!-- P√°ginas -->\r\n        <ng-container *ngFor=\"let pagina of obtenerRangoPaginas()\">\r\n          <button \r\n            class=\"pagination-btn\" \r\n            [class.active]=\"pagina === paginaActual\"\r\n            (click)=\"cambiarPagina(pagina)\">\r\n            {{ pagina }}\r\n          </button>\r\n        </ng-container>\r\n\r\n        <!-- Bot√≥n P√°gina Siguiente -->\r\n        <button \r\n          class=\"pagination-btn\" \r\n          [disabled]=\"!puedeSiguiente()\"\r\n          (click)=\"paginaSiguiente()\"\r\n          title=\"P√°gina siguiente\">\r\n          <ion-icon name=\"chevron-forward-outline\"></ion-icon>\r\n        </button>\r\n\r\n        <!-- Bot√≥n √öltima P√°gina -->\r\n        <button \r\n          class=\"pagination-btn\" \r\n          [disabled]=\"!puedeSiguiente()\"\r\n          (click)=\"ultimaPagina()\"\r\n          title=\"√öltima p√°gina\">\r\n          <ion-icon name=\"chevron-forward-outline\"></ion-icon>\r\n          <ion-icon name=\"chevron-forward-outline\"></ion-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</ion-content>\r\n"],
  "mappings": "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",
  "names": []
}
