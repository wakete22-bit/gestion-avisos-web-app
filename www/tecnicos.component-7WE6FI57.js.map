{
  "version": 3,
  "sources": ["src/app/modules/tecnicos/services/tecnicos.service.ts", "src/app/modules/tecnicos/components/crear-tecnico-modal/crear-tecnico-modal.component.ts", "src/app/modules/tecnicos/components/crear-tecnico-modal/crear-tecnico-modal.component.html", "src/app/modules/tecnicos/pages/tecnicos/tecnicos.component.ts", "src/app/modules/tecnicos/pages/tecnicos/tecnicos.component.html"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\nimport { SupabaseClient } from '@supabase/supabase-js';\nimport { SupabaseClientService } from '../../../core/services/supabase-client.service';\nimport { DataUpdateService } from '../../../core/services/data-update.service';\nimport { Observable, BehaviorSubject, from, throwError, of } from 'rxjs';\nimport { map, tap, catchError } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { \n  Tecnico, \n  TecnicoResponse, \n  CrearTecnicoRequest, \n  ActualizarTecnicoRequest \n} from '../models/tecnico.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TecnicosService {\n  private supabase: SupabaseClient;\n  private tecnicosSubject = new BehaviorSubject<Tecnico[]>([]);\n  public tecnicos$ = this.tecnicosSubject.asObservable();\n\n  constructor(\n    private supabaseClientService: SupabaseClientService,\n    private dataUpdateService: DataUpdateService\n  ) {\n    this.supabase = this.supabaseClientService.getClient();\n  }\n\n  /**\n   * Obtiene la lista de t√©cnicos con paginaci√≥n y filtros\n   */\n  getTecnicos(\n    pagina: number = 1, \n    porPagina: number = 10, \n    busqueda?: string,\n    ordenarPor?: string,\n    orden?: 'asc' | 'desc',\n    soloActivos: boolean = false\n  ): Observable<TecnicoResponse> {\n    let query = this.supabase\n      .from('usuarios')\n      .select(`\n        *,\n        rol:roles(*)\n      `, { count: 'exact' });\n\n    // Aplicar filtros\n    if (busqueda) {\n      query = query.or(`nombre_completo.ilike.%${busqueda}%,email.ilike.%${busqueda}%`);\n    }\n\n    // Filtrar por estado activo solo si se solicita expl√≠citamente\n    if (soloActivos) {\n      query = query.eq('es_activo', true);\n    }\n\n    // Aplicar paginaci√≥n y ordenamiento\n    const desde = (pagina - 1) * porPagina;\n    query = query\n      .range(desde, desde + porPagina - 1)\n      .order(ordenarPor || 'fecha_creacion', { ascending: orden === 'asc' });\n\n    return from(query).pipe(\n      map(({ data, error, count }) => {\n        if (error) throw error;\n        \n        const tecnicos = data as Tecnico[];\n        this.tecnicosSubject.next(tecnicos);\n        \n        return {\n          tecnicos,\n          total: count || 0,\n          pagina,\n          por_pagina: porPagina\n        };\n      }),\n      catchError(error => {\n        console.error('Error al obtener t√©cnicos:', error);\n        throw error;\n      })\n    );\n  }\n\n  /**\n   * Obtiene un t√©cnico por su ID\n   */\n  getTecnico(id: string): Observable<Tecnico> {\n    return from(\n      this.supabase\n        .from('usuarios')\n        .select(`\n          *,\n          rol:roles(*)\n        `)\n        .eq('id', id)\n        .single()\n    ).pipe(\n      map(({ data, error }) => {\n        if (error) throw error;\n        return data as Tecnico;\n      })\n    );\n  }\n\n  /**\n   * Crea un nuevo t√©cnico\n   */\n  crearTecnico(tecnico: CrearTecnicoRequest): Observable<Tecnico> {\n    // Validar datos de entrada antes de proceder\n    if (!this.validarDatosTecnico(tecnico)) {\n      // Si la validaci√≥n falla porque el t√©cnico ya tiene ID, retornarlo directamente\n      if ((tecnico as any).id) {\n        console.log('üîß T√©cnico ya existe, retornando datos existentes');\n        return of(tecnico as any);\n      }\n      return throwError(() => new Error('Datos del t√©cnico no v√°lidos'));\n    }\n\n    console.log('üîß Iniciando creaci√≥n de t√©cnico:', { \n      email: tecnico.email, \n      nombre: tecnico.nombre_completo,\n      rol_id: tecnico.rol_id \n    });\n\n    return from(\n      this.crearTecnicoConAuth(tecnico)\n    ).pipe(\n      map(({ data, error }) => {\n        if (error) {\n          // Manejar errores espec√≠ficos con mensajes m√°s claros\n          console.error('‚ùå Error en crearTecnico:', error);\n          \n          if (error.message?.includes('Ya existe un usuario con este email')) {\n            throw new Error('Ya existe un usuario con este email');\n          } else if (error.code === '23505') {\n            throw new Error('El usuario ya existe en el sistema');\n          } else if (error.message?.includes('Invalid login credentials')) {\n            throw new Error('Credenciales inv√°lidas. Verifica el email y contrase√±a.');\n          } else if (error.message?.includes('Password should be at least 6 characters')) {\n            throw new Error('La contrase√±a debe tener al menos 6 caracteres');\n          } else if (error.message?.includes('Unable to validate email address')) {\n            throw new Error('El formato del email no es v√°lido');\n          } else if (error.message?.includes('Email not confirmed')) {\n            throw new Error('El email necesita ser confirmado');\n          } else if (error.message?.includes('signup_disabled')) {\n            throw new Error('El registro de nuevos usuarios est√° deshabilitado');\n          } else {\n            throw error;\n          }\n        }\n        \n        if (!data) {\n          throw new Error('No se pudo crear el t√©cnico - respuesta vac√≠a');\n        }\n        \n        console.log('‚úÖ T√©cnico creado exitosamente:', data);\n        \n        const nuevoTecnico = data as Tecnico;\n        const tecnicosActuales = this.tecnicosSubject.value;\n        this.tecnicosSubject.next([nuevoTecnico, ...tecnicosActuales]);\n        \n        // Notificar creaci√≥n y limpiar cache\n        this.dataUpdateService.notifyCreated('tecnicos');\n        \n        return nuevoTecnico;\n      }),\n      catchError(error => {\n        console.error('‚ùå Error final en crearTecnico:', error);\n        throw error;\n      })\n    );\n  }\n\n  /**\n   * Valida los datos del t√©cnico antes de crear\n   */\n  private validarDatosTecnico(tecnico: CrearTecnicoRequest): boolean {\n    // Si el t√©cnico ya tiene ID, significa que ya fue creado\n    // No necesita validaci√≥n de creaci√≥n\n    if ((tecnico as any).id) {\n      console.log('‚úÖ T√©cnico ya creado, saltando validaci√≥n de creaci√≥n');\n      return false; // No proceder con creaci√≥n\n    }\n\n    if (!tecnico.nombre_completo?.trim()) {\n      console.error('‚ùå Validaci√≥n fallida: nombre_completo requerido');\n      return false;\n    }\n    \n    if (!tecnico.email?.trim()) {\n      console.error('‚ùå Validaci√≥n fallida: email requerido');\n      return false;\n    }\n    \n    if (!tecnico.password?.trim()) {\n      console.error('‚ùå Validaci√≥n fallida: password requerido');\n      return false;\n    }\n    \n    if (tecnico.password.length < 6) {\n      console.error('‚ùå Validaci√≥n fallida: password debe tener al menos 6 caracteres');\n      return false;\n    }\n    \n    if (!tecnico.rol_id?.trim()) {\n      console.error('‚ùå Validaci√≥n fallida: rol_id requerido');\n      return false;\n    }\n    \n    // Validar formato de email\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(tecnico.email)) {\n      console.error('‚ùå Validaci√≥n fallida: formato de email inv√°lido');\n      return false;\n    }\n    \n    console.log('‚úÖ Validaci√≥n de datos exitosa');\n    return true;\n  }\n\n  /**\n   * Crea un t√©cnico con autenticaci√≥n de Supabase\n   */\n  private async crearTecnicoConAuth(tecnico: CrearTecnicoRequest): Promise<{ data: any, error: any }> {\n    const timeoutMs = 30000; // 30 segundos timeout\n    \n    try {\n      console.log('üîß Paso 1: Verificando usuario existente...');\n      \n      // 1. Verificar si el usuario ya existe en la tabla usuarios\n      const { data: existingUser, error: checkError } = await this.supabase\n        .from('usuarios')\n        .select('id, email')\n        .eq('email', tecnico.email)\n        .maybeSingle();\n\n      if (checkError && checkError.code !== 'PGRST116') {\n        console.error('‚ùå Error al verificar usuario existente:', checkError);\n        return { data: null, error: checkError };\n      }\n\n      if (existingUser) {\n        console.warn('‚ö†Ô∏è Usuario ya existe:', existingUser);\n        return { \n          data: null, \n          error: new Error('Ya existe un usuario con este email') \n        };\n      }\n\n      console.log('üîß Paso 2: Creando usuario en Supabase Auth...');\n\n      // 2. Crear usuario en Supabase Auth usando signUp\n      const { data: authData, error: authError } = await this.supabase.auth.signUp({\n        email: tecnico.email,\n        password: tecnico.password,\n        options: {\n          data: {\n            nombre_completo: tecnico.nombre_completo,\n            telefono: tecnico.telefono || null\n          }\n        }\n      });\n\n      if (authError) {\n        console.error('‚ùå Error al crear usuario en Auth:', authError);\n        return { data: null, error: authError };\n      }\n\n      if (!authData.user) {\n        console.error('‚ùå No se recibi√≥ usuario de Auth');\n        return { data: null, error: new Error('No se pudo crear el usuario en Auth') };\n      }\n\n      console.log('‚úÖ Usuario creado en Auth:', { id: authData.user.id, email: authData.user.email });\n\n      // 3. Crear usuario en la tabla usuarios con estrategia mejorada\n      return await this.crearUsuarioEnBD(authData.user.id, tecnico);\n\n    } catch (error) {\n      console.error('‚ùå Error general en crearTecnicoConAuth:', error);\n      return { data: null, error };\n    }\n  }\n\n  /**\n   * Crea el usuario en la base de datos con reintentos inteligentes\n   */\n  private async crearUsuarioEnBD(userId: string, tecnico: CrearTecnicoRequest): Promise<{ data: any, error: any }> {\n    console.log('üîß Paso 3: Creando usuario en base de datos...');\n    \n    const maxReintentos = 5;\n    const delayBase = 1500; // 1.5 segundos\n    let lastError = null;\n\n    for (let intento = 1; intento <= maxReintentos; intento++) {\n      try {\n        console.log(`üîß Intento ${intento}/${maxReintentos}: Creando usuario en BD...`);\n\n        // Esperar antes de cada intento (excepto el primero)\n        if (intento > 1) {\n          const delay = delayBase * intento; // Delay progresivo\n          console.log(`‚è±Ô∏è Esperando ${delay}ms antes del intento...`);\n          await new Promise(resolve => setTimeout(resolve, delay));\n        }\n\n        // Verificar si el usuario ya existe en BD\n        const { data: usuarioExistente, error: checkError } = await this.supabase\n          .from('usuarios')\n          .select(`\n            *,\n            rol:roles(*)\n          `)\n          .eq('id', userId)\n          .maybeSingle();\n\n        if (usuarioExistente) {\n          console.log('‚úÖ Usuario ya existe en BD:', usuarioExistente);\n          \n          // Verificar si tiene el rol correcto\n          if (usuarioExistente.rol_id !== tecnico.rol_id) {\n            console.log('üîß Actualizando rol del usuario existente...');\n            \n            const { data: usuarioActualizado, error: updateError } = await this.supabase\n              .from('usuarios')\n              .update({ \n                rol_id: tecnico.rol_id,\n                nombre_completo: tecnico.nombre_completo,\n                telefono: tecnico.telefono,\n                fecha_actualizacion: new Date().toISOString()\n              })\n              .eq('id', userId)\n              .select(`\n                *,\n                rol:roles(*)\n              `)\n              .single();\n\n            if (updateError) {\n              console.warn('‚ö†Ô∏è Error al actualizar usuario, usando datos existentes:', updateError);\n              return { data: usuarioExistente, error: null };\n            }\n\n            console.log('‚úÖ Usuario actualizado exitosamente');\n            return { data: usuarioActualizado, error: null };\n          }\n          \n          return { data: usuarioExistente, error: null };\n        }\n\n        // Crear nuevo usuario en BD\n        const tecnicoData = {\n          id: userId,\n          nombre_completo: tecnico.nombre_completo.trim(),\n          email: tecnico.email.trim().toLowerCase(),\n          telefono: tecnico.telefono?.trim() || null,\n          rol_id: tecnico.rol_id,\n          es_activo: tecnico.es_activo ?? true,\n          fecha_creacion: new Date().toISOString()\n        };\n\n        console.log('üîß Insertando usuario con datos:', tecnicoData);\n\n        const { data, error } = await this.supabase\n          .from('usuarios')\n          .insert([tecnicoData])\n          .select(`\n            *,\n            rol:roles(*)\n          `)\n          .single();\n\n        if (error) {\n          lastError = error;\n          console.error(`‚ùå Error en intento ${intento}:`, error);\n          \n          // Manejo espec√≠fico de errores conocidos\n          if (error.code === '23505') {\n            console.log('üîß Detectado duplicado, intentando obtener usuario existente...');\n            const { data: duplicateUser } = await this.supabase\n              .from('usuarios')\n              .select(`\n                *,\n                rol:roles(*)\n              `)\n              .eq('id', userId)\n              .single();\n\n            if (duplicateUser) {\n              console.log('‚úÖ Usuario duplicado encontrado');\n              return { data: duplicateUser, error: null };\n            }\n          }\n          \n          // Si es el √∫ltimo intento, no continuar\n          if (intento === maxReintentos) {\n            break;\n          }\n          \n          continue;\n        }\n\n        console.log('‚úÖ Usuario creado exitosamente en BD');\n        return { data, error: null };\n\n      } catch (error) {\n        lastError = error;\n        console.error(`‚ùå Excepci√≥n en intento ${intento}:`, error);\n        \n        if (intento === maxReintentos) {\n          break;\n        }\n        \n        continue;\n      }\n    }\n\n    // √öltimo intento de recuperaci√≥n\n    console.log('üîß √öltimo intento: buscando usuario existente...');\n    try {\n      const { data: finalUser, error: finalError } = await this.supabase\n        .from('usuarios')\n        .select(`\n          *,\n          rol:roles(*)\n        `)\n        .eq('id', userId)\n        .single();\n\n      if (finalUser) {\n        console.log('‚úÖ Usuario encontrado en b√∫squeda final');\n        return { data: finalUser, error: null };\n      }\n    } catch (finalError) {\n      console.error('‚ùå Error en b√∫squeda final:', finalError);\n    }\n    \n    console.error('‚ùå Todos los intentos fallaron');\n    return { data: null, error: lastError || new Error('Error desconocido al crear usuario') };\n  }\n\n  /**\n   * Actualiza un t√©cnico existente\n   */\n  actualizarTecnico(id: string, tecnico: ActualizarTecnicoRequest): Observable<Tecnico> {\n    const datosActualizados = {\n      ...tecnico,\n      fecha_actualizacion: new Date().toISOString()\n    };\n\n    return from(\n      this.supabase\n        .from('usuarios')\n        .update(datosActualizados)\n        .eq('id', id)\n        .select(`\n          *,\n          rol:roles(*)\n        `)\n        .single()\n    ).pipe(\n      map(({ data, error }) => {\n        if (error) throw error;\n        \n        const tecnicoActualizado = data as Tecnico;\n        const tecnicosActuales = this.tecnicosSubject.value;\n        const index = tecnicosActuales.findIndex(t => t.id === id);\n        if (index !== -1) {\n          tecnicosActuales[index] = tecnicoActualizado;\n          this.tecnicosSubject.next([...tecnicosActuales]);\n        }\n        \n        // Notificar actualizaci√≥n y limpiar cache\n        this.dataUpdateService.notifyUpdated('tecnicos');\n        \n        return tecnicoActualizado;\n      })\n    );\n  }\n\n  /**\n   * Desactiva un t√©cnico (marcar como inactivo)\n   */\n  desactivarTecnico(id: string): Observable<void> {\n    return from(\n      this.supabase\n        .from('usuarios')\n        .update({ \n          es_activo: false,\n          fecha_actualizacion: new Date().toISOString()\n        })\n        .eq('id', id)\n    ).pipe(\n      map(({ error }) => {\n        if (error) throw error;\n        \n        const tecnicosActuales = this.tecnicosSubject.value;\n        const index = tecnicosActuales.findIndex(t => t.id === id);\n        if (index !== -1) {\n          tecnicosActuales[index].es_activo = false;\n          this.tecnicosSubject.next([...tecnicosActuales]);\n        }\n\n        // Notificar actualizaci√≥n y limpiar cache\n        this.dataUpdateService.notifyUpdated('tecnicos');\n      })\n    );\n  }\n\n  /**\n   * Activa un t√©cnico (marcar como activo)\n   */\n  activarTecnico(id: string): Observable<void> {\n    return from(\n      this.supabase\n        .from('usuarios')\n        .update({ \n          es_activo: true,\n          fecha_actualizacion: new Date().toISOString()\n        })\n        .eq('id', id)\n    ).pipe(\n      map(({ error }) => {\n        if (error) throw error;\n        \n        const tecnicosActuales = this.tecnicosSubject.value;\n        const index = tecnicosActuales.findIndex(t => t.id === id);\n        if (index !== -1) {\n          tecnicosActuales[index].es_activo = true;\n          this.tecnicosSubject.next([...tecnicosActuales]);\n        }\n\n        // Notificar actualizaci√≥n y limpiar cache\n        this.dataUpdateService.notifyUpdated('tecnicos');\n      })\n    );\n  }\n\n  /**\n   * Busca t√©cnicos por t√©rmino de b√∫squeda\n   */\n  buscarTecnicos(termino: string): Observable<Tecnico[]> {\n    return from(\n      this.supabase\n        .from('usuarios')\n        .select(`\n          *,\n          rol:roles(*)\n        `)\n        .or(`nombre_completo.ilike.%${termino}%,email.ilike.%${termino}%`)\n        .eq('es_activo', true)\n        .limit(10)\n    ).pipe(\n      map(({ data, error }) => {\n        if (error) throw error;\n        return data as Tecnico[];\n      })\n    );\n  }\n\n  /**\n   * Obtiene el valor actual de t√©cnicos\n   */\n  getTecnicosActuales(): Tecnico[] {\n    return this.tecnicosSubject.value;\n  }\n\n  /**\n   * Obtiene todos los roles disponibles desde la base de datos\n   */\n  async obtenerRolesDisponibles(): Promise<Array<{id: string, nombre_rol: string}>> {\n    try {\n      const { data, error } = await this.supabase\n        .from('roles')\n        .select('id, nombre_rol')\n        .order('nombre_rol');\n\n      if (error) {\n        console.error('‚ùå Error al obtener roles:', error);\n        throw error;\n      }\n\n      console.log('‚úÖ Roles obtenidos desde BD:', data);\n      return data || [];\n    } catch (error) {\n      console.error('‚ùå Error al obtener roles desde BD:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * M√©todo auxiliar para mostrar los UUIDs de roles en consola (solo para desarrollo)\n   * Ejecutar en consola del navegador: tecnicosService.mostrarUUIDsRoles()\n   */\n  async mostrarUUIDsRoles(): Promise<void> {\n    try {\n      console.log('üîß Obteniendo UUIDs de roles para configuraci√≥n...');\n      \n      const roles = await this.obtenerRolesDisponibles();\n      \n      console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');\n      console.log('üìã UUIDS DE ROLES PARA CONFIGURACI√ìN');\n      console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');\n      \n      roles.forEach(rol => {\n        console.log(`${rol.nombre_rol}: ${rol.id}`);\n      });\n      \n      console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');\n      console.log('üí° Copia estos UUIDs para usar en el c√≥digo');\n      \n      // Mostrar c√≥digo de ejemplo\n      console.log('\\nüîß C√≥digo de ejemplo para rolesDisponibles:');\n      console.log('rolesDisponibles = [');\n      roles.forEach(rol => {\n        console.log(`  { value: '${rol.id}', label: '${rol.nombre_rol}', descripcion: '...' },`);\n      });\n      console.log('];');\n      \n    } catch (error) {\n      console.error('‚ùå Error al mostrar UUIDs de roles:', error);\n    }\n  }\n\n  /**\n   * Limpia el estado de t√©cnicos\n   */\n  limpiarTecnicos(): void {\n    this.tecnicosSubject.next([]);\n  }\n} ", "import { Component, OnInit, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonIcon, ModalController } from '@ionic/angular/standalone';\nimport { addIcons } from 'ionicons';\nimport { closeOutline, saveOutline, personOutline, mailOutline, callOutline, shieldOutline, alertCircleOutline, lockClosedOutline, informationCircleOutline, checkmarkCircleOutline, ellipseOutline, refreshOutline } from 'ionicons/icons';\nimport { TipoRol } from '../../../../core/models/usuario.model';\nimport { TecnicosService } from '../../services/tecnicos.service';\nimport { CrearTecnicoRequest, Tecnico } from '../../models/tecnico.model';\nimport { RolesService } from '../../../../core/services/roles.service';\nimport { Subject, takeUntil, from } from 'rxjs';\n\naddIcons({\n  'close-outline': closeOutline,\n  'save-outline': saveOutline,\n  'person-outline': personOutline,\n  'mail-outline': mailOutline,\n  'call-outline': callOutline,\n  'shield-outline': shieldOutline,\n  'lock-closed-outline': lockClosedOutline,\n  'alert-circle-outline': alertCircleOutline,\n  'information-circle-outline': informationCircleOutline,\n  'checkmark-circle-outline': checkmarkCircleOutline,\n  'ellipse-outline': ellipseOutline,\n  'refresh-outline': refreshOutline\n});\n\n@Component({\n  selector: 'app-crear-tecnico-modal',\n  templateUrl: './crear-tecnico-modal.component.html',\n  styleUrls: ['./crear-tecnico-modal.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonIcon\n  ]\n})\nexport class CrearTecnicoModalComponent implements OnInit {\n  @Input() modo: 'crear' | 'editar' = 'crear';\n  @Input() tecnico?: Tecnico;\n  \n  modoEdicion = false;\n  TipoRol = TipoRol; // Hacer el enum disponible en el template\n  private destroy$ = new Subject<void>();\n\n  tecnicoData: CrearTecnicoRequest = {\n    nombre_completo: '',\n    email: '',\n    password: '',\n    telefono: '',\n    rol_id: '', // Se asignar√° din√°micamente\n    es_activo: true\n  };\n\n  // Roles disponibles - se cargar√°n din√°micamente\n  rolesDisponibles: Array<{value: string, label: string, descripcion: string}> = [];\n\n  loading = false;\n  loadingRoles = true;\n  error = '';\n\n  constructor(\n    private modalController: ModalController,\n    private tecnicosService: TecnicosService,\n    private rolesService: RolesService\n  ) {\n    addIcons({\n      personOutline,\n      closeOutline,\n      alertCircleOutline,\n      mailOutline,\n      lockClosedOutline,\n      callOutline,\n      shieldOutline,\n      saveOutline,\n      informationCircleOutline,\n      checkmarkCircleOutline,\n      ellipseOutline,\n      refreshOutline\n    });\n  }\n\n  ngOnInit() {\n    this.modoEdicion = this.modo === 'editar';\n    this.cargarRolesDisponibles();\n    \n    // Si estamos en modo editar y tenemos datos del t√©cnico, cargar los datos\n    if (this.modoEdicion && this.tecnico) {\n      this.cargarDatosTecnico();\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private cargarDatosTecnico() {\n    if (!this.tecnico) return;\n\n    this.tecnicoData = {\n      nombre_completo: this.tecnico.nombre_completo || '',\n      email: this.tecnico.email || '',\n      password: '', // No cargar contrase√±a por seguridad\n      telefono: this.tecnico.telefono || '',\n      rol_id: this.tecnico.rol?.id || '',\n      es_activo: this.tecnico.es_activo ?? true\n    };\n  }\n\n  /**\n   * Carga los roles disponibles desde la base de datos\n   */\n  cargarRolesDisponibles() {\n    this.loadingRoles = true;\n    \n    // Usar el servicio de t√©cnicos para obtener roles desde la BD\n    from(this.tecnicosService.obtenerRolesDisponibles()).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe({\n      next: (roles) => {\n        this.rolesDisponibles = roles.map(rol => ({\n          value: rol.id,\n          label: rol.nombre_rol,\n          descripcion: this.rolesService.getDescripcionRol(rol.nombre_rol as TipoRol)\n        }));\n        \n        // Establecer rol por defecto (T√©cnico si existe) solo si no estamos editando\n        if (!this.modoEdicion) {\n          const rolTecnico = this.rolesDisponibles.find(r => r.label === 'T√©cnico');\n          if (rolTecnico) {\n            this.tecnicoData.rol_id = rolTecnico.value;\n          }\n        }\n        \n        this.loadingRoles = false;\n        console.log('‚úÖ Roles cargados:', this.rolesDisponibles);\n      },\n      error: (error) => {\n        console.error('‚ùå Error al cargar roles:', error);\n        this.loadingRoles = false;\n        \n        // Roles por defecto como fallback (con UUIDs placeholders)\n        this.rolesDisponibles = [\n          { \n            value: 'admin-uuid-placeholder', \n            label: 'Administrador',\n            descripcion: this.rolesService.getDescripcionRol(TipoRol.ADMINISTRADOR)\n          },\n          { \n            value: 'a0472297-ee16-44d8-a434-810a3868a209', \n            label: 'T√©cnico',\n            descripcion: this.rolesService.getDescripcionRol(TipoRol.TECNICO)\n          },\n          { \n            value: '70c12fd8-92c2-4479-bba0-c7b2e934f48a', \n            label: 'Usuario',\n            descripcion: this.rolesService.getDescripcionRol(TipoRol.USUARIO)\n          }\n        ];\n        \n        // Establecer rol por defecto solo si no estamos editando\n        if (!this.modoEdicion) {\n          this.tecnicoData.rol_id = this.rolesDisponibles[1].value; // T√©cnico por defecto\n        }\n        this.error = 'No se pudieron cargar los roles desde la base de datos. Usando valores por defecto.';\n      }\n    });\n  }\n\n  async onClose() {\n    await this.modalController.dismiss(null, 'cancel');\n  }\n\n  async crearTecnico() {\n    if (!this.validarFormulario()) {\n      return;\n    }\n\n    // Validar que el rol seleccionado no sea un placeholder\n    if (this.tecnicoData.rol_id === 'admin-uuid-placeholder') {\n      this.error = 'Por favor, contacta al administrador para configurar correctamente el UUID del rol Administrador en la base de datos.';\n      return;\n    }\n\n    this.loading = true;\n    this.error = '';\n\n    try {\n      if (this.modoEdicion && this.tecnico) {\n        // Actualizar t√©cnico existente\n        this.tecnicosService.actualizarTecnico(this.tecnico.id, this.tecnicoData).pipe(\n          takeUntil(this.destroy$)\n        ).subscribe({\n          next: (tecnico) => {\n            console.log('‚úÖ T√©cnico actualizado exitosamente:', tecnico);\n            this.modalController.dismiss(tecnico, 'confirm');\n          },\n          error: (error) => {\n            console.error('‚ùå Error al actualizar t√©cnico:', error);\n            this.manejarErrorCreacion(error);\n            this.loading = false;\n          }\n        });\n      } else {\n        // Crear nuevo t√©cnico\n        this.tecnicosService.crearTecnico(this.tecnicoData).pipe(\n          takeUntil(this.destroy$)\n        ).subscribe({\n          next: (tecnico) => {\n            console.log('‚úÖ T√©cnico creado exitosamente:', tecnico);\n            this.modalController.dismiss(tecnico, 'confirm');\n          },\n          error: (error) => {\n            console.error('‚ùå Error al crear t√©cnico:', error);\n            this.manejarErrorCreacion(error);\n            this.loading = false;\n          }\n        });\n      }\n    } catch (error) {\n      this.error = 'Error inesperado al procesar el t√©cnico';\n      console.error('‚ùå Error inesperado:', error);\n      this.loading = false;\n    }\n  }\n\n  /**\n   * Maneja los errores de creaci√≥n/actualizaci√≥n de t√©cnico de forma m√°s detallada\n   */\n  private manejarErrorCreacion(error: any) {\n    console.log('üîç Analizando error:', error);\n    \n    if (typeof error === 'string') {\n      this.error = error;\n    } else if (error?.message) {\n      // Errores espec√≠ficos con mensajes m√°s claros\n      if (error.message.includes('Ya existe un usuario con este email')) {\n        this.error = 'üìß Ya existe un usuario registrado con este email. Por favor, usa un email diferente.';\n      } else if (error.message.includes('duplicate key value') || error.code === '23505') {\n        this.error = '‚ö†Ô∏è El usuario ya existe en el sistema. Por favor, verifica el email ingresado.';\n      } else if (error.message.includes('Invalid login credentials')) {\n        this.error = 'üîê Error en las credenciales. Por favor, verifica el email y contrase√±a.';\n      } else if (error.message.includes('Email not confirmed')) {\n        this.error = 'üìß El email necesita ser confirmado. Revisa la bandeja de entrada.';\n      } else if (error.message.includes('Password should be at least 6 characters')) {\n        this.error = 'üîí La contrase√±a debe tener al menos 6 caracteres.';\n      } else if (error.message.includes('Unable to validate email address')) {\n        this.error = 'üìß El formato del email no es v√°lido.';\n      } else if (error.message.includes('Network request failed')) {\n        this.error = 'üåê Error de conexi√≥n. Por favor, verifica tu conexi√≥n a internet.';\n      } else {\n        this.error = `‚ùå Error: ${error.message}`;\n      }\n    } else {\n      this.error = '‚ùå Error desconocido al procesar el t√©cnico. Por favor, intenta de nuevo.';\n    }\n  }\n\n  validarFormulario(): boolean {\n    if (!this.tecnicoData.nombre_completo.trim()) {\n      this.error = 'El nombre completo es obligatorio';\n      return false;\n    }\n\n    if (!this.tecnicoData.email.trim()) {\n      this.error = 'El email es obligatorio';\n      return false;\n    }\n\n    if (!this.validarEmail(this.tecnicoData.email)) {\n      this.error = 'El formato del email no es v√°lido';\n      return false;\n    }\n\n    // Solo validar contrase√±a si estamos creando un nuevo t√©cnico\n    if (!this.modoEdicion) {\n      if (!this.tecnicoData.password.trim()) {\n        this.error = 'La contrase√±a es obligatoria';\n        return false;\n      }\n\n      if (this.tecnicoData.password.length < 6) {\n        this.error = 'La contrase√±a debe tener al menos 6 caracteres';\n        return false;\n      }\n    }\n\n    if (!this.tecnicoData.rol_id) {\n      this.error = 'Debe seleccionar un rol';\n      return false;\n    }\n\n    // Validar que el email no est√© vac√≠o y tenga formato v√°lido\n    if (!this.tecnicoData.email || !this.validarEmail(this.tecnicoData.email)) {\n      this.error = 'El email debe tener un formato v√°lido';\n      return false;\n    }\n\n    this.error = '';\n    return true;\n  }\n\n  validarEmail(email: string): boolean {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  }\n\n  isFormValid(): boolean {\n    const baseValidation = !!this.tecnicoData.nombre_completo.trim() &&\n           this.validarEmail(this.tecnicoData.email) &&\n           !!this.tecnicoData.rol_id;\n    \n    // Solo validar contrase√±a si estamos creando un nuevo t√©cnico\n    if (this.modoEdicion) {\n      return baseValidation;\n    } else {\n      return baseValidation && this.tecnicoData.password.length >= 6;\n    }\n  }\n\n  getRolLabel(rolId: string): string {\n    const rol = this.rolesDisponibles.find(r => r.value === rolId);\n    return rol ? rol.label : '';\n  }\n\n  getRolDescripcion(rolId: string): string {\n    const rol = this.rolesDisponibles.find(r => r.value === rolId);\n    return rol ? rol.descripcion : '';\n  }\n\n  onInputChange() {\n    if (this.error) {\n      this.error = '';\n    }\n  }\n\n  get tituloModal(): string {\n    return this.modoEdicion ? 'Editar T√©cnico' : 'Crear Nuevo T√©cnico';\n  }\n\n  get subtituloModal(): string {\n    return this.modoEdicion ? 'Modifica los datos del t√©cnico' : 'Registra un nuevo t√©cnico en el sistema';\n  }\n\n  get textoBotonGuardar(): string {\n    return this.loading ? 'Procesando...' : (this.modoEdicion ? 'Actualizar T√©cnico' : 'Crear T√©cnico');\n  }\n} ", "<div class=\"modal-container\">\n  <header class=\"modal-header\">\n    <div class=\"header-content\">\n      <h2>{{ tituloModal }}</h2>\n      <button class=\"close-button\" (click)=\"onClose()\">\n        <ion-icon name=\"close-outline\"></ion-icon>\n      </button>\n    </div>\n    <p class=\"subtitle\">{{ subtituloModal }}</p>\n  </header>\n\n  <form (ngSubmit)=\"crearTecnico()\" class=\"modal-body\">\n    <div class=\"modal-content\">\n      <!-- Mensaje de error -->\n      <div *ngIf=\"error\" class=\"error-message\">\n        <ion-icon name=\"alert-circle-outline\"></ion-icon>\n        {{ error }}\n      </div>\n\n      <div class=\"modal-grid\">\n        <!-- Secci√≥n Izquierda - Informaci√≥n Personal -->\n        <div class=\"form-section\">\n          <h3>Informaci√≥n Personal</h3>\n\n          <div class=\"form-group\">\n            <label>Nombre Completo <span class=\"required\">*</span></label>\n            <input type=\"text\" [(ngModel)]=\"tecnicoData.nombre_completo\" name=\"nombre_completo\"\n              placeholder=\"Ingresa el nombre completo\" class=\"form-control\" (input)=\"onInputChange()\" required>\n          </div>\n\n          <div class=\"form-group\">\n            <label>Email <span class=\"required\">*</span></label>\n            <input type=\"email\" [(ngModel)]=\"tecnicoData.email\" name=\"email\" placeholder=\"Ingresa el email\"\n              class=\"form-control\" (input)=\"onInputChange()\" required>\n          </div>\n\n          <div class=\"form-group\">\n            <label>Tel√©fono</label>\n            <input type=\"tel\" [(ngModel)]=\"tecnicoData.telefono\" name=\"telefono\" placeholder=\"Ingresa el tel√©fono\"\n              class=\"form-control\" (input)=\"onInputChange()\">\n          </div>\n\n          <div class=\"form-group\">\n            <label>Rol <span class=\"required\">*</span></label>\n\n            <!-- Estado de carga de roles -->\n            <div *ngIf=\"loadingRoles\" class=\"loading-roles\">\n              <ion-icon name=\"refresh-outline\" class=\"spinning\"></ion-icon>\n              <span>Cargando roles disponibles...</span>\n            </div>\n\n            <!-- Selector de rol -->\n            <select *ngIf=\"!loadingRoles\" [(ngModel)]=\"tecnicoData.rol_id\" name=\"rol_id\" class=\"form-control\"\n              (change)=\"onInputChange()\" required>\n              <option value=\"\">Selecciona el rol</option>\n              <option *ngFor=\"let rol of rolesDisponibles\" [value]=\"rol.value\"\n                [disabled]=\"rol.value === 'admin-uuid-placeholder'\">\n                {{ rol.label }}\n                <span *ngIf=\"rol.value === 'admin-uuid-placeholder'\"> (Requiere configuraci√≥n)</span>\n              </option>\n            </select>\n\n            <!-- Mensaje de advertencia para rol de administrador no configurado -->\n            <div *ngIf=\"!loadingRoles && tecnicoData.rol_id === 'admin-uuid-placeholder'\" class=\"warning-message\">\n              <ion-icon name=\"alert-circle-outline\"></ion-icon>\n              <p>El rol de Administrador requiere configuraci√≥n adicional en la base de datos. Contacta al administrador\n                del sistema.</p>\n            </div>\n\n            <!-- Informaci√≥n adicional del rol -->\n            <div class=\"role-info\" *ngIf=\"tecnicoData.rol_id && !loadingRoles\">\n              <div class=\"role-card\">\n                <div class=\"role-header\">\n                  <ion-icon name=\"shield-outline\"></ion-icon>\n                  <span class=\"role-title\">{{ getRolLabel(tecnicoData.rol_id) }}</span>\n                </div>\n                <div class=\"role-description\">\n                  <p *ngIf=\"tecnicoData.rol_id\">\n                    <strong>Permisos:</strong> {{ getRolDescripcion(tecnicoData.rol_id) }}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Secci√≥n Derecha - Informaci√≥n de Acceso -->\n        <div class=\"images-section\">\n          <div class=\"repuestos-container\">\n            <h3>Credenciales de Acceso</h3>\n\n            <!-- Mensaje informativo -->\n            <div class=\"info-message\" *ngIf=\"!modoEdicion\">\n              <ion-icon name=\"information-circle-outline\"></ion-icon>\n              <p>El t√©cnico recibir√° un email con sus credenciales de acceso al sistema.</p>\n            </div>\n\n            <div class=\"form-group\" *ngIf=\"!modoEdicion\">\n              <label>Contrase√±a <span class=\"required\">*</span></label>\n              <input type=\"password\" [(ngModel)]=\"tecnicoData.password\" name=\"password\"\n                placeholder=\"Ingresa la contrase√±a\" class=\"form-control\" (input)=\"onInputChange()\" style=\"background-color: #fff; border: 1px solid #D1D5DB;\" required>\n              <div class=\"password-hint\">M√≠nimo 6 caracteres</div>\n            </div>\n\n\n\n            <!-- Estado de validaci√≥n -->\n            <div class=\"validation-status\">\n              <div class=\"validation-item\" [class.valid]=\"tecnicoData.nombre_completo.trim()\">\n                <ion-icon name=\"checkmark-circle-outline\" *ngIf=\"tecnicoData.nombre_completo.trim()\"></ion-icon>\n                <ion-icon name=\"ellipse-outline\" *ngIf=\"!tecnicoData.nombre_completo.trim()\"></ion-icon>\n                <span>Nombre completo</span>\n              </div>\n              <div class=\"validation-item\" [class.valid]=\"validarEmail(tecnicoData.email)\">\n                <ion-icon name=\"checkmark-circle-outline\" *ngIf=\"validarEmail(tecnicoData.email)\"></ion-icon>\n                <ion-icon name=\"ellipse-outline\" *ngIf=\"!validarEmail(tecnicoData.email)\"></ion-icon>\n                <span>Email v√°lido</span>\n              </div>\n              <div class=\"validation-item\" [class.valid]=\"modoEdicion || tecnicoData.password.length >= 6\"\n                *ngIf=\"!modoEdicion\">\n                <ion-icon name=\"checkmark-circle-outline\" *ngIf=\"tecnicoData.password.length >= 6\"></ion-icon>\n                <ion-icon name=\"ellipse-outline\" *ngIf=\"tecnicoData.password.length < 6\"></ion-icon>\n                <span>Contrase√±a (m√≠n. 6 caracteres)</span>\n              </div>\n              <div class=\"validation-item\" [class.valid]=\"tecnicoData.rol_id\">\n                <ion-icon name=\"checkmark-circle-outline\" *ngIf=\"tecnicoData.rol_id\"></ion-icon>\n                <ion-icon name=\"ellipse-outline\" *ngIf=\"!tecnicoData.rol_id\"></ion-icon>\n                <span>Rol seleccionado</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n\n  <footer class=\"modal-footer\">\n    <div class=\"button-group\">\n      <button type=\"button\" class=\"btn btn-outline\" (click)=\"onClose()\">\n        Cancelar\n      </button>\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"crearTecnico()\" [disabled]=\"loading || !isFormValid()\">\n        <ion-icon name=\"save-outline\" *ngIf=\"!loading\"></ion-icon>\n        <ion-icon name=\"refresh-outline\" class=\"spinning\" *ngIf=\"loading\"></ion-icon>\n        {{ textoBotonGuardar }}\n      </button>\n    </div>\n  </footer>\n</div>", "import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonContent, IonIcon, ModalController } from '@ionic/angular/standalone';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatIconModule } from '@angular/material/icon';\nimport { addIcons } from 'ionicons';\nimport { \n  constructOutline,\n  addCircle,\n  alertCircle,\n  close,\n  eyeOutline,\n  add,\n  addCircleOutline,\n  searchOutline,\n  callOutline,\n  mailOutline,\n  locationOutline,\n  refreshOutline,\n  alertCircleOutline,\n  peopleOutline,\n  pauseCircle,\n  playCircle,\n  filterOutline\n} from 'ionicons/icons';\nimport { CrearTecnicoModalComponent } from '../../components/crear-tecnico-modal/crear-tecnico-modal.component';\nimport { Tecnico } from '../../models/tecnico.model';\nimport { TecnicosService } from '../../services/tecnicos.service';\nimport { Subject, takeUntil, debounceTime, distinctUntilChanged } from 'rxjs';\nimport { TipoRol } from '../../../../core/models/usuario.model';\n\n@Component({\n  selector: 'app-tecnicos',\n  templateUrl: './tecnicos.component.html',\n  styleUrls: ['./tecnicos.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonContent,\n    IonIcon,\n    MatTableModule,\n    MatIconModule\n  ],\n})\nexport class TecnicosComponent implements OnInit, OnDestroy {\n  tecnicos: Tecnico[] = [];\n  loading = false;\n  error = '';\n  busqueda = '';\n  paginaActual = 1;\n  porPagina = 10;\n  totalTecnicos = 0;\n  ordenarPor = 'fecha_creacion';\n  orden: 'asc' | 'desc' = 'desc';\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private modalController: ModalController,\n    private tecnicosService: TecnicosService\n  ) {\n    addIcons({searchOutline,filterOutline,addCircle,refreshOutline,alertCircleOutline,peopleOutline,eyeOutline,constructOutline,alertCircle,close,add,addCircleOutline,callOutline,mailOutline,locationOutline,pauseCircle,playCircle});\n  }\n\n  ngOnInit() {\n    this.cargarTecnicos();\n    this.setupBusqueda();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private setupBusqueda() {\n    // Debounce para la b√∫squeda\n    const busquedaSubject = new Subject<string>();\n    busquedaSubject.pipe(\n      takeUntil(this.destroy$),\n      debounceTime(300),\n      distinctUntilChanged()\n    ).subscribe(termino => {\n      this.busqueda = termino;\n      this.paginaActual = 1;\n      this.cargarTecnicos();\n    });\n\n    // Escuchar cambios en el input de b√∫squeda\n    const searchInput = document.querySelector('input[placeholder*=\"Buscar\"]') as HTMLInputElement;\n    if (searchInput) {\n      searchInput.addEventListener('input', (e) => {\n        const target = e.target as HTMLInputElement;\n        busquedaSubject.next(target.value);\n      });\n    }\n  }\n\n  cargarTecnicos() {\n    this.loading = true;\n    this.error = '';\n\n    this.tecnicosService.getTecnicos(\n      this.paginaActual,\n      this.porPagina,\n      this.busqueda,\n      this.ordenarPor,\n      this.orden\n    ).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe({\n      next: (response) => {\n        this.tecnicos = response.tecnicos;\n        this.totalTecnicos = response.total;\n        this.loading = false;\n      },\n      error: (error) => {\n        console.error('Error al cargar t√©cnicos:', error);\n        this.error = 'Error al cargar los t√©cnicos. Por favor, intenta de nuevo.';\n        this.loading = false;\n      }\n    });\n  }\n\n  async abrirModalCrearTecnico() {\n    const modal = await this.modalController.create({\n      component: CrearTecnicoModalComponent,\n      componentProps: {\n        tecnico: null,\n        modo: 'crear'\n      }\n    });\n\n    await modal.present();\n\n    const { data, role } = await modal.onWillDismiss();\n    \n    if (role === 'confirm' && data) {\n      // El t√©cnico ya fue creado exitosamente en el modal\n      // Solo necesitamos recargar la lista y mostrar confirmaci√≥n\n      console.log('‚úÖ T√©cnico creado desde modal, recargando lista...');\n      this.cargarTecnicos();\n    }\n  }\n\n  async abrirModalEditarTecnico(tecnico: Tecnico) {\n    const modal = await this.modalController.create({\n      component: CrearTecnicoModalComponent,\n      componentProps: {\n        tecnico: tecnico,\n        modo: 'editar'\n      }\n    });\n\n    await modal.present();\n\n    const { data, role } = await modal.onWillDismiss();\n    \n    if (role === 'confirm' && data) {\n      console.log('‚úÖ T√©cnico actualizado desde modal, recargando lista...');\n      this.cargarTecnicos();\n    }\n  }\n\n  // M√©todo ya no es necesario para creaci√≥n desde modal\n  // Se mantiene solo para compatibilidad futura si se necesita\n  private crearTecnico(tecnicoData: any) {\n    this.loading = true;\n    this.error = '';\n\n    this.tecnicosService.crearTecnico(tecnicoData).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe({\n      next: (tecnico) => {\n        console.log('‚úÖ T√©cnico creado exitosamente desde componente padre:', tecnico);\n        this.cargarTecnicos(); // Recargar la lista\n        this.loading = false;\n      },\n      error: (error) => {\n        console.error('‚ùå Error al crear t√©cnico desde componente padre:', error);\n        this.error = 'Error al crear el t√©cnico. Por favor, intenta de nuevo.';\n        this.loading = false;\n      }\n    });\n  }\n\n  toggleEstadoTecnico(tecnico: Tecnico) {\n    if (!tecnico.id) return;\n\n    const accion = tecnico.es_activo ? 'desactivar' : 'activar';\n    \n    this.loading = true;\n    this.error = '';\n\n    const observable = tecnico.es_activo \n      ? this.tecnicosService.desactivarTecnico(tecnico.id)\n      : this.tecnicosService.activarTecnico(tecnico.id);\n\n    observable.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe({\n      next: () => {\n        console.log(`T√©cnico ${accion}do exitosamente`);\n        this.cargarTecnicos(); // Recargar la lista\n        this.loading = false;\n      },\n      error: (error) => {\n        console.error(`Error al ${accion} t√©cnico:`, error);\n        this.error = `Error al ${accion} el t√©cnico. Por favor, intenta de nuevo.`;\n        this.loading = false;\n      }\n    });\n  }\n\n  onBusquedaChange(event: any) {\n    const valor = event.target.value;\n    this.busqueda = valor;\n    this.paginaActual = 1;\n    this.cargarTecnicos();\n  }\n\n  onOrdenarChange(event: any) {\n    const valor = event.target.value;\n    this.ordenarPor = valor;\n    this.cargarTecnicos();\n  }\n\n  onFiltrarTodos() {\n    this.busqueda = '';\n    this.paginaActual = 1;\n    this.cargarTecnicos();\n  }\n\n  onReintentar() {\n    this.cargarTecnicos();\n  }\n\n  cambiarPagina(pagina: number) {\n    this.paginaActual = pagina;\n    this.cargarTecnicos();\n  }\n\n  getTotalPaginas(): number {\n    return Math.ceil(this.totalTecnicos / this.porPagina);\n  }\n\n  getPaginas(): number[] {\n    const total = this.getTotalPaginas();\n    const paginas: number[] = [];\n    \n    for (let i = 1; i <= total; i++) {\n      paginas.push(i);\n    }\n    \n    return paginas;\n  }\n\n  esTecnicoActivo(tecnico: Tecnico): boolean {\n    return tecnico.es_activo && tecnico.rol?.nombre_rol !== 'Administrador';\n  }\n\n  getRolClass(rol: string): string {\n    switch (rol) {\n      case 'Administrador':\n        return 'rol-admin';\n      case 'T√©cnico':\n        return 'rol-tecnico';\n      case 'Usuario':\n        return 'rol-usuario';\n      default:\n        return 'rol-default';\n    }\n  }\n\n  getEstadoClass(tecnico: Tecnico): string {\n    return this.esTecnicoActivo(tecnico) ? 'activo' : 'inactivo';\n  }\n\n  // Funci√≥n para usar Math en el template\n  get Math() {\n    return Math;\n  }\n} ", "<ion-content>\n  <section class=\"dashboard-table\">\n    <!-- Header Section -->\n    <div class=\"table-header\">\n      <div class=\"table-header-left\">\n        <div class=\"table-title\">Tabla de t√©cnicos</div>\n        <div class=\"table-meta\">T√©cnicos: {{ totalTecnicos }}</div>  \n      </div>\n      \n      <!-- Mobile Search Bar -->\n      <div class=\"mobile-search\">\n        <input \n          type=\"text\" \n          placeholder=\"Buscar t√©cnico...\" \n          [value]=\"busqueda\"\n          (input)=\"onBusquedaChange($event)\"\n          />\n        <ion-icon name=\"search-outline\"></ion-icon>\n      </div>\n\n      <!-- Desktop Search and Actions -->\n      <div class=\"table-search desktop-only\">\n        <input \n          type=\"text\" \n          placeholder=\"Buscar...\" \n          [value]=\"busqueda\"\n          (input)=\"onBusquedaChange($event)\"\n          />\n        <select [value]=\"ordenarPor\" (change)=\"onOrdenarChange($event)\">\n          <option value=\"nombre_completo\">Ordenar por: Nombre</option>\n          <option value=\"fecha_creacion\">Ordenar por: Recientes</option>\n          <option value=\"rol_id\">Ordenar por: Rol</option>\n        </select>\n        <button \n          class=\"btn-filter\" \n          [title]=\"'Mostrar todos los t√©cnicos'\"\n          (click)=\"onFiltrarTodos()\">\n          <ion-icon name=\"filter-outline\"></ion-icon>\n          Todos\n        </button>\n        <div class=\"header-actions\">\n          <button class=\"btn-add\" (click)=\"abrirModalCrearTecnico()\">\n            <ion-icon name=\"add-circle\"></ion-icon>\n            A√±adir t√©cnico\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Mobile Actions -->\n    <div class=\"mobile-actions\">\n      <select class=\"mobile-filter\" [value]=\"ordenarPor\" (change)=\"onOrdenarChange($event)\">\n        <option value=\"nombre_completo\">Ordenar: Alfab√©tico</option>\n        <option value=\"fecha_creacion\">Ordenar: Recientes</option>\n        <option value=\"rol_id\">Ordenar: Rol</option>\n      </select>\n      <div class=\"mobile-buttons\">\n        <button class=\"btn-add\" (click)=\"abrirModalCrearTecnico()\">\n          <ion-icon name=\"add-circle\"></ion-icon>\n        </button>\n      </div>\n    </div>\n\n    <!-- Loading State -->\n    <div *ngIf=\"loading\" class=\"loading-state\">\n      <div class=\"loading-spinner\">\n        <ion-icon name=\"refresh-outline\" class=\"spinning\"></ion-icon>\n        <p>Cargando t√©cnicos...</p>\n      </div>\n    </div>\n\n    <!-- Error State -->\n    <div *ngIf=\"error && !loading\" class=\"error-state\">\n      <div class=\"error-message\">\n        <ion-icon name=\"alert-circle-outline\"></ion-icon>\n        <p>{{ error }}</p>\n        <button class=\"btn-retry\" (click)=\"onReintentar()\">\n          <ion-icon name=\"refresh-outline\"></ion-icon>\n          Reintentar\n        </button>\n      </div>\n    </div>\n\n    <!-- Compact Table View (replaces desktop table and mobile cards) -->\n    <div *ngIf=\"!loading && !error && tecnicos.length > 0\" class=\"compact-tecnicos-table\">\n      <div class=\"tecnicos-table\">\n        <div class=\"table-header\">\n          <div class=\"header-row\">\n            <div class=\"header-cell\">Nombre</div>\n            <div class=\"header-cell desktop-only\">Email</div>\n            <div class=\"header-cell desktop-only\">Tel√©fono</div>\n            <div class=\"header-cell desktop-only\">Rol</div>\n            <div class=\"header-cell desktop-only\">Fecha Creaci√≥n</div>\n            <div class=\"header-cell desktop-only\">Activo</div>\n            <div class=\"header-cell\">Acciones</div>\n          </div>\n        </div>\n        <div class=\"table-body\">\n          <div class=\"tecnico-row\" \n               *ngFor=\"let tecnico of tecnicos\"\n               [class]=\"getEstadoClass(tecnico)\">\n            <div class=\"tecnico-cell nombre-tecnico\">{{ tecnico.nombre_completo }}</div>\n            <div class=\"tecnico-cell email-tecnico desktop-only\">{{ tecnico.email || 'No especificado' }}</div>\n            <div class=\"tecnico-cell telefono-tecnico desktop-only\">{{ tecnico.telefono || 'No especificado' }}</div>\n            <div class=\"tecnico-cell rol-tecnico desktop-only\">\n              <span class=\"badge-rol\" [class]=\"getRolClass(tecnico.rol?.nombre_rol || '')\">\n                {{ tecnico.rol?.nombre_rol || 'Sin rol' }}\n              </span>\n            </div>\n            <div class=\"tecnico-cell fecha-tecnico desktop-only\">{{ tecnico.fecha_creacion | date:'dd/MM/yyyy' }}</div>\n            <div class=\"tecnico-cell estado-activo desktop-only\">\n              <span class=\"badge-estado\" [class]=\"esTecnicoActivo(tecnico) ? 'activo' : 'inactivo'\">\n                {{ esTecnicoActivo(tecnico) ? 'Activo' : 'Inactivo' }}\n              </span>\n            </div>\n            <div class=\"tecnico-cell acciones\">\n              <button class=\"btn-ver\" title=\"Ver detalles\" (click)=\"abrirModalEditarTecnico(tecnico)\">\n                <ion-icon name=\"eye-outline\"></ion-icon>\n              </button>\n              <button \n                class=\"btn-toggle-estado\" \n                [title]=\"esTecnicoActivo(tecnico) ? 'Desactivar t√©cnico' : 'Activar t√©cnico'\"\n                (click)=\"toggleEstadoTecnico(tecnico)\">\n                <ion-icon [name]=\"esTecnicoActivo(tecnico) ? 'pause-circle' : 'play-circle'\"></ion-icon>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Paginaci√≥n -->\n    <div *ngIf=\"!loading && !error && tecnicos.length > 0\" class=\"table-pagination\">\n      <div class=\"pagination-info\">\n        Mostrando {{ (paginaActual - 1) * porPagina + 1 }} - {{ Math.min(paginaActual * porPagina, totalTecnicos) }} de {{ totalTecnicos }} t√©cnicos\n      </div>\n      <div class=\"pagination\">\n        <button \n          [disabled]=\"paginaActual === 1\"\n          (click)=\"cambiarPagina(paginaActual - 1)\">\n          Anterior\n        </button>\n        <button \n          *ngFor=\"let pagina of getPaginas()\"\n          [class.active]=\"pagina === paginaActual\"\n          (click)=\"cambiarPagina(pagina)\">\n          {{ pagina }}\n        </button>\n        <button \n          [disabled]=\"paginaActual === getTotalPaginas()\"\n          (click)=\"cambiarPagina(paginaActual + 1)\">\n          Siguiente\n        </button>\n      </div>\n    </div>\n\n    <!-- Estado de datos vac√≠os -->\n    <div *ngIf=\"!loading && !error && tecnicos.length === 0\" class=\"no-data-container\">\n      <div class=\"no-data-message\">\n        <ion-icon name=\"construct-outline\"></ion-icon>\n        <h3>No hay t√©cnicos</h3>\n        <p>A√∫n no se han creado t√©cnicos. Crea el primero para comenzar.</p>\n        <button class=\"btn-create\" (click)=\"abrirModalCrearTecnico()\">\n          <ion-icon name=\"add-circle\"></ion-icon>\n          Crear t√©cnico\n        </button>\n      </div>\n    </div>\n\n  </section>\n</ion-content> "],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBM,IAAO,mBAAP,MAAO,iBAAe;EAK1B,YACU,uBACA,mBAAoC;AADpC,SAAA,wBAAA;AACA,SAAA,oBAAA;AALF,SAAA,kBAAkB,IAAI,gBAA2B,CAAA,CAAE;AACpD,SAAA,YAAY,KAAK,gBAAgB,aAAY;AAMlD,SAAK,WAAW,KAAK,sBAAsB,UAAS;EACtD;;;;EAKA,YACE,SAAiB,GACjB,YAAoB,IACpB,UACA,YACA,OACA,cAAuB,OAAK;AAE5B,QAAI,QAAQ,KAAK,SACd,KAAK,UAAU,EACf,OAAO;;;SAGL,EAAE,OAAO,QAAO,CAAE;AAGvB,QAAI,UAAU;AACZ,cAAQ,MAAM,GAAG,0BAA0B,QAAQ,kBAAkB,QAAQ,GAAG;IAClF;AAGA,QAAI,aAAa;AACf,cAAQ,MAAM,GAAG,aAAa,IAAI;IACpC;AAGA,UAAM,SAAS,SAAS,KAAK;AAC7B,YAAQ,MACL,MAAM,OAAO,QAAQ,YAAY,CAAC,EAClC,MAAM,cAAc,kBAAkB,EAAE,WAAW,UAAU,MAAK,CAAE;AAEvE,WAAO,KAAK,KAAK,EAAE,KACjB,IAAI,CAAC,EAAE,MAAM,OAAO,MAAK,MAAM;AAC7B,UAAI;AAAO,cAAM;AAEjB,YAAM,WAAW;AACjB,WAAK,gBAAgB,KAAK,QAAQ;AAElC,aAAO;QACL;QACA,OAAO,SAAS;QAChB;QACA,YAAY;;IAEhB,CAAC,GACD,WAAW,WAAQ;AACjB,cAAQ,MAAM,iCAA8B,KAAK;AACjD,YAAM;IACR,CAAC,CAAC;EAEN;;;;EAKA,WAAW,IAAU;AACnB,WAAO,KACL,KAAK,SACF,KAAK,UAAU,EACf,OAAO;;;SAGP,EACA,GAAG,MAAM,EAAE,EACX,OAAM,CAAE,EACX,KACA,IAAI,CAAC,EAAE,MAAM,MAAK,MAAM;AACtB,UAAI;AAAO,cAAM;AACjB,aAAO;IACT,CAAC,CAAC;EAEN;;;;EAKA,aAAa,SAA4B;AAEvC,QAAI,CAAC,KAAK,oBAAoB,OAAO,GAAG;AAEtC,UAAK,QAAgB,IAAI;AACvB,gBAAQ,IAAI,6DAAmD;AAC/D,eAAO,GAAG,OAAc;MAC1B;AACA,aAAO,WAAW,MAAM,IAAI,MAAM,oCAA8B,CAAC;IACnE;AAEA,YAAQ,IAAI,kDAAqC;MAC/C,OAAO,QAAQ;MACf,QAAQ,QAAQ;MAChB,QAAQ,QAAQ;KACjB;AAED,WAAO,KACL,KAAK,oBAAoB,OAAO,CAAC,EACjC,KACA,IAAI,CAAC,EAAE,MAAM,MAAK,MAAM;AAhI9B;AAiIQ,UAAI,OAAO;AAET,gBAAQ,MAAM,iCAA4B,KAAK;AAE/C,aAAI,WAAM,YAAN,mBAAe,SAAS,wCAAwC;AAClE,gBAAM,IAAI,MAAM,qCAAqC;QACvD,WAAW,MAAM,SAAS,SAAS;AACjC,gBAAM,IAAI,MAAM,oCAAoC;QACtD,YAAW,WAAM,YAAN,mBAAe,SAAS,8BAA8B;AAC/D,gBAAM,IAAI,MAAM,+DAAyD;QAC3E,YAAW,WAAM,YAAN,mBAAe,SAAS,6CAA6C;AAC9E,gBAAM,IAAI,MAAM,mDAAgD;QAClE,YAAW,WAAM,YAAN,mBAAe,SAAS,qCAAqC;AACtE,gBAAM,IAAI,MAAM,sCAAmC;QACrD,YAAW,WAAM,YAAN,mBAAe,SAAS,wBAAwB;AACzD,gBAAM,IAAI,MAAM,kCAAkC;QACpD,YAAW,WAAM,YAAN,mBAAe,SAAS,oBAAoB;AACrD,gBAAM,IAAI,MAAM,sDAAmD;QACrE,OAAO;AACL,gBAAM;QACR;MACF;AAEA,UAAI,CAAC,MAAM;AACT,cAAM,IAAI,MAAM,qDAA+C;MACjE;AAEA,cAAQ,IAAI,0CAAkC,IAAI;AAElD,YAAM,eAAe;AACrB,YAAM,mBAAmB,KAAK,gBAAgB;AAC9C,WAAK,gBAAgB,KAAK,CAAC,cAAc,GAAG,gBAAgB,CAAC;AAG7D,WAAK,kBAAkB,cAAc,UAAU;AAE/C,aAAO;IACT,CAAC,GACD,WAAW,WAAQ;AACjB,cAAQ,MAAM,uCAAkC,KAAK;AACrD,YAAM;IACR,CAAC,CAAC;EAEN;;;;EAKQ,oBAAoB,SAA4B;AAjL1D;AAoLI,QAAK,QAAgB,IAAI;AACvB,cAAQ,IAAI,oEAAsD;AAClE,aAAO;IACT;AAEA,QAAI,GAAC,aAAQ,oBAAR,mBAAyB,SAAQ;AACpC,cAAQ,MAAM,yDAAiD;AAC/D,aAAO;IACT;AAEA,QAAI,GAAC,aAAQ,UAAR,mBAAe,SAAQ;AAC1B,cAAQ,MAAM,+CAAuC;AACrD,aAAO;IACT;AAEA,QAAI,GAAC,aAAQ,aAAR,mBAAkB,SAAQ;AAC7B,cAAQ,MAAM,kDAA0C;AACxD,aAAO;IACT;AAEA,QAAI,QAAQ,SAAS,SAAS,GAAG;AAC/B,cAAQ,MAAM,yEAAiE;AAC/E,aAAO;IACT;AAEA,QAAI,GAAC,aAAQ,WAAR,mBAAgB,SAAQ;AAC3B,cAAQ,MAAM,gDAAwC;AACtD,aAAO;IACT;AAGA,UAAM,aAAa;AACnB,QAAI,CAAC,WAAW,KAAK,QAAQ,KAAK,GAAG;AACnC,cAAQ,MAAM,4DAAiD;AAC/D,aAAO;IACT;AAEA,YAAQ,IAAI,uCAA+B;AAC3C,WAAO;EACT;;;;EAKc,oBAAoB,SAA4B;;AAC5D,YAAM,YAAY;AAElB,UAAI;AACF,gBAAQ,IAAI,oDAA6C;AAGzD,cAAM,EAAE,MAAM,cAAc,OAAO,WAAU,IAAK,MAAM,KAAK,SAC1D,KAAK,UAAU,EACf,OAAO,WAAW,EAClB,GAAG,SAAS,QAAQ,KAAK,EACzB,YAAW;AAEd,YAAI,cAAc,WAAW,SAAS,YAAY;AAChD,kBAAQ,MAAM,gDAA2C,UAAU;AACnE,iBAAO,EAAE,MAAM,MAAM,OAAO,WAAU;QACxC;AAEA,YAAI,cAAc;AAChB,kBAAQ,KAAK,mCAAyB,YAAY;AAClD,iBAAO;YACL,MAAM;YACN,OAAO,IAAI,MAAM,qCAAqC;;QAE1D;AAEA,gBAAQ,IAAI,uDAAgD;AAG5D,cAAM,EAAE,MAAM,UAAU,OAAO,UAAS,IAAK,MAAM,KAAK,SAAS,KAAK,OAAO;UAC3E,OAAO,QAAQ;UACf,UAAU,QAAQ;UAClB,SAAS;YACP,MAAM;cACJ,iBAAiB,QAAQ;cACzB,UAAU,QAAQ,YAAY;;;SAGnC;AAED,YAAI,WAAW;AACb,kBAAQ,MAAM,0CAAqC,SAAS;AAC5D,iBAAO,EAAE,MAAM,MAAM,OAAO,UAAS;QACvC;AAEA,YAAI,CAAC,SAAS,MAAM;AAClB,kBAAQ,MAAM,yCAAiC;AAC/C,iBAAO,EAAE,MAAM,MAAM,OAAO,IAAI,MAAM,qCAAqC,EAAC;QAC9E;AAEA,gBAAQ,IAAI,kCAA6B,EAAE,IAAI,SAAS,KAAK,IAAI,OAAO,SAAS,KAAK,MAAK,CAAE;AAG7F,eAAO,MAAM,KAAK,iBAAiB,SAAS,KAAK,IAAI,OAAO;MAE9D,SAAS,OAAO;AACd,gBAAQ,MAAM,gDAA2C,KAAK;AAC9D,eAAO,EAAE,MAAM,MAAM,MAAK;MAC5B;IACF;;;;;EAKc,iBAAiB,QAAgB,SAA4B;;AAhS7E;AAiSI,cAAQ,IAAI,uDAAgD;AAE5D,YAAM,gBAAgB;AACtB,YAAM,YAAY;AAClB,UAAI,YAAY;AAEhB,eAAS,UAAU,GAAG,WAAW,eAAe,WAAW;AACzD,YAAI;AACF,kBAAQ,IAAI,qBAAc,OAAO,IAAI,aAAa,4BAA4B;AAG9E,cAAI,UAAU,GAAG;AACf,kBAAM,QAAQ,YAAY;AAC1B,oBAAQ,IAAI,0BAAgB,KAAK,yBAAyB;AAC1D,kBAAM,IAAI,QAAQ,aAAW,WAAW,SAAS,KAAK,CAAC;UACzD;AAGA,gBAAM,EAAE,MAAM,kBAAkB,OAAO,WAAU,IAAK,MAAM,KAAK,SAC9D,KAAK,UAAU,EACf,OAAO;;;WAGP,EACA,GAAG,MAAM,MAAM,EACf,YAAW;AAEd,cAAI,kBAAkB;AACpB,oBAAQ,IAAI,mCAA8B,gBAAgB;AAG1D,gBAAI,iBAAiB,WAAW,QAAQ,QAAQ;AAC9C,sBAAQ,IAAI,qDAA8C;AAE1D,oBAAM,EAAE,MAAM,oBAAoB,OAAO,YAAW,IAAK,MAAM,KAAK,SACjE,KAAK,UAAU,EACf,OAAO;gBACN,QAAQ,QAAQ;gBAChB,iBAAiB,QAAQ;gBACzB,UAAU,QAAQ;gBAClB,sBAAqB,oBAAI,KAAI,GAAG,YAAW;eAC5C,EACA,GAAG,MAAM,MAAM,EACf,OAAO;;;eAGP,EACA,OAAM;AAET,kBAAI,aAAa;AACf,wBAAQ,KAAK,sEAA4D,WAAW;AACpF,uBAAO,EAAE,MAAM,kBAAkB,OAAO,KAAI;cAC9C;AAEA,sBAAQ,IAAI,yCAAoC;AAChD,qBAAO,EAAE,MAAM,oBAAoB,OAAO,KAAI;YAChD;AAEA,mBAAO,EAAE,MAAM,kBAAkB,OAAO,KAAI;UAC9C;AAGA,gBAAM,cAAc;YAClB,IAAI;YACJ,iBAAiB,QAAQ,gBAAgB,KAAI;YAC7C,OAAO,QAAQ,MAAM,KAAI,EAAG,YAAW;YACvC,YAAU,aAAQ,aAAR,mBAAkB,WAAU;YACtC,QAAQ,QAAQ;YAChB,YAAW,aAAQ,cAAR,YAAqB;YAChC,iBAAgB,oBAAI,KAAI,GAAG,YAAW;;AAGxC,kBAAQ,IAAI,2CAAoC,WAAW;AAE3D,gBAAM,EAAE,MAAM,MAAK,IAAK,MAAM,KAAK,SAChC,KAAK,UAAU,EACf,OAAO,CAAC,WAAW,CAAC,EACpB,OAAO;;;WAGP,EACA,OAAM;AAET,cAAI,OAAO;AACT,wBAAY;AACZ,oBAAQ,MAAM,2BAAsB,OAAO,KAAK,KAAK;AAGrD,gBAAI,MAAM,SAAS,SAAS;AAC1B,sBAAQ,IAAI,wEAAiE;AAC7E,oBAAM,EAAE,MAAM,cAAa,IAAK,MAAM,KAAK,SACxC,KAAK,UAAU,EACf,OAAO;;;eAGP,EACA,GAAG,MAAM,MAAM,EACf,OAAM;AAET,kBAAI,eAAe;AACjB,wBAAQ,IAAI,qCAAgC;AAC5C,uBAAO,EAAE,MAAM,eAAe,OAAO,KAAI;cAC3C;YACF;AAGA,gBAAI,YAAY,eAAe;AAC7B;YACF;AAEA;UACF;AAEA,kBAAQ,IAAI,0CAAqC;AACjD,iBAAO,EAAE,MAAM,OAAO,KAAI;QAE5B,SAAS,OAAO;AACd,sBAAY;AACZ,kBAAQ,MAAM,kCAA0B,OAAO,KAAK,KAAK;AAEzD,cAAI,YAAY,eAAe;AAC7B;UACF;AAEA;QACF;MACF;AAGA,cAAQ,IAAI,4DAAkD;AAC9D,UAAI;AACF,cAAM,EAAE,MAAM,WAAW,OAAO,WAAU,IAAK,MAAM,KAAK,SACvD,KAAK,UAAU,EACf,OAAO;;;SAGP,EACA,GAAG,MAAM,MAAM,EACf,OAAM;AAET,YAAI,WAAW;AACb,kBAAQ,IAAI,gDAAwC;AACpD,iBAAO,EAAE,MAAM,WAAW,OAAO,KAAI;QACvC;MACF,SAAS,YAAY;AACnB,gBAAQ,MAAM,sCAA8B,UAAU;MACxD;AAEA,cAAQ,MAAM,oCAA+B;AAC7C,aAAO,EAAE,MAAM,MAAM,OAAO,aAAa,IAAI,MAAM,oCAAoC,EAAC;IAC1F;;;;;EAKA,kBAAkB,IAAY,SAAiC;AAC7D,UAAM,oBAAoB,iCACrB,UADqB;MAExB,sBAAqB,oBAAI,KAAI,GAAG,YAAW;;AAG7C,WAAO,KACL,KAAK,SACF,KAAK,UAAU,EACf,OAAO,iBAAiB,EACxB,GAAG,MAAM,EAAE,EACX,OAAO;;;SAGP,EACA,OAAM,CAAE,EACX,KACA,IAAI,CAAC,EAAE,MAAM,MAAK,MAAM;AACtB,UAAI;AAAO,cAAM;AAEjB,YAAM,qBAAqB;AAC3B,YAAM,mBAAmB,KAAK,gBAAgB;AAC9C,YAAM,QAAQ,iBAAiB,UAAU,OAAK,EAAE,OAAO,EAAE;AACzD,UAAI,UAAU,IAAI;AAChB,yBAAiB,KAAK,IAAI;AAC1B,aAAK,gBAAgB,KAAK,CAAC,GAAG,gBAAgB,CAAC;MACjD;AAGA,WAAK,kBAAkB,cAAc,UAAU;AAE/C,aAAO;IACT,CAAC,CAAC;EAEN;;;;EAKA,kBAAkB,IAAU;AAC1B,WAAO,KACL,KAAK,SACF,KAAK,UAAU,EACf,OAAO;MACN,WAAW;MACX,sBAAqB,oBAAI,KAAI,GAAG,YAAW;KAC5C,EACA,GAAG,MAAM,EAAE,CAAC,EACf,KACA,IAAI,CAAC,EAAE,MAAK,MAAM;AAChB,UAAI;AAAO,cAAM;AAEjB,YAAM,mBAAmB,KAAK,gBAAgB;AAC9C,YAAM,QAAQ,iBAAiB,UAAU,OAAK,EAAE,OAAO,EAAE;AACzD,UAAI,UAAU,IAAI;AAChB,yBAAiB,KAAK,EAAE,YAAY;AACpC,aAAK,gBAAgB,KAAK,CAAC,GAAG,gBAAgB,CAAC;MACjD;AAGA,WAAK,kBAAkB,cAAc,UAAU;IACjD,CAAC,CAAC;EAEN;;;;EAKA,eAAe,IAAU;AACvB,WAAO,KACL,KAAK,SACF,KAAK,UAAU,EACf,OAAO;MACN,WAAW;MACX,sBAAqB,oBAAI,KAAI,GAAG,YAAW;KAC5C,EACA,GAAG,MAAM,EAAE,CAAC,EACf,KACA,IAAI,CAAC,EAAE,MAAK,MAAM;AAChB,UAAI;AAAO,cAAM;AAEjB,YAAM,mBAAmB,KAAK,gBAAgB;AAC9C,YAAM,QAAQ,iBAAiB,UAAU,OAAK,EAAE,OAAO,EAAE;AACzD,UAAI,UAAU,IAAI;AAChB,yBAAiB,KAAK,EAAE,YAAY;AACpC,aAAK,gBAAgB,KAAK,CAAC,GAAG,gBAAgB,CAAC;MACjD;AAGA,WAAK,kBAAkB,cAAc,UAAU;IACjD,CAAC,CAAC;EAEN;;;;EAKA,eAAe,SAAe;AAC5B,WAAO,KACL,KAAK,SACF,KAAK,UAAU,EACf,OAAO;;;SAGP,EACA,GAAG,0BAA0B,OAAO,kBAAkB,OAAO,GAAG,EAChE,GAAG,aAAa,IAAI,EACpB,MAAM,EAAE,CAAC,EACZ,KACA,IAAI,CAAC,EAAE,MAAM,MAAK,MAAM;AACtB,UAAI;AAAO,cAAM;AACjB,aAAO;IACT,CAAC,CAAC;EAEN;;;;EAKA,sBAAmB;AACjB,WAAO,KAAK,gBAAgB;EAC9B;;;;EAKM,0BAAuB;;AAC3B,UAAI;AACF,cAAM,EAAE,MAAM,MAAK,IAAK,MAAM,KAAK,SAChC,KAAK,OAAO,EACZ,OAAO,gBAAgB,EACvB,MAAM,YAAY;AAErB,YAAI,OAAO;AACT,kBAAQ,MAAM,kCAA6B,KAAK;AAChD,gBAAM;QACR;AAEA,gBAAQ,IAAI,oCAA+B,IAAI;AAC/C,eAAO,QAAQ,CAAA;MACjB,SAAS,OAAO;AACd,gBAAQ,MAAM,2CAAsC,KAAK;AACzD,cAAM;MACR;IACF;;;;;;EAMM,oBAAiB;;AACrB,UAAI;AACF,gBAAQ,IAAI,8DAAoD;AAEhE,cAAM,QAAQ,MAAM,KAAK,wBAAuB;AAEhD,gBAAQ,IAAI,4OAAyC;AACrD,gBAAQ,IAAI,gDAAsC;AAClD,gBAAQ,IAAI,4OAAyC;AAErD,cAAM,QAAQ,SAAM;AAClB,kBAAQ,IAAI,GAAG,IAAI,UAAU,KAAK,IAAI,EAAE,EAAE;QAC5C,CAAC;AAED,gBAAQ,IAAI,4OAAyC;AACrD,gBAAQ,IAAI,uDAA6C;AAGzD,gBAAQ,IAAI,yDAA+C;AAC3D,gBAAQ,IAAI,sBAAsB;AAClC,cAAM,QAAQ,SAAM;AAClB,kBAAQ,IAAI,eAAe,IAAI,EAAE,cAAc,IAAI,UAAU,0BAA0B;QACzF,CAAC;AACD,gBAAQ,IAAI,IAAI;MAElB,SAAS,OAAO;AACd,gBAAQ,MAAM,2CAAsC,KAAK;MAC3D;IACF;;;;;EAKA,kBAAe;AACb,SAAK,gBAAgB,KAAK,CAAA,CAAE;EAC9B;;;mCApmBW,kBAAe,mBAAA,qBAAA,GAAA,mBAAA,iBAAA,CAAA;AAAA;oFAAf,kBAAe,SAAf,iBAAe,WAAA,YAFd,OAAM,CAAA;AAEd,IAAO,kBAAP;;sEAAO,iBAAe,CAAA;UAH3B;WAAW;MACV,YAAY;KACb;;;;;;;AEFK,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,YAAA,EAAA;AACA,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,OAAA,GAAA;;;;;AA8BI,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,YAAA,EAAA;AACA,IAAA,yBAAA,GAAA,MAAA;AAAM,IAAA,iBAAA,GAAA,+BAAA;AAA6B,IAAA,uBAAA,EAAO;;;;;AAUxC,IAAA,yBAAA,GAAA,MAAA;AAAsD,IAAA,iBAAA,GAAA,8BAAA;AAAwB,IAAA,uBAAA;;;;;AAHhF,IAAA,yBAAA,GAAA,UAAA,EAAA;AAEE,IAAA,iBAAA,CAAA;AACA,IAAA,qBAAA,GAAA,+DAAA,GAAA,GAAA,QAAA,EAAA;AACF,IAAA,uBAAA;;;;AAJ6C,IAAA,qBAAA,SAAA,OAAA,KAAA,EAAmB,YAAA,OAAA,UAAA,wBAAA;AAE9D,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,OAAA,GAAA;AACO,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,UAAA,wBAAA;;;;;;AANX,IAAA,yBAAA,GAAA,UAAA,EAAA;AAA8B,IAAA,2BAAA,iBAAA,SAAA,8EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,YAAA,QAAA,MAAA,MAAA,OAAA,YAAA,SAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAC5B,IAAA,qBAAA,UAAA,SAAA,yEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAU,OAAA,cAAA,CAAe;IAAA,CAAA;AACzB,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAiB,IAAA,iBAAA,GAAA,mBAAA;AAAiB,IAAA,uBAAA;AAClC,IAAA,qBAAA,GAAA,wDAAA,GAAA,GAAA,UAAA,EAAA;AAKF,IAAA,uBAAA;;;;AAR8B,IAAA,2BAAA,WAAA,OAAA,YAAA,MAAA;AAGJ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,gBAAA;;;;;AAQ1B,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,YAAA,EAAA;AACA,IAAA,yBAAA,GAAA,GAAA;AAAG,IAAA,iBAAA,GAAA,yHAAA;AACW,IAAA,uBAAA,EAAI;;;;;AAWd,IAAA,yBAAA,GAAA,GAAA,EAA8B,GAAA,QAAA;AACpB,IAAA,iBAAA,GAAA,WAAA;AAAS,IAAA,uBAAA;AAAU,IAAA,iBAAA,CAAA;AAC7B,IAAA,uBAAA;;;;AAD6B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,kBAAA,OAAA,YAAA,MAAA,GAAA,GAAA;;;;;AARnC,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAmE,GAAA,OAAA,EAAA,EAC1C,GAAA,OAAA,EAAA;AAEnB,IAAA,oBAAA,GAAA,YAAA,EAAA;AACA,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAyB,IAAA,iBAAA,CAAA;AAAqC,IAAA,uBAAA,EAAO;AAEvE,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,qBAAA,GAAA,gDAAA,GAAA,GAAA,KAAA,EAAA;AAGF,IAAA,uBAAA,EAAM,EACF;;;;AAPuB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,YAAA,OAAA,YAAA,MAAA,CAAA;AAGrB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,YAAA,MAAA;;;;;AAeV,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,YAAA,EAAA;AACA,IAAA,yBAAA,GAAA,GAAA;AAAG,IAAA,iBAAA,GAAA,+EAAA;AAAuE,IAAA,uBAAA,EAAI;;;;;;AAGhF,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA6C,GAAA,OAAA;AACpC,IAAA,iBAAA,GAAA,gBAAA;AAAW,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAuB,IAAA,iBAAA,GAAA,GAAA;AAAC,IAAA,uBAAA,EAAO;AACjD,IAAA,yBAAA,GAAA,SAAA,EAAA;AAAuB,IAAA,2BAAA,iBAAA,SAAA,0EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,YAAA,UAAA,MAAA,MAAA,OAAA,YAAA,WAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AACoC,IAAA,qBAAA,SAAA,SAAA,oEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,cAAA,CAAe;IAAA,CAAA;AADnF,IAAA,uBAAA;AAEA,IAAA,yBAAA,GAAA,OAAA,EAAA;AAA2B,IAAA,iBAAA,GAAA,wBAAA;AAAmB,IAAA,uBAAA,EAAM;;;;AAF7B,IAAA,oBAAA,CAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,YAAA,QAAA;;;;;AAUrB,IAAA,oBAAA,GAAA,YAAA,EAAA;;;;;AACA,IAAA,oBAAA,GAAA,YAAA,EAAA;;;;;AAIA,IAAA,oBAAA,GAAA,YAAA,EAAA;;;;;AACA,IAAA,oBAAA,GAAA,YAAA,EAAA;;;;;AAKA,IAAA,oBAAA,GAAA,YAAA,EAAA;;;;;AACA,IAAA,oBAAA,GAAA,YAAA,EAAA;;;;;AAHF,IAAA,yBAAA,GAAA,OAAA,EAAA;AAEE,IAAA,qBAAA,GAAA,uDAAA,GAAA,GAAA,YAAA,EAAA,EAAmF,GAAA,uDAAA,GAAA,GAAA,YAAA,EAAA;AAEnF,IAAA,yBAAA,GAAA,MAAA;AAAM,IAAA,iBAAA,GAAA,sCAAA;AAA8B,IAAA,uBAAA,EAAO;;;;AAJhB,IAAA,sBAAA,SAAA,OAAA,eAAA,OAAA,YAAA,SAAA,UAAA,CAAA;AAEgB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,YAAA,SAAA,UAAA,CAAA;AACT,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,YAAA,SAAA,SAAA,CAAA;;;;;AAIlC,IAAA,oBAAA,GAAA,YAAA,EAAA;;;;;AACA,IAAA,oBAAA,GAAA,YAAA,EAAA;;;;;AAgBR,IAAA,oBAAA,GAAA,YAAA,EAAA;;;;;AACA,IAAA,oBAAA,GAAA,YAAA,EAAA;;;ADnIR,SAAS;EACP,iBAAiB;EACjB,gBAAgB;EAChB,kBAAkB;EAClB,gBAAgB;EAChB,gBAAgB;EAChB,kBAAkB;EAClB,uBAAuB;EACvB,wBAAwB;EACxB,8BAA8B;EAC9B,4BAA4B;EAC5B,mBAAmB;EACnB,mBAAmB;CACpB;AAaK,IAAO,8BAAP,MAAO,4BAA0B;EAwBrC,YACU,iBACA,iBACA,cAA0B;AAF1B,SAAA,kBAAA;AACA,SAAA,kBAAA;AACA,SAAA,eAAA;AA1BD,SAAA,OAA2B;AAGpC,SAAA,cAAc;AACd,SAAA,UAAU;AACF,SAAA,WAAW,IAAI,QAAO;AAE9B,SAAA,cAAmC;MACjC,iBAAiB;MACjB,OAAO;MACP,UAAU;MACV,UAAU;MACV,QAAQ;;MACR,WAAW;;AAIb,SAAA,mBAA+E,CAAA;AAE/E,SAAA,UAAU;AACV,SAAA,eAAe;AACf,SAAA,QAAQ;AAON,aAAS;MACP;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;KACD;EACH;EAEA,WAAQ;AACN,SAAK,cAAc,KAAK,SAAS;AACjC,SAAK,uBAAsB;AAG3B,QAAI,KAAK,eAAe,KAAK,SAAS;AACpC,WAAK,mBAAkB;IACzB;EACF;EAEA,cAAW;AACT,SAAK,SAAS,KAAI;AAClB,SAAK,SAAS,SAAQ;EACxB;EAEQ,qBAAkB;AAlG5B;AAmGI,QAAI,CAAC,KAAK;AAAS;AAEnB,SAAK,cAAc;MACjB,iBAAiB,KAAK,QAAQ,mBAAmB;MACjD,OAAO,KAAK,QAAQ,SAAS;MAC7B,UAAU;;MACV,UAAU,KAAK,QAAQ,YAAY;MACnC,UAAQ,UAAK,QAAQ,QAAb,mBAAkB,OAAM;MAChC,YAAW,UAAK,QAAQ,cAAb,YAA0B;;EAEzC;;;;EAKA,yBAAsB;AACpB,SAAK,eAAe;AAGpB,SAAK,KAAK,gBAAgB,wBAAuB,CAAE,EAAE,KACnD,UAAU,KAAK,QAAQ,CAAC,EACxB,UAAU;MACV,MAAM,CAAC,UAAS;AACd,aAAK,mBAAmB,MAAM,IAAI,UAAQ;UACxC,OAAO,IAAI;UACX,OAAO,IAAI;UACX,aAAa,KAAK,aAAa,kBAAkB,IAAI,UAAqB;UAC1E;AAGF,YAAI,CAAC,KAAK,aAAa;AACrB,gBAAM,aAAa,KAAK,iBAAiB,KAAK,OAAK,EAAE,UAAU,YAAS;AACxE,cAAI,YAAY;AACd,iBAAK,YAAY,SAAS,WAAW;UACvC;QACF;AAEA,aAAK,eAAe;AACpB,gBAAQ,IAAI,0BAAqB,KAAK,gBAAgB;MACxD;MACA,OAAO,CAAC,UAAS;AACf,gBAAQ,MAAM,iCAA4B,KAAK;AAC/C,aAAK,eAAe;AAGpB,aAAK,mBAAmB;UACtB;YACE,OAAO;YACP,OAAO;YACP,aAAa,KAAK,aAAa,kBAAkB,QAAQ,aAAa;;UAExE;YACE,OAAO;YACP,OAAO;YACP,aAAa,KAAK,aAAa,kBAAkB,QAAQ,OAAO;;UAElE;YACE,OAAO;YACP,OAAO;YACP,aAAa,KAAK,aAAa,kBAAkB,QAAQ,OAAO;;;AAKpE,YAAI,CAAC,KAAK,aAAa;AACrB,eAAK,YAAY,SAAS,KAAK,iBAAiB,CAAC,EAAE;QACrD;AACA,aAAK,QAAQ;MACf;KACD;EACH;EAEM,UAAO;;AACX,YAAM,KAAK,gBAAgB,QAAQ,MAAM,QAAQ;IACnD;;EAEM,eAAY;;AAChB,UAAI,CAAC,KAAK,kBAAiB,GAAI;AAC7B;MACF;AAGA,UAAI,KAAK,YAAY,WAAW,0BAA0B;AACxD,aAAK,QAAQ;AACb;MACF;AAEA,WAAK,UAAU;AACf,WAAK,QAAQ;AAEb,UAAI;AACF,YAAI,KAAK,eAAe,KAAK,SAAS;AAEpC,eAAK,gBAAgB,kBAAkB,KAAK,QAAQ,IAAI,KAAK,WAAW,EAAE,KACxE,UAAU,KAAK,QAAQ,CAAC,EACxB,UAAU;YACV,MAAM,CAAC,YAAW;AAChB,sBAAQ,IAAI,+CAAuC,OAAO;AAC1D,mBAAK,gBAAgB,QAAQ,SAAS,SAAS;YACjD;YACA,OAAO,CAAC,UAAS;AACf,sBAAQ,MAAM,0CAAkC,KAAK;AACrD,mBAAK,qBAAqB,KAAK;AAC/B,mBAAK,UAAU;YACjB;WACD;QACH,OAAO;AAEL,eAAK,gBAAgB,aAAa,KAAK,WAAW,EAAE,KAClD,UAAU,KAAK,QAAQ,CAAC,EACxB,UAAU;YACV,MAAM,CAAC,YAAW;AAChB,sBAAQ,IAAI,0CAAkC,OAAO;AACrD,mBAAK,gBAAgB,QAAQ,SAAS,SAAS;YACjD;YACA,OAAO,CAAC,UAAS;AACf,sBAAQ,MAAM,qCAA6B,KAAK;AAChD,mBAAK,qBAAqB,KAAK;AAC/B,mBAAK,UAAU;YACjB;WACD;QACH;MACF,SAAS,OAAO;AACd,aAAK,QAAQ;AACb,gBAAQ,MAAM,4BAAuB,KAAK;AAC1C,aAAK,UAAU;MACjB;IACF;;;;;EAKQ,qBAAqB,OAAU;AACrC,YAAQ,IAAI,+BAAwB,KAAK;AAEzC,QAAI,OAAO,UAAU,UAAU;AAC7B,WAAK,QAAQ;IACf,WAAW,+BAAO,SAAS;AAEzB,UAAI,MAAM,QAAQ,SAAS,qCAAqC,GAAG;AACjE,aAAK,QAAQ;MACf,WAAW,MAAM,QAAQ,SAAS,qBAAqB,KAAK,MAAM,SAAS,SAAS;AAClF,aAAK,QAAQ;MACf,WAAW,MAAM,QAAQ,SAAS,2BAA2B,GAAG;AAC9D,aAAK,QAAQ;MACf,WAAW,MAAM,QAAQ,SAAS,qBAAqB,GAAG;AACxD,aAAK,QAAQ;MACf,WAAW,MAAM,QAAQ,SAAS,0CAA0C,GAAG;AAC7E,aAAK,QAAQ;MACf,WAAW,MAAM,QAAQ,SAAS,kCAAkC,GAAG;AACrE,aAAK,QAAQ;MACf,WAAW,MAAM,QAAQ,SAAS,wBAAwB,GAAG;AAC3D,aAAK,QAAQ;MACf,OAAO;AACL,aAAK,QAAQ,iBAAY,MAAM,OAAO;MACxC;IACF,OAAO;AACL,WAAK,QAAQ;IACf;EACF;EAEA,oBAAiB;AACf,QAAI,CAAC,KAAK,YAAY,gBAAgB,KAAI,GAAI;AAC5C,WAAK,QAAQ;AACb,aAAO;IACT;AAEA,QAAI,CAAC,KAAK,YAAY,MAAM,KAAI,GAAI;AAClC,WAAK,QAAQ;AACb,aAAO;IACT;AAEA,QAAI,CAAC,KAAK,aAAa,KAAK,YAAY,KAAK,GAAG;AAC9C,WAAK,QAAQ;AACb,aAAO;IACT;AAGA,QAAI,CAAC,KAAK,aAAa;AACrB,UAAI,CAAC,KAAK,YAAY,SAAS,KAAI,GAAI;AACrC,aAAK,QAAQ;AACb,eAAO;MACT;AAEA,UAAI,KAAK,YAAY,SAAS,SAAS,GAAG;AACxC,aAAK,QAAQ;AACb,eAAO;MACT;IACF;AAEA,QAAI,CAAC,KAAK,YAAY,QAAQ;AAC5B,WAAK,QAAQ;AACb,aAAO;IACT;AAGA,QAAI,CAAC,KAAK,YAAY,SAAS,CAAC,KAAK,aAAa,KAAK,YAAY,KAAK,GAAG;AACzE,WAAK,QAAQ;AACb,aAAO;IACT;AAEA,SAAK,QAAQ;AACb,WAAO;EACT;EAEA,aAAa,OAAa;AACxB,UAAM,aAAa;AACnB,WAAO,WAAW,KAAK,KAAK;EAC9B;EAEA,cAAW;AACT,UAAM,iBAAiB,CAAC,CAAC,KAAK,YAAY,gBAAgB,KAAI,KACvD,KAAK,aAAa,KAAK,YAAY,KAAK,KACxC,CAAC,CAAC,KAAK,YAAY;AAG1B,QAAI,KAAK,aAAa;AACpB,aAAO;IACT,OAAO;AACL,aAAO,kBAAkB,KAAK,YAAY,SAAS,UAAU;IAC/D;EACF;EAEA,YAAY,OAAa;AACvB,UAAM,MAAM,KAAK,iBAAiB,KAAK,OAAK,EAAE,UAAU,KAAK;AAC7D,WAAO,MAAM,IAAI,QAAQ;EAC3B;EAEA,kBAAkB,OAAa;AAC7B,UAAM,MAAM,KAAK,iBAAiB,KAAK,OAAK,EAAE,UAAU,KAAK;AAC7D,WAAO,MAAM,IAAI,cAAc;EACjC;EAEA,gBAAa;AACX,QAAI,KAAK,OAAO;AACd,WAAK,QAAQ;IACf;EACF;EAEA,IAAI,cAAW;AACb,WAAO,KAAK,cAAc,sBAAmB;EAC/C;EAEA,IAAI,iBAAc;AAChB,WAAO,KAAK,cAAc,sCAAmC;EAC/D;EAEA,IAAI,oBAAiB;AACnB,WAAO,KAAK,UAAU,kBAAmB,KAAK,cAAc,0BAAuB;EACrF;;;mCAtTW,6BAA0B,4BAAA,eAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,YAAA,CAAA;AAAA;4FAA1B,6BAA0B,WAAA,CAAA,CAAA,yBAAA,CAAA,GAAA,QAAA,EAAA,MAAA,QAAA,SAAA,UAAA,GAAA,OAAA,IAAA,MAAA,IAAA,QAAA,CAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,OAAA,GAAA,CAAA,QAAA,eAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,cAAA,GAAA,UAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,SAAA,iBAAA,GAAA,MAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,QAAA,QAAA,QAAA,mBAAA,eAAA,8BAAA,YAAA,IAAA,GAAA,gBAAA,GAAA,iBAAA,SAAA,SAAA,GAAA,CAAA,QAAA,SAAA,QAAA,SAAA,eAAA,oBAAA,YAAA,IAAA,GAAA,gBAAA,GAAA,iBAAA,SAAA,SAAA,GAAA,CAAA,QAAA,OAAA,QAAA,YAAA,eAAA,0BAAA,GAAA,gBAAA,GAAA,iBAAA,SAAA,SAAA,GAAA,CAAA,SAAA,iBAAA,GAAA,MAAA,GAAA,CAAA,QAAA,UAAA,SAAA,gBAAA,YAAA,IAAA,GAAA,WAAA,iBAAA,UAAA,GAAA,MAAA,GAAA,CAAA,SAAA,mBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,aAAA,GAAA,MAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,qBAAA,GAAA,CAAA,SAAA,gBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,cAAA,GAAA,MAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,QAAA,4BAAA,GAAA,MAAA,GAAA,CAAA,QAAA,mBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,mBAAA,GAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,eAAA,GAAA,OAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,eAAA,GAAA,SAAA,UAAA,GAAA,CAAA,QAAA,gBAAA,GAAA,MAAA,GAAA,CAAA,QAAA,mBAAA,SAAA,YAAA,GAAA,MAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,QAAA,sBAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,QAAA,mBAAA,GAAA,UAAA,GAAA,CAAA,QAAA,UAAA,YAAA,IAAA,GAAA,gBAAA,GAAA,iBAAA,UAAA,SAAA,GAAA,CAAA,SAAA,EAAA,GAAA,CAAA,GAAA,SAAA,YAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,SAAA,UAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,QAAA,gBAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,QAAA,4BAAA,GAAA,CAAA,QAAA,YAAA,QAAA,YAAA,eAAA,4BAAA,YAAA,IAAA,GAAA,gBAAA,GAAA,oBAAA,QAAA,UAAA,qBAAA,GAAA,iBAAA,SAAA,SAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,QAAA,0BAAA,GAAA,CAAA,QAAA,iBAAA,GAAA,CAAA,QAAA,cAAA,CAAA,GAAA,UAAA,SAAA,oCAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;ACtCvC,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA6B,GAAA,UAAA,CAAA,EACE,GAAA,OAAA,CAAA,EACC,GAAA,IAAA;AACtB,IAAA,iBAAA,CAAA;AAAiB,IAAA,uBAAA;AACrB,IAAA,yBAAA,GAAA,UAAA,CAAA;AAA6B,IAAA,qBAAA,SAAA,SAAA,8DAAA;AAAA,aAAS,IAAA,QAAA;IAAS,CAAA;AAC7C,IAAA,oBAAA,GAAA,YAAA,CAAA;AACF,IAAA,uBAAA,EAAS;AAEX,IAAA,yBAAA,GAAA,KAAA,CAAA;AAAoB,IAAA,iBAAA,CAAA;AAAoB,IAAA,uBAAA,EAAI;AAG9C,IAAA,yBAAA,GAAA,QAAA,CAAA;AAAM,IAAA,qBAAA,YAAA,SAAA,+DAAA;AAAA,aAAY,IAAA,aAAA;IAAc,CAAA;AAC9B,IAAA,yBAAA,IAAA,OAAA,CAAA;AAEE,IAAA,qBAAA,IAAA,4CAAA,GAAA,GAAA,OAAA,CAAA;AAKA,IAAA,yBAAA,IAAA,OAAA,CAAA,EAAwB,IAAA,OAAA,EAAA,EAEI,IAAA,IAAA;AACpB,IAAA,iBAAA,IAAA,yBAAA;AAAoB,IAAA,uBAAA;AAExB,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAwB,IAAA,OAAA;AACf,IAAA,iBAAA,IAAA,kBAAA;AAAgB,IAAA,yBAAA,IAAA,QAAA,EAAA;AAAuB,IAAA,iBAAA,IAAA,GAAA;AAAC,IAAA,uBAAA,EAAO;AACtD,IAAA,yBAAA,IAAA,SAAA,EAAA;AAAmB,IAAA,2BAAA,iBAAA,SAAA,oEAAA,QAAA;AAAA,MAAA,6BAAA,IAAA,YAAA,iBAAA,MAAA,MAAA,IAAA,YAAA,kBAAA;AAAA,aAAA;IAAA,CAAA;AAC6C,IAAA,qBAAA,SAAA,SAAA,8DAAA;AAAA,aAAS,IAAA,cAAA;IAAe,CAAA;AADxF,IAAA,uBAAA,EACmG;AAGrG,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAwB,IAAA,OAAA;AACf,IAAA,iBAAA,IAAA,QAAA;AAAM,IAAA,yBAAA,IAAA,QAAA,EAAA;AAAuB,IAAA,iBAAA,IAAA,GAAA;AAAC,IAAA,uBAAA,EAAO;AAC5C,IAAA,yBAAA,IAAA,SAAA,EAAA;AAAoB,IAAA,2BAAA,iBAAA,SAAA,oEAAA,QAAA;AAAA,MAAA,6BAAA,IAAA,YAAA,OAAA,MAAA,MAAA,IAAA,YAAA,QAAA;AAAA,aAAA;IAAA,CAAA;AACG,IAAA,qBAAA,SAAA,SAAA,8DAAA;AAAA,aAAS,IAAA,cAAA;IAAe,CAAA;AAD/C,IAAA,uBAAA,EAC0D;AAG5D,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAwB,IAAA,OAAA;AACf,IAAA,iBAAA,IAAA,aAAA;AAAQ,IAAA,uBAAA;AACf,IAAA,yBAAA,IAAA,SAAA,EAAA;AAAkB,IAAA,2BAAA,iBAAA,SAAA,oEAAA,QAAA;AAAA,MAAA,6BAAA,IAAA,YAAA,UAAA,MAAA,MAAA,IAAA,YAAA,WAAA;AAAA,aAAA;IAAA,CAAA;AACK,IAAA,qBAAA,SAAA,SAAA,8DAAA;AAAA,aAAS,IAAA,cAAA;IAAe,CAAA;AAD/C,IAAA,uBAAA,EACiD;AAGnD,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAwB,IAAA,OAAA;AACf,IAAA,iBAAA,IAAA,MAAA;AAAI,IAAA,yBAAA,IAAA,QAAA,EAAA;AAAuB,IAAA,iBAAA,IAAA,GAAA;AAAC,IAAA,uBAAA,EAAO;AAG1C,IAAA,qBAAA,IAAA,4CAAA,GAAA,GAAA,OAAA,EAAA,EAAgD,IAAA,+CAAA,GAAA,GAAA,UAAA,EAAA,EAOV,IAAA,4CAAA,GAAA,GAAA,OAAA,EAAA,EAUgE,IAAA,4CAAA,GAAA,GAAA,OAAA,EAAA;AAoBxG,IAAA,uBAAA,EAAM;AAIR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA4B,IAAA,OAAA,EAAA,EACO,IAAA,IAAA;AAC3B,IAAA,iBAAA,IAAA,wBAAA;AAAsB,IAAA,uBAAA;AAG1B,IAAA,qBAAA,IAAA,4CAAA,GAAA,GAAA,OAAA,EAAA,EAA+C,IAAA,4CAAA,GAAA,GAAA,OAAA,EAAA;AAe/C,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA+B,IAAA,OAAA,EAAA;AAE3B,IAAA,qBAAA,IAAA,iDAAA,GAAA,GAAA,YAAA,EAAA,EAAqF,IAAA,iDAAA,GAAA,GAAA,YAAA,EAAA;AAErF,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,IAAA,iBAAA;AAAe,IAAA,uBAAA,EAAO;AAE9B,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,qBAAA,IAAA,iDAAA,GAAA,GAAA,YAAA,EAAA,EAAkF,IAAA,iDAAA,GAAA,GAAA,YAAA,EAAA;AAElF,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,IAAA,iBAAA;AAAY,IAAA,uBAAA,EAAO;AAE3B,IAAA,qBAAA,IAAA,4CAAA,GAAA,GAAA,OAAA,EAAA;AAMA,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,qBAAA,IAAA,iDAAA,GAAA,GAAA,YAAA,EAAA,EAAqE,IAAA,iDAAA,GAAA,GAAA,YAAA,EAAA;AAErE,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,IAAA,kBAAA;AAAgB,IAAA,uBAAA,EAAO,EACzB,EACF,EACF,EACF,EACF,EACF;AAGR,IAAA,yBAAA,IAAA,UAAA,EAAA,EAA6B,IAAA,OAAA,EAAA,EACD,IAAA,UAAA,EAAA;AACsB,IAAA,qBAAA,SAAA,SAAA,+DAAA;AAAA,aAAS,IAAA,QAAA;IAAS,CAAA;AAC9D,IAAA,iBAAA,IAAA,YAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,UAAA,EAAA;AAA8C,IAAA,qBAAA,SAAA,SAAA,+DAAA;AAAA,aAAS,IAAA,aAAA;IAAc,CAAA;AACnE,IAAA,qBAAA,IAAA,iDAAA,GAAA,GAAA,YAAA,EAAA,EAA+C,IAAA,iDAAA,GAAA,GAAA,YAAA,EAAA;AAE/C,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAS,EACL,EACC;;;AAhJD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,IAAA,WAAA;AAKc,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,IAAA,cAAA;AAMZ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,KAAA;AAYmB,IAAA,oBAAA,EAAA;AAAA,IAAA,2BAAA,WAAA,IAAA,YAAA,eAAA;AAMC,IAAA,oBAAA,CAAA;AAAA,IAAA,2BAAA,WAAA,IAAA,YAAA,KAAA;AAMF,IAAA,oBAAA,CAAA;AAAA,IAAA,2BAAA,WAAA,IAAA,YAAA,QAAA;AAQZ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,YAAA;AAMG,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,IAAA,YAAA;AAWH,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,IAAA,gBAAA,IAAA,YAAA,WAAA,wBAAA;AAOkB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,YAAA,UAAA,CAAA,IAAA,YAAA;AAsBG,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,IAAA,WAAA;AAKF,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,IAAA,WAAA;AAWM,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,SAAA,IAAA,YAAA,gBAAA,KAAA,CAAA;AACgB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,YAAA,gBAAA,KAAA,CAAA;AACT,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,IAAA,YAAA,gBAAA,KAAA,CAAA;AAGP,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,SAAA,IAAA,aAAA,IAAA,YAAA,KAAA,CAAA;AACgB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,aAAA,IAAA,YAAA,KAAA,CAAA;AACT,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,IAAA,aAAA,IAAA,YAAA,KAAA,CAAA;AAIjC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,IAAA,WAAA;AAK0B,IAAA,oBAAA;AAAA,IAAA,sBAAA,SAAA,IAAA,YAAA,MAAA;AACgB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,YAAA,MAAA;AACT,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,IAAA,YAAA,MAAA;AAe2B,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,IAAA,WAAA,CAAA,IAAA,YAAA,CAAA;AACtC,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,IAAA,OAAA;AACoB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,OAAA;AACnD,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,IAAA,mBAAA,GAAA;;kBD/GJ,cAAY,SAAA,MACZ,aAAW,oBAAA,gBAAA,8BAAA,sBAAA,4BAAA,iBAAA,sBAAA,mBAAA,SAAA,QACX,OAAO,GAAA,QAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8DAAA,EAAA,CAAA;AAGL,IAAO,6BAAP;;sEAAO,4BAA0B,CAAA;UAXtC;uBACW,2BAAyB,YAGvf;;;;6EAFU,4BAA0B,EAAA,WAAA,8BAAA,UAAA,4FAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;AG0BnC,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA2C,GAAA,OAAA,EAAA;AAEvC,IAAA,oBAAA,GAAA,YAAA,EAAA;AACA,IAAA,yBAAA,GAAA,GAAA;AAAG,IAAA,iBAAA,GAAA,yBAAA;AAAoB,IAAA,uBAAA,EAAI,EACvB;;;;;;AAIR,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAmD,GAAA,OAAA,EAAA;AAE/C,IAAA,oBAAA,GAAA,YAAA,EAAA;AACA,IAAA,yBAAA,GAAA,GAAA;AAAG,IAAA,iBAAA,CAAA;AAAW,IAAA,uBAAA;AACd,IAAA,yBAAA,GAAA,UAAA,EAAA;AAA0B,IAAA,qBAAA,SAAA,SAAA,4DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,CAAc;IAAA,CAAA;AAC/C,IAAA,oBAAA,GAAA,YAAA,EAAA;AACA,IAAA,iBAAA,GAAA,cAAA;AACF,IAAA,uBAAA,EAAS,EACL;;;;AALD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA;;;;;;AAuBD,IAAA,yBAAA,GAAA,OAAA,EAAA,EAEuC,GAAA,OAAA,EAAA;AACI,IAAA,iBAAA,CAAA;AAA6B,IAAA,uBAAA;AACtE,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAqD,IAAA,iBAAA,CAAA;AAAwC,IAAA,uBAAA;AAC7F,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAwD,IAAA,iBAAA,CAAA;AAA2C,IAAA,uBAAA;AACnG,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAmD,GAAA,QAAA,EAAA;AAE/C,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAO;AAET,IAAA,yBAAA,IAAA,OAAA,EAAA;AAAqD,IAAA,iBAAA,EAAA;;AAAgD,IAAA,uBAAA;AACrG,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAqD,IAAA,QAAA,EAAA;AAEjD,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAO;AAET,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,UAAA,EAAA;AACY,IAAA,qBAAA,SAAA,SAAA,oEAAA;AAAA,YAAA,aAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,wBAAA,UAAA,CAAgC;IAAA,CAAA;AACpF,IAAA,oBAAA,IAAA,YAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,UAAA,EAAA;AAGE,IAAA,qBAAA,SAAA,SAAA,oEAAA;AAAA,YAAA,aAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,oBAAA,UAAA,CAA4B;IAAA,CAAA;AACrC,IAAA,oBAAA,IAAA,YAAA,EAAA;AACF,IAAA,uBAAA,EAAS,EACL;;;;;AAzBH,IAAA,qBAAA,OAAA,eAAA,UAAA,CAAA;AACsC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,WAAA,eAAA;AACY,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,WAAA,SAAA,iBAAA;AACG,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,WAAA,YAAA,iBAAA;AAE9B,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,OAAA,aAAA,WAAA,OAAA,OAAA,OAAA,WAAA,IAAA,eAAA,EAAA,CAAA;AACtB,IAAA,oBAAA;AAAA,IAAA,6BAAA,MAAA,WAAA,OAAA,OAAA,OAAA,WAAA,IAAA,eAAA,WAAA,GAAA;AAGiD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,IAAA,IAAA,WAAA,gBAAA,YAAA,CAAA;AAExB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,OAAA,gBAAA,UAAA,IAAA,WAAA,UAAA;AACzB,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,gBAAA,UAAA,IAAA,WAAA,YAAA,GAAA;AASA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,gBAAA,UAAA,IAAA,0BAAA,oBAAA;AAEU,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,gBAAA,UAAA,IAAA,iBAAA,aAAA;;;;;AAvCtB,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAsF,GAAA,OAAA,EAAA,EACxD,GAAA,OAAA,CAAA,EACA,GAAA,OAAA,EAAA,EACA,GAAA,OAAA,EAAA;AACG,IAAA,iBAAA,GAAA,QAAA;AAAM,IAAA,uBAAA;AAC/B,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAsC,IAAA,iBAAA,GAAA,OAAA;AAAK,IAAA,uBAAA;AAC3C,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAsC,IAAA,iBAAA,GAAA,aAAA;AAAQ,IAAA,uBAAA;AAC9C,IAAA,yBAAA,IAAA,OAAA,EAAA;AAAsC,IAAA,iBAAA,IAAA,KAAA;AAAG,IAAA,uBAAA;AACzC,IAAA,yBAAA,IAAA,OAAA,EAAA;AAAsC,IAAA,iBAAA,IAAA,mBAAA;AAAc,IAAA,uBAAA;AACpD,IAAA,yBAAA,IAAA,OAAA,EAAA;AAAsC,IAAA,iBAAA,IAAA,QAAA;AAAM,IAAA,uBAAA;AAC5C,IAAA,yBAAA,IAAA,OAAA,EAAA;AAAyB,IAAA,iBAAA,IAAA,UAAA;AAAQ,IAAA,uBAAA,EAAM,EACnC;AAER,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,qBAAA,IAAA,0CAAA,IAAA,IAAA,OAAA,EAAA;AA6BF,IAAA,uBAAA,EAAM,EACF;;;;AA7BuB,IAAA,oBAAA,EAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,QAAA;;;;;;AA2C3B,IAAA,yBAAA,GAAA,UAAA,EAAA;AAGE,IAAA,qBAAA,SAAA,SAAA,qEAAA;AAAA,YAAA,YAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,cAAA,SAAA,CAAqB;IAAA,CAAA;AAC9B,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AAHE,IAAA,sBAAA,UAAA,cAAA,OAAA,YAAA;AAEA,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,GAAA;;;;;;AAdN,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAgF,GAAA,OAAA,EAAA;AAE5E,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAwB,GAAA,UAAA,EAAA;AAGpB,IAAA,qBAAA,SAAA,SAAA,4DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,cAAA,OAAA,eAA6B,CAAC,CAAC;IAAA,CAAA;AACxC,IAAA,iBAAA,GAAA,YAAA;AACF,IAAA,uBAAA;AACA,IAAA,qBAAA,GAAA,4CAAA,GAAA,GAAA,UAAA,EAAA;AAMA,IAAA,yBAAA,GAAA,UAAA,EAAA;AAEE,IAAA,qBAAA,SAAA,SAAA,4DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,cAAA,OAAA,eAA6B,CAAC,CAAC;IAAA,CAAA;AACxC,IAAA,iBAAA,GAAA,aAAA;AACF,IAAA,uBAAA,EAAS,EACL;;;;AAnBJ,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,gBAAA,OAAA,eAAA,KAAA,OAAA,YAAA,GAAA,OAAA,OAAA,KAAA,IAAA,OAAA,eAAA,OAAA,WAAA,OAAA,aAAA,GAAA,QAAA,OAAA,eAAA,eAAA;AAIE,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,OAAA,iBAAA,CAAA;AAKmB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,WAAA,CAAA;AAMnB,IAAA,oBAAA;AAAA,IAAA,qBAAA,YAAA,OAAA,iBAAA,OAAA,gBAAA,CAAA;;;;;;AAQN,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAmF,GAAA,OAAA,EAAA;AAE/E,IAAA,oBAAA,GAAA,YAAA,EAAA;AACA,IAAA,yBAAA,GAAA,IAAA;AAAI,IAAA,iBAAA,GAAA,oBAAA;AAAe,IAAA,uBAAA;AACnB,IAAA,yBAAA,GAAA,GAAA;AAAG,IAAA,iBAAA,GAAA,qEAAA;AAA6D,IAAA,uBAAA;AAChE,IAAA,yBAAA,GAAA,UAAA,EAAA;AAA2B,IAAA,qBAAA,SAAA,SAAA,4DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,uBAAA,CAAwB;IAAA,CAAA;AAC1D,IAAA,oBAAA,GAAA,YAAA,EAAA;AACA,IAAA,iBAAA,GAAA,oBAAA;AACF,IAAA,uBAAA,EAAS,EACL;;;ADxHN,IAAO,qBAAP,MAAO,mBAAiB;EAa5B,YACU,iBACA,iBAAgC;AADhC,SAAA,kBAAA;AACA,SAAA,kBAAA;AAdV,SAAA,WAAsB,CAAA;AACtB,SAAA,UAAU;AACV,SAAA,QAAQ;AACR,SAAA,WAAW;AACX,SAAA,eAAe;AACf,SAAA,YAAY;AACZ,SAAA,gBAAgB;AAChB,SAAA,aAAa;AACb,SAAA,QAAwB;AAEhB,SAAA,WAAW,IAAI,QAAO;AAM5B,aAAS,EAAC,eAAc,eAAc,WAAU,gBAAe,oBAAmB,eAAc,YAAW,kBAAiB,aAAY,OAAM,KAAI,kBAAiB,aAAY,aAAY,iBAAgB,aAAY,WAAU,CAAC;EACpO;EAEA,WAAQ;AACN,SAAK,eAAc;AACnB,SAAK,cAAa;EACpB;EAEA,cAAW;AACT,SAAK,SAAS,KAAI;AAClB,SAAK,SAAS,SAAQ;EACxB;EAEQ,gBAAa;AAEnB,UAAM,kBAAkB,IAAI,QAAO;AACnC,oBAAgB,KACd,UAAU,KAAK,QAAQ,GACvB,aAAa,GAAG,GAChB,qBAAoB,CAAE,EACtB,UAAU,aAAU;AACpB,WAAK,WAAW;AAChB,WAAK,eAAe;AACpB,WAAK,eAAc;IACrB,CAAC;AAGD,UAAM,cAAc,SAAS,cAAc,8BAA8B;AACzE,QAAI,aAAa;AACf,kBAAY,iBAAiB,SAAS,CAAC,MAAK;AAC1C,cAAM,SAAS,EAAE;AACjB,wBAAgB,KAAK,OAAO,KAAK;MACnC,CAAC;IACH;EACF;EAEA,iBAAc;AACZ,SAAK,UAAU;AACf,SAAK,QAAQ;AAEb,SAAK,gBAAgB,YACnB,KAAK,cACL,KAAK,WACL,KAAK,UACL,KAAK,YACL,KAAK,KAAK,EACV,KACA,UAAU,KAAK,QAAQ,CAAC,EACxB,UAAU;MACV,MAAM,CAAC,aAAY;AACjB,aAAK,WAAW,SAAS;AACzB,aAAK,gBAAgB,SAAS;AAC9B,aAAK,UAAU;MACjB;MACA,OAAO,CAAC,UAAS;AACf,gBAAQ,MAAM,gCAA6B,KAAK;AAChD,aAAK,QAAQ;AACb,aAAK,UAAU;MACjB;KACD;EACH;EAEM,yBAAsB;;AAC1B,YAAM,QAAQ,MAAM,KAAK,gBAAgB,OAAO;QAC9C,WAAW;QACX,gBAAgB;UACd,SAAS;UACT,MAAM;;OAET;AAED,YAAM,MAAM,QAAO;AAEnB,YAAM,EAAE,MAAM,KAAI,IAAK,MAAM,MAAM,cAAa;AAEhD,UAAI,SAAS,aAAa,MAAM;AAG9B,gBAAQ,IAAI,2DAAmD;AAC/D,aAAK,eAAc;MACrB;IACF;;EAEM,wBAAwB,SAAgB;;AAC5C,YAAM,QAAQ,MAAM,KAAK,gBAAgB,OAAO;QAC9C,WAAW;QACX,gBAAgB;UACd;UACA,MAAM;;OAET;AAED,YAAM,MAAM,QAAO;AAEnB,YAAM,EAAE,MAAM,KAAI,IAAK,MAAM,MAAM,cAAa;AAEhD,UAAI,SAAS,aAAa,MAAM;AAC9B,gBAAQ,IAAI,gEAAwD;AACpE,aAAK,eAAc;MACrB;IACF;;;;EAIQ,aAAa,aAAgB;AACnC,SAAK,UAAU;AACf,SAAK,QAAQ;AAEb,SAAK,gBAAgB,aAAa,WAAW,EAAE,KAC7C,UAAU,KAAK,QAAQ,CAAC,EACxB,UAAU;MACV,MAAM,CAAC,YAAW;AAChB,gBAAQ,IAAI,iEAAyD,OAAO;AAC5E,aAAK,eAAc;AACnB,aAAK,UAAU;MACjB;MACA,OAAO,CAAC,UAAS;AACf,gBAAQ,MAAM,4DAAoD,KAAK;AACvE,aAAK,QAAQ;AACb,aAAK,UAAU;MACjB;KACD;EACH;EAEA,oBAAoB,SAAgB;AAClC,QAAI,CAAC,QAAQ;AAAI;AAEjB,UAAM,SAAS,QAAQ,YAAY,eAAe;AAElD,SAAK,UAAU;AACf,SAAK,QAAQ;AAEb,UAAM,aAAa,QAAQ,YACvB,KAAK,gBAAgB,kBAAkB,QAAQ,EAAE,IACjD,KAAK,gBAAgB,eAAe,QAAQ,EAAE;AAElD,eAAW,KACT,UAAU,KAAK,QAAQ,CAAC,EACxB,UAAU;MACV,MAAM,MAAK;AACT,gBAAQ,IAAI,cAAW,MAAM,iBAAiB;AAC9C,aAAK,eAAc;AACnB,aAAK,UAAU;MACjB;MACA,OAAO,CAAC,UAAS;AACf,gBAAQ,MAAM,YAAY,MAAM,gBAAa,KAAK;AAClD,aAAK,QAAQ,YAAY,MAAM;AAC/B,aAAK,UAAU;MACjB;KACD;EACH;EAEA,iBAAiB,OAAU;AACzB,UAAM,QAAQ,MAAM,OAAO;AAC3B,SAAK,WAAW;AAChB,SAAK,eAAe;AACpB,SAAK,eAAc;EACrB;EAEA,gBAAgB,OAAU;AACxB,UAAM,QAAQ,MAAM,OAAO;AAC3B,SAAK,aAAa;AAClB,SAAK,eAAc;EACrB;EAEA,iBAAc;AACZ,SAAK,WAAW;AAChB,SAAK,eAAe;AACpB,SAAK,eAAc;EACrB;EAEA,eAAY;AACV,SAAK,eAAc;EACrB;EAEA,cAAc,QAAc;AAC1B,SAAK,eAAe;AACpB,SAAK,eAAc;EACrB;EAEA,kBAAe;AACb,WAAO,KAAK,KAAK,KAAK,gBAAgB,KAAK,SAAS;EACtD;EAEA,aAAU;AACR,UAAM,QAAQ,KAAK,gBAAe;AAClC,UAAM,UAAoB,CAAA;AAE1B,aAAS,IAAI,GAAG,KAAK,OAAO,KAAK;AAC/B,cAAQ,KAAK,CAAC;IAChB;AAEA,WAAO;EACT;EAEA,gBAAgB,SAAgB;AAlQlC;AAmQI,WAAO,QAAQ,eAAa,aAAQ,QAAR,mBAAa,gBAAe;EAC1D;EAEA,YAAY,KAAW;AACrB,YAAQ,KAAK;MACX,KAAK;AACH,eAAO;MACT,KAAK;AACH,eAAO;MACT,KAAK;AACH,eAAO;MACT;AACE,eAAO;IACX;EACF;EAEA,eAAe,SAAgB;AAC7B,WAAO,KAAK,gBAAgB,OAAO,IAAI,WAAW;EACpD;;EAGA,IAAI,OAAI;AACN,WAAO;EACT;;;mCA5OW,oBAAiB,4BAAA,eAAA,GAAA,4BAAA,eAAA,CAAA;AAAA;mFAAjB,oBAAiB,WAAA,CAAA,CAAA,cAAA,CAAA,GAAA,OAAA,IAAA,MAAA,IAAA,QAAA,CAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,QAAA,QAAA,eAAA,wBAAA,GAAA,SAAA,OAAA,GAAA,CAAA,QAAA,gBAAA,GAAA,CAAA,GAAA,gBAAA,cAAA,GAAA,CAAA,QAAA,QAAA,eAAA,aAAA,GAAA,SAAA,OAAA,GAAA,CAAA,GAAA,UAAA,OAAA,GAAA,CAAA,SAAA,iBAAA,GAAA,CAAA,SAAA,gBAAA,GAAA,CAAA,SAAA,QAAA,GAAA,CAAA,GAAA,cAAA,GAAA,SAAA,OAAA,GAAA,CAAA,QAAA,gBAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,WAAA,GAAA,OAAA,GAAA,CAAA,QAAA,YAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,UAAA,OAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,SAAA,iBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,eAAA,GAAA,MAAA,GAAA,CAAA,SAAA,0BAAA,GAAA,MAAA,GAAA,CAAA,SAAA,oBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,qBAAA,GAAA,MAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,QAAA,mBAAA,GAAA,UAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,QAAA,sBAAA,GAAA,CAAA,GAAA,aAAA,GAAA,OAAA,GAAA,CAAA,QAAA,iBAAA,GAAA,CAAA,GAAA,wBAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,eAAA,cAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,SAAA,eAAA,GAAA,SAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,gBAAA,gBAAA,GAAA,CAAA,GAAA,gBAAA,iBAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,oBAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,eAAA,cAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,gBAAA,iBAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,iBAAA,cAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,UAAA,GAAA,CAAA,SAAA,gBAAA,GAAA,WAAA,GAAA,OAAA,GAAA,CAAA,QAAA,aAAA,GAAA,CAAA,GAAA,qBAAA,GAAA,SAAA,OAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,SAAA,UAAA,GAAA,CAAA,GAAA,UAAA,SAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,QAAA,mBAAA,GAAA,CAAA,GAAA,cAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,2BAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;AC9C9B,IAAA,yBAAA,GAAA,aAAA,EAAa,GAAA,WAAA,CAAA,EACsB,GAAA,OAAA,CAAA,EAEL,GAAA,OAAA,CAAA,EACO,GAAA,OAAA,CAAA;AACJ,IAAA,iBAAA,GAAA,sBAAA;AAAiB,IAAA,uBAAA;AAC1C,IAAA,yBAAA,GAAA,OAAA,CAAA;AAAwB,IAAA,iBAAA,CAAA;AAA6B,IAAA,uBAAA,EAAM;AAI7D,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA2B,GAAA,SAAA,CAAA;AAKvB,IAAA,qBAAA,SAAA,SAAA,kDAAA,QAAA;AAAA,aAAS,IAAA,iBAAA,MAAA;IAAwB,CAAA;AAJnC,IAAA,uBAAA;AAMA,IAAA,oBAAA,IAAA,YAAA,CAAA;AACF,IAAA,uBAAA;AAGA,IAAA,yBAAA,IAAA,OAAA,CAAA,EAAuC,IAAA,SAAA,CAAA;AAKnC,IAAA,qBAAA,SAAA,SAAA,mDAAA,QAAA;AAAA,aAAS,IAAA,iBAAA,MAAA;IAAwB,CAAA;AAJnC,IAAA,uBAAA;AAMA,IAAA,yBAAA,IAAA,UAAA,EAAA;AAA6B,IAAA,qBAAA,UAAA,SAAA,qDAAA,QAAA;AAAA,aAAU,IAAA,gBAAA,MAAA;IAAuB,CAAA;AAC5D,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAgC,IAAA,iBAAA,IAAA,qBAAA;AAAmB,IAAA,uBAAA;AACnD,IAAA,yBAAA,IAAA,UAAA,EAAA;AAA+B,IAAA,iBAAA,IAAA,wBAAA;AAAsB,IAAA,uBAAA;AACrD,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAuB,IAAA,iBAAA,IAAA,kBAAA;AAAgB,IAAA,uBAAA,EAAS;AAElD,IAAA,yBAAA,IAAA,UAAA,EAAA;AAGE,IAAA,qBAAA,SAAA,SAAA,sDAAA;AAAA,aAAS,IAAA,eAAA;IAAgB,CAAA;AACzB,IAAA,oBAAA,IAAA,YAAA,EAAA;AACA,IAAA,iBAAA,IAAA,SAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA4B,IAAA,UAAA,EAAA;AACF,IAAA,qBAAA,SAAA,SAAA,sDAAA;AAAA,aAAS,IAAA,uBAAA;IAAwB,CAAA;AACvD,IAAA,oBAAA,IAAA,YAAA,EAAA;AACA,IAAA,iBAAA,IAAA,wBAAA;AACF,IAAA,uBAAA,EAAS,EACL,EACF;AAIR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA4B,IAAA,UAAA,EAAA;AACyB,IAAA,qBAAA,UAAA,SAAA,qDAAA,QAAA;AAAA,aAAU,IAAA,gBAAA,MAAA;IAAuB,CAAA;AAClF,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAgC,IAAA,iBAAA,IAAA,wBAAA;AAAmB,IAAA,uBAAA;AACnD,IAAA,yBAAA,IAAA,UAAA,EAAA;AAA+B,IAAA,iBAAA,IAAA,oBAAA;AAAkB,IAAA,uBAAA;AACjD,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAuB,IAAA,iBAAA,IAAA,cAAA;AAAY,IAAA,uBAAA,EAAS;AAE9C,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA4B,IAAA,UAAA,EAAA;AACF,IAAA,qBAAA,SAAA,SAAA,sDAAA;AAAA,aAAS,IAAA,uBAAA;IAAwB,CAAA;AACvD,IAAA,oBAAA,IAAA,YAAA,EAAA;AACF,IAAA,uBAAA,EAAS,EACL;AAIR,IAAA,qBAAA,IAAA,mCAAA,GAAA,GAAA,OAAA,EAAA,EAA2C,IAAA,mCAAA,GAAA,GAAA,OAAA,EAAA,EAQQ,IAAA,mCAAA,IAAA,GAAA,OAAA,EAAA,EAYmC,IAAA,mCAAA,GAAA,GAAA,OAAA,EAAA,EAgDN,IAAA,mCAAA,IAAA,GAAA,OAAA,EAAA;AAqClF,IAAA,uBAAA,EAAU;;;AAnKoB,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,iBAAA,IAAA,eAAA,EAAA;AAQtB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,IAAA,QAAA;AAWA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,IAAA,QAAA;AAGM,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,IAAA,UAAA;AAON,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,+BAAA;AAgB0B,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,IAAA,UAAA;AAa1B,IAAA,oBAAA,EAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,OAAA;AAQA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,SAAA,CAAA,IAAA,OAAA;AAYA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,IAAA,WAAA,CAAA,IAAA,SAAA,IAAA,SAAA,SAAA,CAAA;AAgDA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,IAAA,WAAA,CAAA,IAAA,SAAA,IAAA,SAAA,SAAA,CAAA;AAyBA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,IAAA,WAAA,CAAA,IAAA,SAAA,IAAA,SAAA,WAAA,CAAA;;;EDvHN;EAAY;EAAA;EAAA;EACZ;EAAW;EAAA;EACX;EACA;EACA;EACA;AAAamDAAA,EAAA,CAAA;AAGX,IAAO,oBAAP;;sEAAO,mBAAiB,CAAA;UAd7B;uBACW,gBAAc,YAGZ,MAAI,SACP;MACP;MACA;MACA;MACA;MACA;MACA;OACD,UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kmBAAiB,EAAA,WAAA,qBAAA,UAAA,iEAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}
