import{a as P}from"./chunk-N4FKO75N.js";import{a as u,b as $}from"./chunk-ZFUZ5UD4.js";import{E as j,H as T,d as y,f as l,j as d,r as S}from"./chunk-QQQKELKR.js";import{a as m,b as w,k as E}from"./chunk-CRC5ZNR6.js";var H=(()=>{let f=class f{constructor(e,t){this.supabaseClientService=e,this.dataUpdateService=t,this.inventarioSubject=new y([]),this.inventario$=this.inventarioSubject.asObservable()}getSupabaseClient(){return console.log("\u{1F4E6} InventarioService: Obteniendo cliente Supabase actualizado..."),this.supabaseClientService.getClient()}getInventario(e=1,t=10,o,s,n,a=!1){let r=this.getSupabaseClient().from("inventario").select("*",{count:"exact"});o&&(r=r.or(`nombre.ilike.%${o}%,descripcion.ilike.%${o}%,codigo.ilike.%${o}%`)),a&&(r=r.gt("cantidad_disponible",0));let i=(e-1)*t;return r=r.range(i,i+t-1).order(s||"fecha_creacion",{ascending:n==="asc"}),l(r).pipe(d(({data:c,error:h,count:p})=>{if(h)throw h;let g=c;return this.inventarioSubject.next(g),{inventario:g,total:p||0,pagina:e,por_pagina:t}}),S(c=>{throw console.error("Error al obtener inventario:",c),c}))}getInventarioDirect(e=1,t=10,o,s,n,a=!1){return console.log("\u{1F680} InventarioService: Usando FETCH DIRECTO para inventario..."),l(this.fetchInventarioDirect(e,t,o,s,n,a)).pipe(d(r=>(console.log("\u2705 InventarioService: FETCH DIRECTO completado, productos:",r.inventario.length),this.inventarioSubject.next(r.inventario),r)),S(r=>{throw console.error("\u274C InventarioService: Error en FETCH DIRECTO:",r),r}))}fetchInventarioDirect(e=1,t=10,o,s,n,a=!1){return E(this,null,function*(){console.log("\u{1F680} InventarioService: Ejecutando fetch directo para inventario...");try{let r=`${u.supabaseUrl}/rest/v1/inventario?select=*`,i=[];o&&i.push(`or=(nombre.ilike.*${o}*,descripcion.ilike.*${o}*,codigo.ilike.*${o}*)`),a&&i.push("cantidad_disponible=gt.0"),i.length>0&&(r+="&"+i.join("&"));let c=(e-1)*t,h=c+t-1;r+=`&limit=${t}&offset=${c}`,r+=`&order=${s||"fecha_creacion"}.${n==="asc"?"asc":"desc"}`;let p={apikey:u.supabaseServiceKey,Authorization:`Bearer ${u.supabaseServiceKey}`,"Content-Type":"application/json",Prefer:"count=exact"};console.log("\u{1F680} URL construida:",r);let g=Date.now(),v=yield fetch(r,{method:"GET",headers:p}),x=Date.now()-g;if(console.log("\u{1F680} Fetch completado en",x,"ms"),console.log("\u{1F680} Status:",v.status),!v.ok){let k=yield v.text();throw console.error("\u{1F680} Error response body:",k),new Error(`HTTP ${v.status}: ${v.statusText}`)}let b=yield v.json(),D=v.headers.get("content-range"),I=D?parseInt(D.split("/")[1]):b.length;return console.log("\u{1F680} Datos recibidos:",(b==null?void 0:b.length)||0,"productos, total:",I),{inventario:b,total:I,pagina:e,por_pagina:t}}catch(r){throw console.error("\u{1F680} Error en fetch directo:",r),r}})}getProducto(e){return l(this.getSupabaseClient().from("inventario").select("*").eq("id",e).single()).pipe(d(({data:t,error:o})=>{if(o)throw o;return t}))}getProductoPorCodigo(e){return l(this.getSupabaseClient().from("inventario").select("*").eq("codigo",e).single()).pipe(d(({data:t,error:o})=>{if(o)throw o;return t}))}crearProducto(e){let t=w(m({},e),{fecha_creacion:new Date().toISOString(),fecha_actualizacion:new Date().toISOString()});return l(this.getSupabaseClient().from("inventario").insert([t]).select().single()).pipe(d(({data:o,error:s})=>{if(s)throw s;let n=o,a=this.inventarioSubject.value;return this.inventarioSubject.next([n,...a]),this.dataUpdateService.notifyCreated("inventario"),n}))}crearProductoDirect(e){return console.log("\u{1F680} InventarioService: Usando FETCH DIRECTO para crear producto..."),l(this.fetchCrearProductoDirect(e)).pipe(d(t=>(console.log("\u2705 InventarioService: FETCH DIRECTO completado, producto creado:",t.id),t)),S(t=>{throw console.error("\u274C InventarioService: Error en FETCH DIRECTO:",t),t}))}fetchCrearProductoDirect(e){return E(this,null,function*(){console.log("\u{1F680} InventarioService: Ejecutando fetch directo para crear producto...");try{let t=w(m({},e),{fecha_creacion:new Date().toISOString(),fecha_actualizacion:new Date().toISOString()}),o=`${u.supabaseUrl}/rest/v1/inventario`,s={apikey:u.supabaseServiceKey,Authorization:`Bearer ${u.supabaseServiceKey}`,"Content-Type":"application/json",Prefer:"return=representation"};console.log("\u{1F680} URL construida:",o),console.log("\u{1F680} Datos a crear:",t);let n=Date.now(),a=yield fetch(o,{method:"POST",headers:s,body:JSON.stringify(t)}),r=Date.now()-n;if(console.log("\u{1F680} Fetch completado en",r,"ms"),console.log("\u{1F680} Status:",a.status),!a.ok){let p=yield a.text();throw console.error("\u{1F680} Error response body:",p),new Error(`HTTP ${a.status}: ${a.statusText}`)}let i=yield a.json();if(console.log("\u{1F680} Datos recibidos:",(i==null?void 0:i.length)||0,"productos"),!i||i.length===0)throw new Error("Error al crear producto");let c=i[0];console.log("\u{1F680} Producto creado:",c);let h=this.inventarioSubject.value;return this.inventarioSubject.next([c,...h]),this.dataUpdateService.notifyCreated("inventario"),c}catch(t){throw console.error("\u{1F680} Error en fetch directo:",t),t}})}actualizarProducto(e,t){let o=w(m({},t),{fecha_actualizacion:new Date().toISOString()});return l(this.getSupabaseClient().from("inventario").update(o).eq("id",e).select().single()).pipe(d(({data:s,error:n})=>{if(n)throw n;let a=s,r=this.inventarioSubject.value,i=r.findIndex(c=>c.id===e);return i!==-1&&(r[i]=a,this.inventarioSubject.next([...r])),this.dataUpdateService.notifyUpdated("inventario"),a}))}actualizarProductoDirect(e,t){return console.log("\u{1F680} InventarioService: Usando FETCH DIRECTO para actualizar producto..."),l(this.fetchActualizarProductoDirect(e,t)).pipe(d(o=>(console.log("\u2705 InventarioService: FETCH DIRECTO completado, producto actualizado:",o.id),o)),S(o=>{throw console.error("\u274C InventarioService: Error en FETCH DIRECTO:",o),o}))}fetchActualizarProductoDirect(e,t){return E(this,null,function*(){console.log("\u{1F680} InventarioService: Ejecutando fetch directo para actualizar producto:",e);try{let o=w(m({},t),{fecha_actualizacion:new Date().toISOString()}),s=`${u.supabaseUrl}/rest/v1/inventario?id=eq.${e}`,n={apikey:u.supabaseServiceKey,Authorization:`Bearer ${u.supabaseServiceKey}`,"Content-Type":"application/json",Prefer:"return=representation"};console.log("\u{1F680} URL construida:",s),console.log("\u{1F680} Datos a actualizar:",o);let a=Date.now(),r=yield fetch(s,{method:"PATCH",headers:n,body:JSON.stringify(o)}),i=Date.now()-a;if(console.log("\u{1F680} Fetch completado en",i,"ms"),console.log("\u{1F680} Status:",r.status),!r.ok){let v=yield r.text();throw console.error("\u{1F680} Error response body:",v),new Error(`HTTP ${r.status}: ${r.statusText}`)}let c=yield r.json();if(console.log("\u{1F680} Datos recibidos:",(c==null?void 0:c.length)||0,"productos"),!c||c.length===0)throw new Error("Producto no encontrado");let h=c[0];console.log("\u{1F680} Producto actualizado:",h);let p=this.inventarioSubject.value,g=p.findIndex(v=>v.id===e);return g!==-1&&(p[g]=h,this.inventarioSubject.next([...p])),this.dataUpdateService.notifyUpdated("inventario"),h}catch(o){throw console.error("\u{1F680} Error en fetch directo:",o),o}})}eliminarProducto(e){return l(this.getSupabaseClient().from("inventario").delete().eq("id",e)).pipe(d(({error:t})=>{if(t)throw t;let s=this.inventarioSubject.value.filter(n=>n.id!==e);this.inventarioSubject.next(s),this.dataUpdateService.notifyDeleted("inventario")}))}eliminarProductoDirect(e){return console.log("\u{1F680} InventarioService: Usando FETCH DIRECTO para eliminar producto..."),l(this.fetchEliminarProductoDirect(e)).pipe(d(()=>{console.log("\u2705 InventarioService: FETCH DIRECTO completado, producto eliminado")}),S(t=>{throw console.error("\u274C InventarioService: Error en FETCH DIRECTO:",t),t}))}fetchEliminarProductoDirect(e){return E(this,null,function*(){console.log("\u{1F680} InventarioService: Ejecutando fetch directo para eliminar producto:",e);try{let t=`${u.supabaseUrl}/rest/v1/inventario?id=eq.${e}`,o={apikey:u.supabaseServiceKey,Authorization:`Bearer ${u.supabaseServiceKey}`,"Content-Type":"application/json"};console.log("\u{1F680} URL construida:",t);let s=Date.now(),n=yield fetch(t,{method:"DELETE",headers:o}),a=Date.now()-s;if(console.log("\u{1F680} Fetch completado en",a,"ms"),console.log("\u{1F680} Status:",n.status),!n.ok){let c=yield n.text();throw console.error("\u{1F680} Error response body:",c),new Error(`HTTP ${n.status}: ${n.statusText}`)}console.log("\u2705 Producto eliminado exitosamente");let i=this.inventarioSubject.value.filter(c=>c.id!==e);this.inventarioSubject.next(i),this.dataUpdateService.notifyDeleted("inventario")}catch(t){throw console.error("\u{1F680} Error en fetch directo:",t),t}})}buscarProductos(e){return l(this.getSupabaseClient().from("inventario").select("*").or(`nombre.ilike.%${e}%,descripcion.ilike.%${e}%,codigo.ilike.%${e}%`).order("fecha_creacion",{ascending:!1}).limit(10)).pipe(d(({data:t,error:o})=>{if(o)throw o;return t}))}getProductosStockBajo(){return l(this.getSupabaseClient().from("inventario").select("*").lt("cantidad_disponible",5).gt("cantidad_disponible",0).order("cantidad_disponible",{ascending:!0})).pipe(d(({data:e,error:t})=>{if(t)throw t;return e}))}getProductosSinStock(){return l(this.getSupabaseClient().from("inventario").select("*").eq("cantidad_disponible",0).order("nombre",{ascending:!0})).pipe(d(({data:e,error:t})=>{if(t)throw t;return e}))}actualizarStock(e,t){return this.actualizarProducto(e,{cantidad_disponible:t})}generarCodigoProducto(){let e=Date.now().toString(),t=Math.random().toString(36).substring(2,8).toUpperCase();return`P${e.slice(-6)}${t}`}verificarCodigoExistente(e){return l(this.getSupabaseClient().from("inventario").select("codigo").eq("codigo",e).limit(1)).pipe(d(({data:t,error:o})=>{if(o)throw o;return t&&t.length>0}))}getEstadisticas(){return l(this.getSupabaseClient().from("inventario").select("cantidad_disponible")).pipe(d(({data:e,error:t})=>{if(t)throw t;let o=e,s=o.length,n=o.filter(i=>i.cantidad_disponible>0).length,a=s-n,r=o.reduce((i,c)=>i+c.cantidad_disponible,0);return{totalProductos:s,productosConStock:n,productosSinStock:a,stockTotal:r}}))}getInventarioActual(){return this.inventarioSubject.value}limpiarInventario(){this.inventarioSubject.next([])}getProductosConStock(e=1,t=10,o,s,n){return this.getInventario(e,t,o,s,n,!0)}getProductosSinStockPaginated(e=1,t=10,o,s,n){let a=this.getSupabaseClient().from("inventario").select("*",{count:"exact"}).eq("cantidad_disponible",0);o&&(a=a.or(`nombre.ilike.%${o}%,descripcion.ilike.%${o}%,codigo.ilike.%${o}%`));let r=(e-1)*t;return a=a.range(r,r+t-1).order(s||"fecha_creacion",{ascending:n==="asc"}),l(a).pipe(d(({data:i,error:c,count:h})=>{if(c)throw c;let p=i;return this.inventarioSubject.next(p),{inventario:p,total:h||0,pagina:e,por_pagina:t}}),S(i=>{throw console.error("Error al obtener productos sin stock:",i),i}))}};f.\u0275fac=function(t){return new(t||f)(T($),T(P))},f.\u0275prov=j({token:f,factory:f.\u0275fac,providedIn:"root"});let C=f;return C})();export{H as a};
