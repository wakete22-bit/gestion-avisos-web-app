{
  "version": 3,
  "sources": ["src/app/modules/facturas/pages/facturas/facturas.component.ts", "src/app/modules/facturas/pages/facturas/facturas.component.html"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonContent, IonIcon } from '@ionic/angular/standalone';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatIconModule } from '@angular/material/icon';\nimport { addIcons } from 'ionicons';\nimport { \n  mapOutline,\n  addCircle, \n  alertCircle, \n  close, \n  eyeOutline, \n  add, \n  addCircleOutline, \n  searchOutline,\n  receipt,\n  hourglassOutline,\n  warning,\n  document, receiptOutline, refreshOutline, alertCircleOutline } from 'ionicons/icons';\nimport { Router } from '@angular/router';\nimport { FacturasService } from '../../services/facturas.service';\nimport { Factura, FacturaResponse } from '../../models/factura.model';\n\n@Component({\n  selector: 'app-facturas',\n  templateUrl: './facturas.component.html',\n  styleUrls: ['./facturas.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    IonContent,\n    IonIcon,\n    MatTableModule,\n    MatIconModule\n  ],\n})\nexport class FacturasComponent implements OnInit {\n\n  displayedColumns: string[] = ['numero', 'estado', 'nombre', 'detalle', 'fecha', 'pvp'];\n  facturas: Factura[] = [];\n  loading = true; // Cambiar a true para mostrar carga inicial\n  error: string | null = null;\n  totalFacturas = 0;\n  paginaActual = 1;\n  porPagina = 10;\n\n  constructor(\n    private router: Router,\n    private facturasService: FacturasService\n  ) { \n    addIcons({refreshOutline,alertCircleOutline,searchOutline,addCircle,eyeOutline,receiptOutline,mapOutline,alertCircle,close,add,addCircleOutline,receipt,hourglassOutline,warning,document});\n  }\n\n  ngOnInit() {\n    this.cargarFacturas();\n  }\n\n  cargarFacturas() {\n    this.loading = true;\n    this.error = null;\n    this.facturasService.getFacturas(this.paginaActual, this.porPagina)\n      .subscribe({\n        next: (response: FacturaResponse) => {\n          this.facturas = response.facturas;\n          this.totalFacturas = response.total;\n          this.loading = false;\n        },\n        error: (error) => {\n          console.error('Error al cargar facturas:', error);\n          this.error = 'Error al cargar las facturas. Por favor, inténtalo de nuevo.';\n          this.loading = false;\n        }\n      });\n  }\n\n  abrirCrearFactura() {\n    this.router.navigate(['/crear-factura']);\n  }\n\n  verFactura(id: string) {\n    this.router.navigate(['/facturas', id]);\n  }\n\n  cambiarPagina(pagina: number) {\n    if (pagina !== this.paginaActual) {\n      this.paginaActual = pagina;\n      this.cargarFacturas();\n    }\n  }\n\n  // Función helper para manejar el cambio de página de forma segura\n  onCambiarPagina(pagina: number | string) {\n    if (typeof pagina === 'number') {\n      this.cambiarPagina(pagina);\n    }\n  }\n\n  getPaginas(): (number | string)[] {\n    const totalPaginas = Math.ceil(this.totalFacturas / this.porPagina);\n    const paginas: (number | string)[] = [];\n    \n    if (totalPaginas <= 7) {\n      for (let i = 1; i <= totalPaginas; i++) {\n        paginas.push(i);\n      }\n    } else {\n      if (this.paginaActual <= 4) {\n        for (let i = 1; i <= 5; i++) {\n          paginas.push(i);\n        }\n        paginas.push('...');\n        paginas.push(totalPaginas);\n      } else if (this.paginaActual >= totalPaginas - 3) {\n        paginas.push(1);\n        paginas.push('...');\n        for (let i = totalPaginas - 4; i <= totalPaginas; i++) {\n          paginas.push(i);\n        }\n      } else {\n        paginas.push(1);\n        paginas.push('...');\n        for (let i = this.paginaActual - 1; i <= this.paginaActual + 1; i++) {\n          paginas.push(i);\n        }\n        paginas.push('...');\n        paginas.push(totalPaginas);\n      }\n    }\n    \n    return paginas;\n  }\n\n  // Propiedad para usar Math en el template\n  get Math() {\n    return Math;\n  }\n\n}\n", "<ion-content>\n  <!-- Loading State -->\n  <div *ngIf=\"loading\" class=\"loading-state\">\n    <div class=\"loading-spinner\">\n      <ion-icon name=\"refresh-outline\" class=\"spinning\"></ion-icon>\n      <p>Cargando facturas...</p>\n    </div>\n  </div>\n\n  <!-- Error State -->\n  <div *ngIf=\"error && !loading\" class=\"error-state\">\n    <div class=\"error-message\">\n      <ion-icon name=\"alert-circle-outline\"></ion-icon>\n      <p>{{ error }}</p>\n      <button class=\"btn-retry\" (click)=\"cargarFacturas()\">\n        <ion-icon name=\"refresh-outline\"></ion-icon>\n        Reintentar\n      </button>\n    </div>\n  </div>\n\n  <!-- Contenido principal -->\n  <section *ngIf=\"!loading && !error\" class=\"dashboard-table\">\n    <!-- Header Section -->\n    <div class=\"table-header\">\n      <div class=\"table-header-left\">\n        <div class=\"table-title\">Tabla de facturas</div>\n        <div class=\"table-meta\">Facturas: {{ totalFacturas }}</div>  \n      </div>\n      \n      <!-- Mobile Search Bar -->\n      <div class=\"mobile-search\">\n        <input type=\"text\" placeholder=\"Buscar factura...\" />\n        <ion-icon name=\"search-outline\"></ion-icon>\n      </div>\n\n      <!-- Desktop Search and Actions -->\n      <div class=\"table-search desktop-only\">\n        <input type=\"text\" placeholder=\"Buscar...\" />\n        <select>\n          <option>Ordenar por: Recientes</option>\n        </select>\n        <div class=\"header-actions\">\n          <button class=\"btn-add\" (click)=\"abrirCrearFactura()\">\n            <ion-icon name=\"add-circle\"></ion-icon>\n            Añadir factura\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Mobile Actions -->\n    <div class=\"mobile-actions\">\n      <select class=\"mobile-filter\">\n        <option>Ordenar: Recientes</option>\n        <option>Ordenar: Antiguos</option>\n        <option>Ordenar: Estado</option>\n      </select>\n      <div class=\"mobile-buttons\">\n        <button class=\"btn-add\" (click)=\"abrirCrearFactura()\">\n          <ion-icon name=\"add-circle\"></ion-icon>\n        </button>\n      </div>\n    </div>\n\n    <!-- Compact Table View (replaces desktop table and mobile cards) -->\n    <div *ngIf=\"!loading && facturas.length > 0\" class=\"compact-facturas-table\">\n      <div class=\"facturas-table\">\n        <div class=\"table-header\">\n          <div class=\"header-row\">\n            <div class=\"header-cell\">Número</div>\n            <div class=\"header-cell desktop-only\">Estado</div>\n            <div class=\"header-cell\">Cliente</div>\n            <div class=\"header-cell\">Descripción</div>\n            <div class=\"header-cell desktop-only\">Fecha</div>\n            <div class=\"header-cell desktop-only\">PVP</div>\n            <div class=\"header-cell\">Acciones</div>\n          </div>\n        </div>\n        <div class=\"table-body\">\n          <div *ngFor=\"let factura of facturas\" class=\"factura-row\" [ngClass]=\"{\n                 'en-curso': factura.estado === 'En curso',\n                 'pendiente': factura.estado === 'Pendiente',\n                 'completado': factura.estado === 'Completado'\n               }\">\n            <div class=\"factura-cell numero-factura\">#{{ factura.numero_factura }}</div>\n            <div class=\"factura-cell estado-factura desktop-only\">\n              <span class=\"badge\" [ngClass]=\"{\n                      'yellow': factura.estado === 'En curso',\n                      'red': factura.estado === 'Pendiente',\n                      'green': factura.estado === 'Completado'\n                    }\">\n                {{ factura.estado }}\n              </span>\n            </div>\n            <div class=\"factura-cell nombre-cliente\">{{ factura.nombre_cliente }}</div>\n            <div class=\"factura-cell descripcion-factura\">\n              <div class=\"descripcion-texto\" [title]=\"factura.notas || 'Sin descripción'\">\n                {{ factura.notas || 'Sin descripción' }}\n              </div>\n            </div>\n            <div class=\"factura-cell fecha-factura desktop-only\">{{ factura.fecha_emision | date:'dd/MM/yyyy' }}</div>\n            <div class=\"factura-cell pvp-factura desktop-only\">{{ factura.total | currency:'EUR':'symbol':'1.2-2' }}</div>\n            <div class=\"factura-cell acciones\">\n              <button class=\"btn-ver\" title=\"Ver detalles\" (click)=\"verFactura(factura.id!)\">\n                <ion-icon name=\"eye-outline\"></ion-icon>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Estado de datos vacíos -->\n    <div *ngIf=\"facturas.length === 0 && !loading\" class=\"no-data-container\">\n      <div class=\"no-data-message\">\n        <ion-icon name=\"receipt-outline\"></ion-icon>\n        <h3>No hay facturas</h3>\n        <p>Aún no se han creado facturas. Crea la primera para comenzar.</p>\n        <button class=\"btn-create\" (click)=\"abrirCrearFactura()\">\n          <ion-icon name=\"add-circle\"></ion-icon>\n          Crear factura\n        </button>\n      </div>\n    </div>\n\n    <!-- Pagination -->\n    <div *ngIf=\"facturas.length > 0 && totalFacturas > 0\" class=\"table-pagination\">\n      <span class=\"pagination-info\">\n        Mostrando datos {{ (paginaActual - 1) * porPagina + 1 }} a {{ Math.min(paginaActual * porPagina, totalFacturas) }} de {{ totalFacturas }} facturas\n      </span>\n      <div class=\"pagination\">\n        <button \n          *ngFor=\"let pagina of getPaginas()\" \n          [class.active]=\"pagina === paginaActual\"\n          (click)=\"onCambiarPagina(pagina)\"\n          [disabled]=\"pagina === '...'\">\n          {{ pagina }}\n        </button>\n      </div>\n    </div>\n  </section>\n</ion-content>\n"],
  "mappings": "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",
  "names": []
}
