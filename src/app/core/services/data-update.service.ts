import { Injectable } from '@angular/core';
import { CacheService } from './cache.service';

@Injectable({
  providedIn: 'root'
})
export class DataUpdateService {

  constructor(private cacheService: CacheService) {}

  /**
   * Notifica que se ha creado un nuevo elemento
   * Limpia el cache relacionado para forzar recarga
   */
  notifyCreated(module: string): void {
    console.log(`üÜï Notifying creation in module: ${module}`);
    this.clearModuleCache(module);
  }

  /**
   * Notifica que se ha actualizado un elemento
   * Limpia el cache relacionado para forzar recarga
   */
  notifyUpdated(module: string): void {
    console.log(`üîÑ Notifying update in module: ${module}`);
    this.clearModuleCache(module);
  }

  /**
   * Notifica que se ha eliminado un elemento
   * Limpia el cache relacionado para forzar recarga
   */
  notifyDeleted(module: string): void {
    console.log(`üóëÔ∏è Notifying deletion in module: ${module}`);
    this.clearModuleCache(module);
  }

  /**
   * Limpia el cache de un m√≥dulo espec√≠fico
   */
  private clearModuleCache(module: string): void {
    this.cacheService.clearCache(module);
  }

  /**
   * Limpia todo el cache de datos din√°micos
   * √ötil cuando se hacen cambios que afectan a m√∫ltiples m√≥dulos
   */
  clearAllDataCache(): void {
    console.log('üßπ Clearing all data cache');
    this.cacheService.clearAllDataCache();
  }

  /**
   * Limpia cache de m√∫ltiples m√≥dulos
   * √ötil cuando una operaci√≥n afecta a varios m√≥dulos
   */
  clearMultipleModules(modules: string[]): void {
    console.log(`üßπ Clearing cache for modules: ${modules.join(', ')}`);
    this.cacheService.clearMultipleCaches(modules);
  }
} 