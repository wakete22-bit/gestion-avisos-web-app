// ============================================================================
// SAFE AREAS UTILITIES
// ============================================================================
// Utilidades para manejar zonas seguras en dispositivos móviles
// Compatible con Android (navigation bar) e iOS (notch, home indicator)

// Variables CSS para zonas seguras
:root {
  // Valores por defecto para navegadores que no soportan env()
  --safe-area-top: 0px;
  --safe-area-bottom: 0px;
  --safe-area-left: 0px;
  --safe-area-right: 0px;
  
  // Valores dinámicos usando env() cuando esté disponible
  --safe-area-top: env(safe-area-inset-top, 0px);
  --safe-area-bottom: env(safe-area-inset-bottom, 0px);
  --safe-area-left: env(safe-area-inset-left, 0px);
  --safe-area-right: env(safe-area-inset-right, 0px);
  
  // Márgenes mínimos para mejor UX (sin excesos)
  --safe-margin-top: calc(var(--safe-area-top) + 8px);
  --safe-margin-bottom: calc(var(--safe-area-bottom) + 12px);
  --safe-margin-left: calc(var(--safe-area-left) + 16px);
  --safe-margin-right: calc(var(--safe-area-right) + 16px);
}

// ============================================================================
// CLASES UTILITARIAS PARA ZONAS SEGURAS
// ============================================================================

// Contenido principal con zona segura superior
.content-safe-top {
  padding-top: var(--safe-area-top);
}

// Contenido principal con zona segura inferior
.content-safe-bottom {
  padding-bottom: var(--safe-area-bottom);
}

// Contenido principal con zonas seguras verticales
.content-safe-vertical {
  padding-top: var(--safe-area-top);
  padding-bottom: var(--safe-area-bottom);
}

// Contenido principal con todas las zonas seguras
.content-safe-all {
  padding-top: var(--safe-area-top);
  padding-bottom: var(--safe-area-bottom);
  padding-left: var(--safe-area-left);
  padding-right: var(--safe-area-right);
}

// Footer con zona segura (mínimo)
.footer-safe {
  padding-bottom: var(--safe-area-bottom);
}

// Header con zona segura (mínimo)
.header-safe {
  padding-top: var(--safe-area-top);
}

// Contenedor de botones con zona segura
.button-container-safe {
  padding-bottom: var(--safe-area-bottom);
}

// FAB con zona segura
.fab-container-safe {
  bottom: var(--safe-area-bottom);
}

// Modal con zonas seguras
.modal-safe {
  ion-header {
    padding-top: 0; // ion-header ya maneja esto
  }
  
  ion-footer {
    padding-bottom: 0; // ion-footer ya maneja esto
  }
}

// Overlay con zonas seguras
.overlay-safe {
  padding-top: var(--safe-area-top);
  padding-bottom: var(--safe-area-bottom);
}

// ============================================================================
// CONFIGURACIÓN ESPECÍFICA PARA PLATAFORMAS
// ============================================================================

// Configuración específica para iOS
.ios {
  :root {
    // En iOS, márgenes mínimos ya que ion-header/ion-footer manejan las zonas seguras
    --safe-margin-top: calc(var(--safe-area-top) + 4px);
    --safe-margin-bottom: calc(var(--safe-area-bottom) + 8px);
  }
  
  // Headers en iOS - sin padding adicional ya que ion-header lo maneja
  .header-safe {
    padding-top: var(--safe-area-top);
  }
  
  // Footers en iOS - sin padding adicional ya que ion-footer lo maneja
  .footer-safe {
    padding-bottom: var(--safe-area-bottom);
  }
  
  // Toolbars en iOS - altura mínima estándar
  ion-toolbar {
    --min-height: 56px;
    --height: 56px;
  }
  
  // Headers en iOS - sin padding adicional
  ion-header {
    padding-top: 0;
  }
  
  // Footers en iOS - sin padding adicional
  ion-footer {
    padding-bottom: 0;
  }
  
  // Header móvil específico para iOS - altura estándar
  .mobile-header {
    ion-toolbar {
      --min-height: 60px;
      --height: 60px;
      --padding-top: 0;
    }
  }
}

// Configuración específica para Android
.android {
  :root {
    // En Android, márgenes mínimos
    --safe-margin-top: calc(var(--safe-area-top) + 4px);
    --safe-margin-bottom: calc(var(--safe-area-bottom) + 8px);
  }
  
  // Headers en Android - sin padding adicional
  .header-safe {
    padding-top: var(--safe-area-top);
  }
  
  // Footers en Android - sin padding adicional
  .footer-safe {
    padding-bottom: var(--safe-area-bottom);
  }
  
  // Toolbars en Android - altura estándar
  ion-toolbar {
    --min-height: 56px;
  }
  
  // Header móvil específico para Android - altura estándar
  .mobile-header {
    ion-toolbar {
      --min-height: 60px;
      --height: 60px;
      --padding-top: 0;
    }
  }
}

// ============================================================================
// CONFIGURACIÓN PARA PWA STANDALONE
// ============================================================================

@media all and (display-mode: standalone) {
  :root {
    // En modo standalone, márgenes mínimos
    --safe-margin-top: calc(var(--safe-area-top) + 8px);
    --safe-margin-bottom: calc(var(--safe-area-bottom) + 12px);
  }
  
  // Headers en modo standalone - sin padding adicional
  .header-safe {
    padding-top: var(--safe-area-top);
  }
  
  // Footers en modo standalone - sin padding adicional
  .footer-safe {
    padding-bottom: var(--safe-area-bottom);
  }
  
  // Toolbars en modo standalone - altura estándar
  ion-toolbar {
    --min-height: 56px;
    --height: 56px;
  }
  
  // Header móvil en modo standalone - altura estándar
  .mobile-header {
    ion-toolbar {
      --min-height: 60px;
      --height: 60px;
      --padding-top: 0;
    }
  }
}

// ============================================================================
// CONFIGURACIÓN ESPECÍFICA PARA ORIENTACIÓN
// ============================================================================

// Orientación landscape
@media (orientation: landscape) {
  :root {
    // En landscape, las zonas seguras laterales son más importantes
    --safe-margin-left: calc(var(--safe-area-left) + 20px);
    --safe-margin-right: calc(var(--safe-area-right) + 20px);
  }
  
  // Contenido en landscape
  .content-safe-all {
    padding-left: var(--safe-margin-left);
    padding-right: var(--safe-margin-right);
  }
}

// Orientación portrait
@media (orientation: portrait) {
  :root {
    // En portrait, las zonas seguras verticales son más importantes
    --safe-margin-top: calc(var(--safe-area-top) + 4px);
    --safe-margin-bottom: calc(var(--safe-area-bottom) + 8px);
  }
}

// ============================================================================
// FALLBACKS PARA NAVEGADORES ANTIGUOS
// ============================================================================

// Fallback para navegadores que no soportan env()
@supports not (padding-top: env(safe-area-inset-top)) {
  :root {
    --safe-area-top: 20px;
    --safe-area-bottom: 20px;
    --safe-area-left: 0px;
    --safe-area-right: 0px;
  }
  
  // Aplicar fallbacks en modo standalone
  @media all and (display-mode: standalone) {
    :root {
      --safe-area-top: 24px;
      --safe-area-bottom: 24px;
    }
    
    .header-safe {
      padding-top: 24px;
    }
    
    .footer-safe {
      padding-bottom: 24px;
    }
    
    .mobile-header ion-toolbar {
      --min-height: 60px;
      --height: 60px;
      --padding-top: 24px;
    }
  }
  
  // Aplicar fallbacks en iOS
  .ios {
    :root {
      --safe-area-top: 28px;
      --safe-area-bottom: 28px;
    }
    
    .header-safe {
      padding-top: 28px;
    }
    
    .footer-safe {
      padding-bottom: 28px;
    }
    
    .mobile-header ion-toolbar {
      --min-height: 60px;
      --height: 60px;
      --padding-top: 28px;
    }
  }
  
  // Aplicar fallbacks en Android
  .android {
    :root {
      --safe-area-top: 24px;
      --safe-area-bottom: 24px;
    }
    
    .header-safe {
      padding-top: 24px;
    }
    
    .footer-safe {
      padding-bottom: 24px;
    }
    
    .mobile-header ion-toolbar {
      --min-height: 60px;
      --height: 60px;
      --padding-top: 24px;
    }
  }
}

// ============================================================================
// UTILIDADES ADICIONALES
// ============================================================================

// Clase para elementos que deben estar siempre visibles
.always-visible {
  position: relative;
  z-index: 1000;
}

// Clase para elementos que deben respetar zonas seguras
.safe-area-respect {
  padding-top: var(--safe-area-top);
  padding-bottom: var(--safe-area-bottom);
  padding-left: var(--safe-area-left);
  padding-right: var(--safe-area-right);
}

// Clase para elementos que deben estar en la parte superior segura
.safe-top {
  top: var(--safe-area-top);
}

// Clase para elementos que deben estar en la parte inferior segura
.safe-bottom {
  bottom: var(--safe-area-bottom);
}

// Clase para elementos que deben estar en la parte izquierda segura
.safe-left {
  left: var(--safe-area-left);
}

// Clase para elementos que deben estar en la parte derecha segura
.safe-right {
  right: var(--safe-area-right);
}
